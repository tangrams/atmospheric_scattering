(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.UxDaylight = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){
(function (process){
module.exports = AnytimePicker

var Emitter = _dereq_('events').EventEmitter
  , extend = _dereq_('lodash.assign')
  , throttle = _dereq_('lodash.throttle')
  , pad = _dereq_('pad-number')
  , moment = _dereq_('moment')
  , getYearList = _dereq_('./lib/get-year-list')
  , getTimeSeparator = _dereq_('./lib/get-time-separator')
  , createButton = _dereq_('./lib/create-button')
  , createSlider = _dereq_('./lib/create-slider')
  , getMonthDetails = _dereq_('./lib/get-month-details')
  , createMoment = _dereq_('./lib/create-moment')
  , defaults =
      { minYear: 1960
      , maxYear: 2030
      , offset: 5
      , initialValue: null
      , initialView: new Date()
      , format: 'h:mma on dddd D MMMM YYYY'
      , moment: moment
      , minuteIncrement: 1
      , showTime: true
      , timeSliders: false
      , shortMonthNames: true
      , doneText: 'Done'
      , clearText: 'Clear'
      , timeSlidersText: 'Time:'
      , timeSlidersHourText: 'Hour:'
      , timeSlidersMinuteText: 'Minute:'
      }

function AnytimePicker(options) {
  this.options = extend({}, defaults, options)

  Emitter.call(this)

  // A place to store references to event callback functions so they can be specifically unbound later on
  this.__events = {}

  this.el = document.createElement('div')
  this.el.className = 'js-anytime-picker anytime-picker'

  this.options.initialValue = this.getInitialValue()

  var initialView = this.createMoment(this.options.initialValue || this.options.initialView)
  this.currentView = { month: initialView.month(), year: initialView.year() }

  this.value = this.options.initialValue ? this.createMoment(this.options.initialValue).seconds(0).milliseconds(0) : null

  if (this.value && !this.options.showTime) {
    this.value = this.value.hour(0).minute(0)
  }

  this.monthNames = this.getMonthNames()

  this.el.addEventListener('click', function (e) {
    if (e.target.classList.contains('js-anytime-picker-day')) {
      e.stopPropagation()
      this.update(function (value) {
        return value
          .date(parseInt(e.target.getAttribute('data-date'), 10))
          .month(parseInt(e.target.getAttribute('data-month'), 10))
          .year(parseInt(e.target.getAttribute('data-year'), 10))
      })
    }
  }.bind(this))

  // If the target element is within a form element this stops button clicks from submitting it
  this.el.addEventListener('click', function (e) { e.preventDefault() })

  this.__events['misc toggle'] = this.toggle.bind(this)
  if (this.options.button) this.options.button.addEventListener('click', this.__events['misc toggle'])
  this.options.input.addEventListener('click', this.__events['misc toggle'])

  this.root = this.options.anchor ? this.options.anchor : this.options.input

  if (this.options.input) {
    this.updateInput(this)
    this.on('change', this.updateInput.bind(this))
  }
}

AnytimePicker.prototype = Object.create(Emitter.prototype)

AnytimePicker.prototype.createMoment = createMoment

AnytimePicker.prototype.updateInput = function () {
  this.options.input.value = this.value ? this.value.format(this.options.format) : ''
}

AnytimePicker.prototype.getInitialValue = function () {
  if (this.options.initialValue) return this.options.initialValue
  if (this.options.input && this.options.input.value) return this.options.input.value
  return null
}

AnytimePicker.prototype.getMonthNames = function () {
  return this.options.moment[this.options.shortMonthNames ? 'monthsShort' : 'months']()
}

AnytimePicker.prototype.update = function (update) {
  if (update === null || update === undefined) {
    this.value = null
    this.updateDisplay()
    this.emit('change', null)
    return
  }

  if (typeof update !== 'function') {
    var newVal = update
    update = function () { return this.createMoment(newVal) }.bind(this)
  }

  var updated = update(this.value || this.createMoment())
  this.value = updated

  if (!this.options.showTime) {
    this.value = this.value.hour(0).minute(0)
  }

  this.currentView = { month: this.value.month(), year: this.value.year() }
  this.updateDisplay()
  this.emit('change', this.value.toDate())
}

AnytimePicker.prototype.render = function () {
  // Header
  var header = document.createElement('div')
  header.classList.add('anytime-picker__header')
  this.renderHeader(header)

  // Dates
  var dates = document.createElement('div')
  dates.classList.add('anytime-picker__dates')
  dates.classList.add('js-anytime-picker-dates')

  // Time
  var time
  if (this.options.showTime) {
    time = document.createElement('div')
    time.classList.add('anytime-picker__time')
    time.classList.add('js-anytime-picker-time')
    this.renderTimeInput(time)
  }

  // Footer
  var footer = document.createElement('div')
  footer.classList.add('anytime-picker__footer')
  this.renderFooter(footer)

  this.el.appendChild(header)
  this.el.appendChild(dates)
  if (this.options.showTime) this.el.appendChild(time)
  this.el.appendChild(footer)

  this.dateContainer = dates

  this.updateDisplay()

  return this
}

AnytimePicker.prototype.renderHeader = function (headerEl) {
  // Previous month button
  var prevBtn = createButton('<', [ 'anytime-picker__button', 'anytime-picker__button--prev' ])
  headerEl.appendChild(prevBtn)
  prevBtn.addEventListener('click', this.showPrevMonth.bind(this))

  // Months
  var monthSelect = document.createElement('select')
  monthSelect.classList.add('js-anytime-picker-month')
  monthSelect.classList.add('anytime-picker__dropdown')
  this.monthNames.forEach(function (month, i) {
    var monthOption = document.createElement('option')
    monthOption.textContent = month
    if (i === this.currentView.month) monthOption.selected = true
    monthSelect.appendChild(monthOption)
  }.bind(this))
  headerEl.appendChild(monthSelect)
  this.monthSelect = monthSelect

  monthSelect.addEventListener('change', function (e) {
    this.currentView.month = this.monthNames.indexOf(e.target.value)
    this.updateDisplay()
  }.bind(this))

  // Years
  var yearSelect = document.createElement('select')
  yearSelect.classList.add('js-anytime-picker-year')
  yearSelect.classList.add('anytime-picker__dropdown')
  getYearList(this.options.minYear, this.options.maxYear).forEach(function (year) {
    var yearOption = document.createElement('option')
    yearOption.textContent = year
    if (year === this.currentView.year) yearOption.selected = true
    yearSelect.appendChild(yearOption)
  }.bind(this))
  headerEl.appendChild(yearSelect)
  this.yearSelect = yearSelect

  yearSelect.addEventListener('change', function (e) {
    this.currentView.year = e.target.value
    this.updateDisplay()
  }.bind(this))

  // Next month button
  var nextBtn = createButton('>', [ 'anytime-picker__button', 'anytime-picker__button--next' ])
  headerEl.appendChild(nextBtn)
  nextBtn.addEventListener('click', this.showNextMonth.bind(this))
}

AnytimePicker.prototype.renderFooter = function (footerEl) {
  // "Done" button
  var doneBtn = createButton(this.options.doneText, [ 'anytime-picker__button', 'anytime-picker__button--done' ])
  footerEl.appendChild(doneBtn)
  doneBtn.addEventListener('click', this.hide.bind(this))

  // "Clear" button
  var clearBtn = createButton(this.options.clearText, [ 'anytime-picker__button', 'anytime-picker__button--clear' ])
  footerEl.appendChild(clearBtn)
  clearBtn.addEventListener('click', function () {
    this.update(null)
    this.hide()
  }.bind(this))
}

AnytimePicker.prototype.updateDisplay = function () {
  this.monthSelect.children[this.currentView.month].selected = true
  Array.prototype.slice.call(this.yearSelect.children).some(function (yearEl) {
    if (yearEl.textContent !== '' + this.currentView.year) return false
    yearEl.selected = true
    return true
  }.bind(this))

  var daysEl = document.createElement('div')
    , monthDetails = getMonthDetails(this.currentView.month, this.currentView.year)

  /*
   * Create the day column headers
   */
  function renderDayNames() {
    var names = this.options.moment.weekdaysMin()
    // Moment gives Sunday as the first item, but uses Monday as the first day of the week.
    // This is due to getMonthDetails returning the value of ISO weekday, which has Monday
    // as index 1 and Sunday at index 7. For this reason, Sunday is shifted from the from
    // of the array and pushed to the back.
    names.push(names.shift())
    names.forEach(function (d) {
      var dayName = document.createElement('span')
      dayName.textContent = d
      dayName.classList.add('anytime-picker__day-name')
      daysEl.appendChild(dayName)
    })
  }

  /*
   * Create the blank days ahead of the first day of the current month so that
   * the days appear in the corresponding columns of the days of the week
   */
  function padDays() {
    for (var x = 1; x < monthDetails.startDay; x++) {
      var blank = document.createElement('span')
      blank.textContent = ''
      daysEl.appendChild(blank)
    }
  }

  /*
   * Create a day element for each day of the current month
   */
  function populateDays() {
    var now = this.createMoment()
      , currentDayOfMonth = parseInt(now.format('D'), 10)
      , isCurrentMonth = parseInt(now.month(), 10) === this.currentView.month
      , isCurrentYear = parseInt(now.year(), 10) === this.currentView.year
      , selectedDayOfMonth = null
      , isSelectedCurrentMonth = false
      , isSelectedCurrentYear = false

    if (this.value) {
      selectedDayOfMonth = parseInt(this.value.format('D'), 10)
      isSelectedCurrentMonth =  parseInt(this.value.month(), 10) === this.currentView.month
      isSelectedCurrentYear =  parseInt(this.value.year(), 10) === this.currentView.year
    }

    for (var y = 1; y <= monthDetails.length; y++) {
      var date = createButton(y, [ 'anytime-picker__date', 'js-anytime-picker-day' ])

      if (y === currentDayOfMonth && isCurrentMonth && isCurrentYear) {
        date.classList.add('anytime-picker__date--current')
      }

      // Needs to add or remove because the current selected day can change
      // within the current month and need to be cleared from others
      var current = y === selectedDayOfMonth && isSelectedCurrentMonth && isSelectedCurrentYear
      date.classList.toggle('anytime-picker__date--selected', current)

      date.setAttribute('data-date', y)
      date.setAttribute('data-month', this.currentView.month)
      date.setAttribute('data-year', this.currentView.year)
      daysEl.appendChild(date)
    }
  }

  renderDayNames.call(this)
  padDays.call(this)
  populateDays.call(this)

  // Remove all of the old days
  Array.prototype.slice.call(this.dateContainer.children).forEach(function (child) {
    if (child.parentNode) child.parentNode.removeChild(child)
  })

  // Add all the new days
  Array.prototype.slice.call(daysEl.children).forEach(function (child) {
    this.dateContainer.appendChild(child)
  }.bind(this))

  if (this.value && this.timeEls) {
    this.timeEls.hours.value = this.value.hour() + ''
    this.timeEls.minutes.value = this.value.minute() + ''
    if (this.timeEls.hourLabel) this.timeEls.hourLabel.textContent = pad(this.value.hour(), 2)
    if (this.timeEls.minuteLabel) this.timeEls.minuteLabel.textContent = pad(this.value.minute(), 2)
  }
}

AnytimePicker.prototype.show = function () {
  this.root.offsetParent.appendChild(this.el)

  this.el.classList.add('anytime-picker--is-visible')

  this.updatePosition()

  this.__events['doc escape hide'] = function (e) {
    // Hide if escape is pressed
    if (e.keyCode === 27) this.hide()
  }.bind(this)

  this.__events['doc click hide'] = function (e) {
    // Hide if document outside of anytime is clicked
    if (e.target === this.el) return
    if (this.el.contains(e.target)) return
    this.hide()
  }.bind(this)

  this.__events['other anytime open'] = function (e) {
    // Hide if another instance is opened
    if (e.detail.instance !== this) this.hide()
  }.bind(this)

  this.__events['window resize position'] = throttle(function () {
    // Update position when window is resized
    this.updatePosition()
  }.bind(this), 100)

  process.nextTick(function () {
    document.addEventListener('keyup', this.__events['doc escape hide'])
    document.addEventListener('click', this.__events['doc click hide'])
    document.addEventListener('anytime::open', this.__events['other anytime open'])
    window.addEventListener('resize', this.__events['window resize position'])
    document.dispatchEvent(new CustomEvent('anytime::open', { detail: { instance: this } }))
  }.bind(this))
}

AnytimePicker.prototype.hide = function () {
  this.el.classList.remove('anytime-picker--is-visible')

  document.removeEventListener('keyup', this.__events['doc escape hide'])
  delete this.__events['doc escape hide']

  document.removeEventListener('click', this.__events['doc click hide'])
  delete this.__events['doc click hide']

  document.removeEventListener('anytime::open', this.__events['other anytime open'])
  delete this.__events['keyup other anytime open']

  window.removeEventListener('resize', this.__events['window resize position'])
  delete this.__events['window resize position']

  if (this.el.parentNode) this.el.parentNode.removeChild(this.el)
}

AnytimePicker.prototype.updatePosition = function () {
  var position = { top: this.root.offsetTop, left: this.root.offsetLeft }
  var topOffset = (position.top + this.root.offsetHeight + this.options.offset)
  var leftOffset = (position.left + this.root.offsetWidth - this.el.offsetWidth)

  if (leftOffset < 0) {
    leftOffset = 0
  }

  var transformValue = 'translate(' + leftOffset + 'px, ' + topOffset + 'px)'

  this.el.style.webkitTransform = transformValue
  this.el.style.transform = transformValue
  this.el.style.top = 0
  this.el.style.left = 0
}

AnytimePicker.prototype.toggle = function () {
  if (this.el.classList.contains('anytime-picker--is-visible')) {
    this.hide()
  } else {
    this.show()
  }
}

AnytimePicker.prototype.showPrevMonth = function () {
  if (this.currentView.month > 0) {
    this.currentView.month--
    this.updateDisplay()
    return
  }
  if (this.currentView.year - 1 > this.options.minYear) {
    this.currentView.month = 11
    this.currentView.year--
    this.updateDisplay()
  }
}

AnytimePicker.prototype.showNextMonth = function () {
  if (this.currentView.month < 11) {
    this.currentView.month++
    this.updateDisplay()
    return
  }
  if (this.currentView.year + 1 < this.options.maxYear) {
    this.currentView.month = 0
    this.currentView.year++
    this.updateDisplay()
  }
}

AnytimePicker.prototype.renderTimeSelect = function (timeEl) {
  var hourSelect = document.createElement('select')
  hourSelect.classList.add('anytime-picker__dropdown')
  hourSelect.classList.add('anytime-picker__dropdown--hours')
  for (var i = 0; i < 24; i++) {
    var hour = document.createElement('option')
    hour.value = i
    hour.textContent = pad(i, 2)
    if (this.createMoment(this.options.initialValue).hours() === i) hour.selected = true
    hourSelect.appendChild(hour)
  }

  hourSelect.addEventListener('change', function (e) {
    this.update(function (value) {
      return value.hours(e.target.value)
    })
  }.bind(this))

  timeEl.appendChild(hourSelect)

  var colonEl = getTimeSeparator()
  timeEl.appendChild(colonEl)

  var minuteSelect = document.createElement('select')
  minuteSelect.classList.add('anytime-picker__dropdown')
  minuteSelect.classList.add('anytime-picker__dropdown--minutes')
  for (var j = 0; j < 60; j += this.options.minuteIncrement) {
    var minute = document.createElement('option')
    minute.value = j
    minute.textContent = pad(j, 2)
    if (this.createMoment(this.options.initialValue).minutes() === j) minute.selected = true
    minuteSelect.appendChild(minute)
  }

  minuteSelect.addEventListener('change', function (e) {
    this.update(function (value) {
      return value.minutes(e.target.value)
    })
  }.bind(this))

  timeEl.appendChild(minuteSelect)

  this.timeEls = { hours: hourSelect, minutes: minuteSelect }
}

AnytimePicker.prototype.renderTimeSliders = function (timeEl) {
  /* jshint maxstatements: 28 */
  var timeLabelEl = document.createElement('p')
  timeLabelEl.classList.add('anytime-picker__time-label')

  var timeLabelTitleEl = document.createElement('span')
  timeLabelTitleEl.classList.add('anytime-picker__time-label--title')
  timeLabelEl.appendChild(timeLabelTitleEl)
  timeLabelTitleEl.textContent = this.options.timeSlidersText

  var timeLabelHourEl = document.createElement('span')
  timeLabelHourEl.classList.add('anytime-picker__time-label--hour')
  timeLabelEl.appendChild(timeLabelHourEl)
  timeLabelHourEl.textContent = pad(this.createMoment(this.options.initialValue).hours(), 2)

  var colonEl = getTimeSeparator()
  timeLabelEl.appendChild(colonEl)

  var timeLabelMinuteEl = document.createElement('span')
  timeLabelMinuteEl.classList.add('anytime-picker__time-label--minute')
  timeLabelEl.appendChild(timeLabelMinuteEl)
  timeLabelMinuteEl.textContent = pad(this.createMoment(this.options.initialValue).minutes(), 2)

  timeEl.appendChild(timeLabelEl)

  var hourSlider = createSlider(
    { className: 'anytime-picker__slider--hours'
    , min: 0
    , max: 23
    , value: this.createMoment(this.options.initialValue).hours()
    , title: this.options.timeSlidersHourText
    })

  function updateHour(e) {
    this.update(function (value) {
      return value.hours(e.target.value)
    })
    timeLabelHourEl.textContent = pad(e.target.value, 2)
  }

  hourSlider.addEventListener('change', updateHour.bind(this))
  hourSlider.addEventListener('input', updateHour.bind(this))

  timeEl.appendChild(hourSlider)

  var minuteSlider = createSlider(
    { className: 'anytime-picker__slider--minutes'
    , min: 0
    , max: 59
    , value: this.createMoment(this.options.initialValue).minutes()
    , title: this.options.timeSlidersMinuteText
    })

  function updateMinute(e) {
    this.update(function (value) {
      return value.minutes(e.target.value)
    })
    timeLabelMinuteEl.textContent = pad(e.target.value, 2)
  }

  minuteSlider.addEventListener('change', updateMinute.bind(this))
  minuteSlider.addEventListener('input', updateMinute.bind(this))

  timeEl.appendChild(minuteSlider)

  this.timeEls =
    { hours: hourSlider
    , minutes: minuteSlider
    , hourLabel: timeLabelHourEl
    , minuteLabel: timeLabelMinuteEl
    }
}

AnytimePicker.prototype.renderTimeInput = function (timeEl) {
  if (this.options.showTime) {
    if (this.options.timeSliders) {
      this.renderTimeSliders(timeEl)
    } else {
      this.renderTimeSelect(timeEl)
    }
  }
}

AnytimePicker.prototype.destroy = function () {
  if (this.el) {
    this.hide()
    this.emit('destroy')
    this.removeAllListeners()
    if (this.options.button) this.options.button.removeEventListener('click', this.__events['misc toggle'])
    this.options.input.removeEventListener('click', this.__events['misc toggle'])
    delete this.__events['misc toggle']
    this.el = null
  }
}

}).call(this,_dereq_('_process'))

},{"./lib/create-button":2,"./lib/create-moment":3,"./lib/create-slider":4,"./lib/get-month-details":5,"./lib/get-time-separator":6,"./lib/get-year-list":7,"_process":9,"events":10,"lodash.assign":12,"lodash.throttle":13,"moment":14,"pad-number":15}],2:[function(_dereq_,module,exports){
module.exports = createButton

function createButton(text, classes) {
  var button = document.createElement('button')
  classes.forEach(function (c) { button.classList.add(c) })
  button.textContent = text
  return button
}

},{}],3:[function(_dereq_,module,exports){
module.exports = createMoment

function createMoment(value) {
  var m = this.options.moment
    , args = [ value !== null ? value : undefined ]
  if (typeof value === 'string') args.push(this.options.format)
  if (this.options.timezone && typeof m.tz === 'function') {
    args.push(this.options.timezone)
    return m.tz.apply(m, args)
  }
  return m.apply(null, args)
}

},{}],4:[function(_dereq_,module,exports){
module.exports = createSlider

function createSlider(options) {

  var sliderEl = document.createElement('div')
  sliderEl.classList.add('anytime-picker__slider')
  sliderEl.classList.add(options.className)

  var sliderTitleEl = document.createElement('span')
  sliderTitleEl.classList.add('anytime-picker__slider--title')
  sliderTitleEl.textContent = options.title

  sliderEl.appendChild(sliderTitleEl)

  var sliderInputEl = document.createElement('input')
  sliderInputEl.classList.add('anytime-picker__slider--input')
  sliderInputEl.type = 'range'
  sliderInputEl.min = options.min
  sliderInputEl.max = options.max
  sliderInputEl.value = options.value

  sliderEl.appendChild(sliderInputEl)

  return sliderEl

}

},{}],5:[function(_dereq_,module,exports){
module.exports = getMonthDetails

var moment = _dereq_('moment')

/*
 * Given the year and month, this function returns which day of the
 * week that month starts, and how many days it has.
 */
function getMonthDetails(month, year) {
  var start = moment({ year: year, month: month })
  return { startDay: start.isoWeekday(), length: start.endOf('month').date() }
}

},{"moment":14}],6:[function(_dereq_,module,exports){
module.exports = getTimeSeparator

function getTimeSeparator() {
  var colonEl = document.createElement('span')
  colonEl.classList.add('anytime-picker__time-separator')
  colonEl.textContent = ':'
  return colonEl
}

},{}],7:[function(_dereq_,module,exports){
module.exports = getYearList

function getYearList(min, max) {
  if (parseInt(min, 10) !== min || parseInt(max, 10) !== max) throw new Error('min and max years must be integers')
  if (min > max) throw new Error('min year must be before max year')
  var years = []
  for (var i = min; i <= max; i++) years.push(i)
  return years
}

},{}],8:[function(_dereq_,module,exports){
"use strict";

exports["default"] = function (obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
};

exports.__esModule = true;
},{}],9:[function(_dereq_,module,exports){
// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };

},{}],10:[function(_dereq_,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

function EventEmitter() {
  this._events = this._events || {};
  this._maxListeners = this._maxListeners || undefined;
}
module.exports = EventEmitter;

// Backwards-compat with node 0.10.x
EventEmitter.EventEmitter = EventEmitter;

EventEmitter.prototype._events = undefined;
EventEmitter.prototype._maxListeners = undefined;

// By default EventEmitters will print a warning if more than 10 listeners are
// added to it. This is a useful default which helps finding memory leaks.
EventEmitter.defaultMaxListeners = 10;

// Obviously not all Emitters should be limited to 10. This function allows
// that to be increased. Set to zero for unlimited.
EventEmitter.prototype.setMaxListeners = function(n) {
  if (!isNumber(n) || n < 0 || isNaN(n))
    throw TypeError('n must be a positive number');
  this._maxListeners = n;
  return this;
};

EventEmitter.prototype.emit = function(type) {
  var er, handler, len, args, i, listeners;

  if (!this._events)
    this._events = {};

  // If there is no 'error' event listener then throw.
  if (type === 'error') {
    if (!this._events.error ||
        (isObject(this._events.error) && !this._events.error.length)) {
      er = arguments[1];
      if (er instanceof Error) {
        throw er; // Unhandled 'error' event
      }
      throw TypeError('Uncaught, unspecified "error" event.');
    }
  }

  handler = this._events[type];

  if (isUndefined(handler))
    return false;

  if (isFunction(handler)) {
    switch (arguments.length) {
      // fast cases
      case 1:
        handler.call(this);
        break;
      case 2:
        handler.call(this, arguments[1]);
        break;
      case 3:
        handler.call(this, arguments[1], arguments[2]);
        break;
      // slower
      default:
        len = arguments.length;
        args = new Array(len - 1);
        for (i = 1; i < len; i++)
          args[i - 1] = arguments[i];
        handler.apply(this, args);
    }
  } else if (isObject(handler)) {
    len = arguments.length;
    args = new Array(len - 1);
    for (i = 1; i < len; i++)
      args[i - 1] = arguments[i];

    listeners = handler.slice();
    len = listeners.length;
    for (i = 0; i < len; i++)
      listeners[i].apply(this, args);
  }

  return true;
};

EventEmitter.prototype.addListener = function(type, listener) {
  var m;

  if (!isFunction(listener))
    throw TypeError('listener must be a function');

  if (!this._events)
    this._events = {};

  // To avoid recursion in the case that type === "newListener"! Before
  // adding it to the listeners, first emit "newListener".
  if (this._events.newListener)
    this.emit('newListener', type,
              isFunction(listener.listener) ?
              listener.listener : listener);

  if (!this._events[type])
    // Optimize the case of one listener. Don't need the extra array object.
    this._events[type] = listener;
  else if (isObject(this._events[type]))
    // If we've already got an array, just append.
    this._events[type].push(listener);
  else
    // Adding the second element, need to change to array.
    this._events[type] = [this._events[type], listener];

  // Check for listener leak
  if (isObject(this._events[type]) && !this._events[type].warned) {
    var m;
    if (!isUndefined(this._maxListeners)) {
      m = this._maxListeners;
    } else {
      m = EventEmitter.defaultMaxListeners;
    }

    if (m && m > 0 && this._events[type].length > m) {
      this._events[type].warned = true;
      console.error('(node) warning: possible EventEmitter memory ' +
                    'leak detected. %d listeners added. ' +
                    'Use emitter.setMaxListeners() to increase limit.',
                    this._events[type].length);
      if (typeof console.trace === 'function') {
        // not supported in IE 10
        console.trace();
      }
    }
  }

  return this;
};

EventEmitter.prototype.on = EventEmitter.prototype.addListener;

EventEmitter.prototype.once = function(type, listener) {
  if (!isFunction(listener))
    throw TypeError('listener must be a function');

  var fired = false;

  function g() {
    this.removeListener(type, g);

    if (!fired) {
      fired = true;
      listener.apply(this, arguments);
    }
  }

  g.listener = listener;
  this.on(type, g);

  return this;
};

// emits a 'removeListener' event iff the listener was removed
EventEmitter.prototype.removeListener = function(type, listener) {
  var list, position, length, i;

  if (!isFunction(listener))
    throw TypeError('listener must be a function');

  if (!this._events || !this._events[type])
    return this;

  list = this._events[type];
  length = list.length;
  position = -1;

  if (list === listener ||
      (isFunction(list.listener) && list.listener === listener)) {
    delete this._events[type];
    if (this._events.removeListener)
      this.emit('removeListener', type, listener);

  } else if (isObject(list)) {
    for (i = length; i-- > 0;) {
      if (list[i] === listener ||
          (list[i].listener && list[i].listener === listener)) {
        position = i;
        break;
      }
    }

    if (position < 0)
      return this;

    if (list.length === 1) {
      list.length = 0;
      delete this._events[type];
    } else {
      list.splice(position, 1);
    }

    if (this._events.removeListener)
      this.emit('removeListener', type, listener);
  }

  return this;
};

EventEmitter.prototype.removeAllListeners = function(type) {
  var key, listeners;

  if (!this._events)
    return this;

  // not listening for removeListener, no need to emit
  if (!this._events.removeListener) {
    if (arguments.length === 0)
      this._events = {};
    else if (this._events[type])
      delete this._events[type];
    return this;
  }

  // emit removeListener for all listeners on all events
  if (arguments.length === 0) {
    for (key in this._events) {
      if (key === 'removeListener') continue;
      this.removeAllListeners(key);
    }
    this.removeAllListeners('removeListener');
    this._events = {};
    return this;
  }

  listeners = this._events[type];

  if (isFunction(listeners)) {
    this.removeListener(type, listeners);
  } else {
    // LIFO order
    while (listeners.length)
      this.removeListener(type, listeners[listeners.length - 1]);
  }
  delete this._events[type];

  return this;
};

EventEmitter.prototype.listeners = function(type) {
  var ret;
  if (!this._events || !this._events[type])
    ret = [];
  else if (isFunction(this._events[type]))
    ret = [this._events[type]];
  else
    ret = this._events[type].slice();
  return ret;
};

EventEmitter.listenerCount = function(emitter, type) {
  var ret;
  if (!emitter._events || !emitter._events[type])
    ret = 0;
  else if (isFunction(emitter._events[type]))
    ret = 1;
  else
    ret = emitter._events[type].length;
  return ret;
};

function isFunction(arg) {
  return typeof arg === 'function';
}

function isNumber(arg) {
  return typeof arg === 'number';
}

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}

function isUndefined(arg) {
  return arg === void 0;
}

},{}],11:[function(_dereq_,module,exports){
(function (global){
(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.GlslCanvas = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof _dereq_=="function"&&_dereq_;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof _dereq_=="function"&&_dereq_;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){
module.exports = { "default": _dereq_("core-js/library/fn/array/from"), __esModule: true };
},{"core-js/library/fn/array/from":12}],2:[function(_dereq_,module,exports){
module.exports = { "default": _dereq_("core-js/library/fn/get-iterator"), __esModule: true };
},{"core-js/library/fn/get-iterator":13}],3:[function(_dereq_,module,exports){
module.exports = { "default": _dereq_("core-js/library/fn/object/assign"), __esModule: true };
},{"core-js/library/fn/object/assign":14}],4:[function(_dereq_,module,exports){
module.exports = { "default": _dereq_("core-js/library/fn/object/define-property"), __esModule: true };
},{"core-js/library/fn/object/define-property":15}],5:[function(_dereq_,module,exports){
module.exports = { "default": _dereq_("core-js/library/fn/object/keys"), __esModule: true };
},{"core-js/library/fn/object/keys":16}],6:[function(_dereq_,module,exports){
module.exports = { "default": _dereq_("core-js/library/fn/promise"), __esModule: true };
},{"core-js/library/fn/promise":17}],7:[function(_dereq_,module,exports){
module.exports = { "default": _dereq_("core-js/library/fn/set"), __esModule: true };
},{"core-js/library/fn/set":18}],8:[function(_dereq_,module,exports){
"use strict";

exports["default"] = function (instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
};

exports.__esModule = true;
},{}],9:[function(_dereq_,module,exports){
"use strict";

var _Object$defineProperty = _dereq_("babel-runtime/core-js/object/define-property")["default"];

exports["default"] = (function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;

      _Object$defineProperty(target, descriptor.key, descriptor);
    }
  }

  return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);
    if (staticProps) defineProperties(Constructor, staticProps);
    return Constructor;
  };
})();

exports.__esModule = true;
},{"babel-runtime/core-js/object/define-property":4}],10:[function(_dereq_,module,exports){
"use strict";

exports["default"] = function (obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
};

exports.__esModule = true;
},{}],11:[function(_dereq_,module,exports){
"use strict";

var _Array$from = _dereq_("babel-runtime/core-js/array/from")["default"];

exports["default"] = function (arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];

    return arr2;
  } else {
    return _Array$from(arr);
  }
};

exports.__esModule = true;
},{"babel-runtime/core-js/array/from":1}],12:[function(_dereq_,module,exports){
_dereq_('../../modules/es6.string.iterator');
_dereq_('../../modules/es6.array.from');
module.exports = _dereq_('../../modules/$.core').Array.from;
},{"../../modules/$.core":27,"../../modules/es6.array.from":74,"../../modules/es6.string.iterator":81}],13:[function(_dereq_,module,exports){
_dereq_('../modules/web.dom.iterable');
_dereq_('../modules/es6.string.iterator');
module.exports = _dereq_('../modules/core.get-iterator');
},{"../modules/core.get-iterator":73,"../modules/es6.string.iterator":81,"../modules/web.dom.iterable":83}],14:[function(_dereq_,module,exports){
_dereq_('../../modules/es6.object.assign');
module.exports = _dereq_('../../modules/$.core').Object.assign;
},{"../../modules/$.core":27,"../../modules/es6.object.assign":76}],15:[function(_dereq_,module,exports){
var $ = _dereq_('../../modules/$');
module.exports = function defineProperty(it, key, desc){
  return $.setDesc(it, key, desc);
};
},{"../../modules/$":49}],16:[function(_dereq_,module,exports){
_dereq_('../../modules/es6.object.keys');
module.exports = _dereq_('../../modules/$.core').Object.keys;
},{"../../modules/$.core":27,"../../modules/es6.object.keys":77}],17:[function(_dereq_,module,exports){
_dereq_('../modules/es6.object.to-string');
_dereq_('../modules/es6.string.iterator');
_dereq_('../modules/web.dom.iterable');
_dereq_('../modules/es6.promise');
module.exports = _dereq_('../modules/$.core').Promise;
},{"../modules/$.core":27,"../modules/es6.object.to-string":78,"../modules/es6.promise":79,"../modules/es6.string.iterator":81,"../modules/web.dom.iterable":83}],18:[function(_dereq_,module,exports){
_dereq_('../modules/es6.object.to-string');
_dereq_('../modules/es6.string.iterator');
_dereq_('../modules/web.dom.iterable');
_dereq_('../modules/es6.set');
_dereq_('../modules/es7.set.to-json');
module.exports = _dereq_('../modules/$.core').Set;
},{"../modules/$.core":27,"../modules/es6.object.to-string":78,"../modules/es6.set":80,"../modules/es6.string.iterator":81,"../modules/es7.set.to-json":82,"../modules/web.dom.iterable":83}],19:[function(_dereq_,module,exports){
module.exports = function(it){
  if(typeof it != 'function')throw TypeError(it + ' is not a function!');
  return it;
};
},{}],20:[function(_dereq_,module,exports){
module.exports = function(){ /* empty */ };
},{}],21:[function(_dereq_,module,exports){
var isObject = _dereq_('./$.is-object');
module.exports = function(it){
  if(!isObject(it))throw TypeError(it + ' is not an object!');
  return it;
};
},{"./$.is-object":42}],22:[function(_dereq_,module,exports){
// getting tag from 19.1.3.6 Object.prototype.toString()
var cof = _dereq_('./$.cof')
  , TAG = _dereq_('./$.wks')('toStringTag')
  // ES3 wrong here
  , ARG = cof(function(){ return arguments; }()) == 'Arguments';

module.exports = function(it){
  var O, T, B;
  return it === undefined ? 'Undefined' : it === null ? 'Null'
    // @@toStringTag case
    : typeof (T = (O = Object(it))[TAG]) == 'string' ? T
    // builtinTag case
    : ARG ? cof(O)
    // ES3 arguments fallback
    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
};
},{"./$.cof":23,"./$.wks":71}],23:[function(_dereq_,module,exports){
var toString = {}.toString;

module.exports = function(it){
  return toString.call(it).slice(8, -1);
};
},{}],24:[function(_dereq_,module,exports){
'use strict';
var $            = _dereq_('./$')
  , hide         = _dereq_('./$.hide')
  , redefineAll  = _dereq_('./$.redefine-all')
  , ctx          = _dereq_('./$.ctx')
  , strictNew    = _dereq_('./$.strict-new')
  , defined      = _dereq_('./$.defined')
  , forOf        = _dereq_('./$.for-of')
  , $iterDefine  = _dereq_('./$.iter-define')
  , step         = _dereq_('./$.iter-step')
  , ID           = _dereq_('./$.uid')('id')
  , $has         = _dereq_('./$.has')
  , isObject     = _dereq_('./$.is-object')
  , setSpecies   = _dereq_('./$.set-species')
  , DESCRIPTORS  = _dereq_('./$.descriptors')
  , isExtensible = Object.isExtensible || isObject
  , SIZE         = DESCRIPTORS ? '_s' : 'size'
  , id           = 0;

var fastKey = function(it, create){
  // return primitive with prefix
  if(!isObject(it))return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
  if(!$has(it, ID)){
    // can't set id to frozen object
    if(!isExtensible(it))return 'F';
    // not necessary to add id
    if(!create)return 'E';
    // add missing object id
    hide(it, ID, ++id);
  // return object id with prefix
  } return 'O' + it[ID];
};

var getEntry = function(that, key){
  // fast case
  var index = fastKey(key), entry;
  if(index !== 'F')return that._i[index];
  // frozen object case
  for(entry = that._f; entry; entry = entry.n){
    if(entry.k == key)return entry;
  }
};

module.exports = {
  getConstructor: function(wrapper, NAME, IS_MAP, ADDER){
    var C = wrapper(function(that, iterable){
      strictNew(that, C, NAME);
      that._i = $.create(null); // index
      that._f = undefined;      // first entry
      that._l = undefined;      // last entry
      that[SIZE] = 0;           // size
      if(iterable != undefined)forOf(iterable, IS_MAP, that[ADDER], that);
    });
    redefineAll(C.prototype, {
      // 23.1.3.1 Map.prototype.clear()
      // 23.2.3.2 Set.prototype.clear()
      clear: function clear(){
        for(var that = this, data = that._i, entry = that._f; entry; entry = entry.n){
          entry.r = true;
          if(entry.p)entry.p = entry.p.n = undefined;
          delete data[entry.i];
        }
        that._f = that._l = undefined;
        that[SIZE] = 0;
      },
      // 23.1.3.3 Map.prototype.delete(key)
      // 23.2.3.4 Set.prototype.delete(value)
      'delete': function(key){
        var that  = this
          , entry = getEntry(that, key);
        if(entry){
          var next = entry.n
            , prev = entry.p;
          delete that._i[entry.i];
          entry.r = true;
          if(prev)prev.n = next;
          if(next)next.p = prev;
          if(that._f == entry)that._f = next;
          if(that._l == entry)that._l = prev;
          that[SIZE]--;
        } return !!entry;
      },
      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)
      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)
      forEach: function forEach(callbackfn /*, that = undefined */){
        var f = ctx(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3)
          , entry;
        while(entry = entry ? entry.n : this._f){
          f(entry.v, entry.k, this);
          // revert to the last existing entry
          while(entry && entry.r)entry = entry.p;
        }
      },
      // 23.1.3.7 Map.prototype.has(key)
      // 23.2.3.7 Set.prototype.has(value)
      has: function has(key){
        return !!getEntry(this, key);
      }
    });
    if(DESCRIPTORS)$.setDesc(C.prototype, 'size', {
      get: function(){
        return defined(this[SIZE]);
      }
    });
    return C;
  },
  def: function(that, key, value){
    var entry = getEntry(that, key)
      , prev, index;
    // change existing entry
    if(entry){
      entry.v = value;
    // create new entry
    } else {
      that._l = entry = {
        i: index = fastKey(key, true), // <- index
        k: key,                        // <- key
        v: value,                      // <- value
        p: prev = that._l,             // <- previous entry
        n: undefined,                  // <- next entry
        r: false                       // <- removed
      };
      if(!that._f)that._f = entry;
      if(prev)prev.n = entry;
      that[SIZE]++;
      // add to index
      if(index !== 'F')that._i[index] = entry;
    } return that;
  },
  getEntry: getEntry,
  setStrong: function(C, NAME, IS_MAP){
    // add .keys, .values, .entries, [@@iterator]
    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11
    $iterDefine(C, NAME, function(iterated, kind){
      this._t = iterated;  // target
      this._k = kind;      // kind
      this._l = undefined; // previous
    }, function(){
      var that  = this
        , kind  = that._k
        , entry = that._l;
      // revert to the last existing entry
      while(entry && entry.r)entry = entry.p;
      // get next entry
      if(!that._t || !(that._l = entry = entry ? entry.n : that._t._f)){
        // or finish the iteration
        that._t = undefined;
        return step(1);
      }
      // return step by kind
      if(kind == 'keys'  )return step(0, entry.k);
      if(kind == 'values')return step(0, entry.v);
      return step(0, [entry.k, entry.v]);
    }, IS_MAP ? 'entries' : 'values' , !IS_MAP, true);

    // add [@@species], 23.1.2.2, 23.2.2.2
    setSpecies(NAME);
  }
};
},{"./$":49,"./$.ctx":28,"./$.defined":29,"./$.descriptors":30,"./$.for-of":34,"./$.has":36,"./$.hide":37,"./$.is-object":42,"./$.iter-define":45,"./$.iter-step":47,"./$.redefine-all":55,"./$.set-species":59,"./$.strict-new":63,"./$.uid":70}],25:[function(_dereq_,module,exports){
// https://github.com/DavidBruant/Map-Set.prototype.toJSON
var forOf   = _dereq_('./$.for-of')
  , classof = _dereq_('./$.classof');
module.exports = function(NAME){
  return function toJSON(){
    if(classof(this) != NAME)throw TypeError(NAME + "#toJSON isn't generic");
    var arr = [];
    forOf(this, false, arr.push, arr);
    return arr;
  };
};
},{"./$.classof":22,"./$.for-of":34}],26:[function(_dereq_,module,exports){
'use strict';
var $              = _dereq_('./$')
  , global         = _dereq_('./$.global')
  , $export        = _dereq_('./$.export')
  , fails          = _dereq_('./$.fails')
  , hide           = _dereq_('./$.hide')
  , redefineAll    = _dereq_('./$.redefine-all')
  , forOf          = _dereq_('./$.for-of')
  , strictNew      = _dereq_('./$.strict-new')
  , isObject       = _dereq_('./$.is-object')
  , setToStringTag = _dereq_('./$.set-to-string-tag')
  , DESCRIPTORS    = _dereq_('./$.descriptors');

module.exports = function(NAME, wrapper, methods, common, IS_MAP, IS_WEAK){
  var Base  = global[NAME]
    , C     = Base
    , ADDER = IS_MAP ? 'set' : 'add'
    , proto = C && C.prototype
    , O     = {};
  if(!DESCRIPTORS || typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function(){
    new C().entries().next();
  }))){
    // create collection constructor
    C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);
    redefineAll(C.prototype, methods);
  } else {
    C = wrapper(function(target, iterable){
      strictNew(target, C, NAME);
      target._c = new Base;
      if(iterable != undefined)forOf(iterable, IS_MAP, target[ADDER], target);
    });
    $.each.call('add,clear,delete,forEach,get,has,set,keys,values,entries'.split(','),function(KEY){
      var IS_ADDER = KEY == 'add' || KEY == 'set';
      if(KEY in proto && !(IS_WEAK && KEY == 'clear'))hide(C.prototype, KEY, function(a, b){
        if(!IS_ADDER && IS_WEAK && !isObject(a))return KEY == 'get' ? undefined : false;
        var result = this._c[KEY](a === 0 ? 0 : a, b);
        return IS_ADDER ? this : result;
      });
    });
    if('size' in proto)$.setDesc(C.prototype, 'size', {
      get: function(){
        return this._c.size;
      }
    });
  }

  setToStringTag(C, NAME);

  O[NAME] = C;
  $export($export.G + $export.W + $export.F, O);

  if(!IS_WEAK)common.setStrong(C, NAME, IS_MAP);

  return C;
};
},{"./$":49,"./$.descriptors":30,"./$.export":32,"./$.fails":33,"./$.for-of":34,"./$.global":35,"./$.hide":37,"./$.is-object":42,"./$.redefine-all":55,"./$.set-to-string-tag":60,"./$.strict-new":63}],27:[function(_dereq_,module,exports){
var core = module.exports = {version: '1.2.6'};
if(typeof __e == 'number')__e = core; // eslint-disable-line no-undef
},{}],28:[function(_dereq_,module,exports){
// optional / simple context binding
var aFunction = _dereq_('./$.a-function');
module.exports = function(fn, that, length){
  aFunction(fn);
  if(that === undefined)return fn;
  switch(length){
    case 1: return function(a){
      return fn.call(that, a);
    };
    case 2: return function(a, b){
      return fn.call(that, a, b);
    };
    case 3: return function(a, b, c){
      return fn.call(that, a, b, c);
    };
  }
  return function(/* ...args */){
    return fn.apply(that, arguments);
  };
};
},{"./$.a-function":19}],29:[function(_dereq_,module,exports){
// 7.2.1 RequireObjectCoercible(argument)
module.exports = function(it){
  if(it == undefined)throw TypeError("Can't call method on  " + it);
  return it;
};
},{}],30:[function(_dereq_,module,exports){
// Thank's IE8 for his funny defineProperty
module.exports = !_dereq_('./$.fails')(function(){
  return Object.defineProperty({}, 'a', {get: function(){ return 7; }}).a != 7;
});
},{"./$.fails":33}],31:[function(_dereq_,module,exports){
var isObject = _dereq_('./$.is-object')
  , document = _dereq_('./$.global').document
  // in old IE typeof document.createElement is 'object'
  , is = isObject(document) && isObject(document.createElement);
module.exports = function(it){
  return is ? document.createElement(it) : {};
};
},{"./$.global":35,"./$.is-object":42}],32:[function(_dereq_,module,exports){
var global    = _dereq_('./$.global')
  , core      = _dereq_('./$.core')
  , ctx       = _dereq_('./$.ctx')
  , PROTOTYPE = 'prototype';

var $export = function(type, name, source){
  var IS_FORCED = type & $export.F
    , IS_GLOBAL = type & $export.G
    , IS_STATIC = type & $export.S
    , IS_PROTO  = type & $export.P
    , IS_BIND   = type & $export.B
    , IS_WRAP   = type & $export.W
    , exports   = IS_GLOBAL ? core : core[name] || (core[name] = {})
    , target    = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE]
    , key, own, out;
  if(IS_GLOBAL)source = name;
  for(key in source){
    // contains in native
    own = !IS_FORCED && target && key in target;
    if(own && key in exports)continue;
    // export native or passed
    out = own ? target[key] : source[key];
    // prevent global pollution for namespaces
    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]
    // bind timers to global for call from export context
    : IS_BIND && own ? ctx(out, global)
    // wrap global constructors for prevent change them in library
    : IS_WRAP && target[key] == out ? (function(C){
      var F = function(param){
        return this instanceof C ? new C(param) : C(param);
      };
      F[PROTOTYPE] = C[PROTOTYPE];
      return F;
    // make static versions for prototype methods
    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
    if(IS_PROTO)(exports[PROTOTYPE] || (exports[PROTOTYPE] = {}))[key] = out;
  }
};
// type bitmap
$export.F = 1;  // forced
$export.G = 2;  // global
$export.S = 4;  // static
$export.P = 8;  // proto
$export.B = 16; // bind
$export.W = 32; // wrap
module.exports = $export;
},{"./$.core":27,"./$.ctx":28,"./$.global":35}],33:[function(_dereq_,module,exports){
module.exports = function(exec){
  try {
    return !!exec();
  } catch(e){
    return true;
  }
};
},{}],34:[function(_dereq_,module,exports){
var ctx         = _dereq_('./$.ctx')
  , call        = _dereq_('./$.iter-call')
  , isArrayIter = _dereq_('./$.is-array-iter')
  , anObject    = _dereq_('./$.an-object')
  , toLength    = _dereq_('./$.to-length')
  , getIterFn   = _dereq_('./core.get-iterator-method');
module.exports = function(iterable, entries, fn, that){
  var iterFn = getIterFn(iterable)
    , f      = ctx(fn, that, entries ? 2 : 1)
    , index  = 0
    , length, step, iterator;
  if(typeof iterFn != 'function')throw TypeError(iterable + ' is not iterable!');
  // fast case for arrays with default iterator
  if(isArrayIter(iterFn))for(length = toLength(iterable.length); length > index; index++){
    entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);
  } else for(iterator = iterFn.call(iterable); !(step = iterator.next()).done; ){
    call(iterator, f, step.value, entries);
  }
};
},{"./$.an-object":21,"./$.ctx":28,"./$.is-array-iter":41,"./$.iter-call":43,"./$.to-length":68,"./core.get-iterator-method":72}],35:[function(_dereq_,module,exports){
// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
var global = module.exports = typeof window != 'undefined' && window.Math == Math
  ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();
if(typeof __g == 'number')__g = global; // eslint-disable-line no-undef
},{}],36:[function(_dereq_,module,exports){
var hasOwnProperty = {}.hasOwnProperty;
module.exports = function(it, key){
  return hasOwnProperty.call(it, key);
};
},{}],37:[function(_dereq_,module,exports){
var $          = _dereq_('./$')
  , createDesc = _dereq_('./$.property-desc');
module.exports = _dereq_('./$.descriptors') ? function(object, key, value){
  return $.setDesc(object, key, createDesc(1, value));
} : function(object, key, value){
  object[key] = value;
  return object;
};
},{"./$":49,"./$.descriptors":30,"./$.property-desc":54}],38:[function(_dereq_,module,exports){
module.exports = _dereq_('./$.global').document && document.documentElement;
},{"./$.global":35}],39:[function(_dereq_,module,exports){
// fast apply, http://jsperf.lnkit.com/fast-apply/5
module.exports = function(fn, args, that){
  var un = that === undefined;
  switch(args.length){
    case 0: return un ? fn()
                      : fn.call(that);
    case 1: return un ? fn(args[0])
                      : fn.call(that, args[0]);
    case 2: return un ? fn(args[0], args[1])
                      : fn.call(that, args[0], args[1]);
    case 3: return un ? fn(args[0], args[1], args[2])
                      : fn.call(that, args[0], args[1], args[2]);
    case 4: return un ? fn(args[0], args[1], args[2], args[3])
                      : fn.call(that, args[0], args[1], args[2], args[3]);
  } return              fn.apply(that, args);
};
},{}],40:[function(_dereq_,module,exports){
// fallback for non-array-like ES3 and non-enumerable old V8 strings
var cof = _dereq_('./$.cof');
module.exports = Object('z').propertyIsEnumerable(0) ? Object : function(it){
  return cof(it) == 'String' ? it.split('') : Object(it);
};
},{"./$.cof":23}],41:[function(_dereq_,module,exports){
// check on default Array iterator
var Iterators  = _dereq_('./$.iterators')
  , ITERATOR   = _dereq_('./$.wks')('iterator')
  , ArrayProto = Array.prototype;

module.exports = function(it){
  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);
};
},{"./$.iterators":48,"./$.wks":71}],42:[function(_dereq_,module,exports){
module.exports = function(it){
  return typeof it === 'object' ? it !== null : typeof it === 'function';
};
},{}],43:[function(_dereq_,module,exports){
// call something on iterator step with safe closing on error
var anObject = _dereq_('./$.an-object');
module.exports = function(iterator, fn, value, entries){
  try {
    return entries ? fn(anObject(value)[0], value[1]) : fn(value);
  // 7.4.6 IteratorClose(iterator, completion)
  } catch(e){
    var ret = iterator['return'];
    if(ret !== undefined)anObject(ret.call(iterator));
    throw e;
  }
};
},{"./$.an-object":21}],44:[function(_dereq_,module,exports){
'use strict';
var $              = _dereq_('./$')
  , descriptor     = _dereq_('./$.property-desc')
  , setToStringTag = _dereq_('./$.set-to-string-tag')
  , IteratorPrototype = {};

// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
_dereq_('./$.hide')(IteratorPrototype, _dereq_('./$.wks')('iterator'), function(){ return this; });

module.exports = function(Constructor, NAME, next){
  Constructor.prototype = $.create(IteratorPrototype, {next: descriptor(1, next)});
  setToStringTag(Constructor, NAME + ' Iterator');
};
},{"./$":49,"./$.hide":37,"./$.property-desc":54,"./$.set-to-string-tag":60,"./$.wks":71}],45:[function(_dereq_,module,exports){
'use strict';
var LIBRARY        = _dereq_('./$.library')
  , $export        = _dereq_('./$.export')
  , redefine       = _dereq_('./$.redefine')
  , hide           = _dereq_('./$.hide')
  , has            = _dereq_('./$.has')
  , Iterators      = _dereq_('./$.iterators')
  , $iterCreate    = _dereq_('./$.iter-create')
  , setToStringTag = _dereq_('./$.set-to-string-tag')
  , getProto       = _dereq_('./$').getProto
  , ITERATOR       = _dereq_('./$.wks')('iterator')
  , BUGGY          = !([].keys && 'next' in [].keys()) // Safari has buggy iterators w/o `next`
  , FF_ITERATOR    = '@@iterator'
  , KEYS           = 'keys'
  , VALUES         = 'values';

var returnThis = function(){ return this; };

module.exports = function(Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED){
  $iterCreate(Constructor, NAME, next);
  var getMethod = function(kind){
    if(!BUGGY && kind in proto)return proto[kind];
    switch(kind){
      case KEYS: return function keys(){ return new Constructor(this, kind); };
      case VALUES: return function values(){ return new Constructor(this, kind); };
    } return function entries(){ return new Constructor(this, kind); };
  };
  var TAG        = NAME + ' Iterator'
    , DEF_VALUES = DEFAULT == VALUES
    , VALUES_BUG = false
    , proto      = Base.prototype
    , $native    = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT]
    , $default   = $native || getMethod(DEFAULT)
    , methods, key;
  // Fix native
  if($native){
    var IteratorPrototype = getProto($default.call(new Base));
    // Set @@toStringTag to native iterators
    setToStringTag(IteratorPrototype, TAG, true);
    // FF fix
    if(!LIBRARY && has(proto, FF_ITERATOR))hide(IteratorPrototype, ITERATOR, returnThis);
    // fix Array#{values, @@iterator}.name in V8 / FF
    if(DEF_VALUES && $native.name !== VALUES){
      VALUES_BUG = true;
      $default = function values(){ return $native.call(this); };
    }
  }
  // Define iterator
  if((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])){
    hide(proto, ITERATOR, $default);
  }
  // Plug for library
  Iterators[NAME] = $default;
  Iterators[TAG]  = returnThis;
  if(DEFAULT){
    methods = {
      values:  DEF_VALUES  ? $default : getMethod(VALUES),
      keys:    IS_SET      ? $default : getMethod(KEYS),
      entries: !DEF_VALUES ? $default : getMethod('entries')
    };
    if(FORCED)for(key in methods){
      if(!(key in proto))redefine(proto, key, methods[key]);
    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
  }
  return methods;
};
},{"./$":49,"./$.export":32,"./$.has":36,"./$.hide":37,"./$.iter-create":44,"./$.iterators":48,"./$.library":50,"./$.redefine":56,"./$.set-to-string-tag":60,"./$.wks":71}],46:[function(_dereq_,module,exports){
var ITERATOR     = _dereq_('./$.wks')('iterator')
  , SAFE_CLOSING = false;

try {
  var riter = [7][ITERATOR]();
  riter['return'] = function(){ SAFE_CLOSING = true; };
  Array.from(riter, function(){ throw 2; });
} catch(e){ /* empty */ }

module.exports = function(exec, skipClosing){
  if(!skipClosing && !SAFE_CLOSING)return false;
  var safe = false;
  try {
    var arr  = [7]
      , iter = arr[ITERATOR]();
    iter.next = function(){ safe = true; };
    arr[ITERATOR] = function(){ return iter; };
    exec(arr);
  } catch(e){ /* empty */ }
  return safe;
};
},{"./$.wks":71}],47:[function(_dereq_,module,exports){
module.exports = function(done, value){
  return {value: value, done: !!done};
};
},{}],48:[function(_dereq_,module,exports){
module.exports = {};
},{}],49:[function(_dereq_,module,exports){
var $Object = Object;
module.exports = {
  create:     $Object.create,
  getProto:   $Object.getPrototypeOf,
  isEnum:     {}.propertyIsEnumerable,
  getDesc:    $Object.getOwnPropertyDescriptor,
  setDesc:    $Object.defineProperty,
  setDescs:   $Object.defineProperties,
  getKeys:    $Object.keys,
  getNames:   $Object.getOwnPropertyNames,
  getSymbols: $Object.getOwnPropertySymbols,
  each:       [].forEach
};
},{}],50:[function(_dereq_,module,exports){
module.exports = true;
},{}],51:[function(_dereq_,module,exports){
var global    = _dereq_('./$.global')
  , macrotask = _dereq_('./$.task').set
  , Observer  = global.MutationObserver || global.WebKitMutationObserver
  , process   = global.process
  , Promise   = global.Promise
  , isNode    = _dereq_('./$.cof')(process) == 'process'
  , head, last, notify;

var flush = function(){
  var parent, domain, fn;
  if(isNode && (parent = process.domain)){
    process.domain = null;
    parent.exit();
  }
  while(head){
    domain = head.domain;
    fn     = head.fn;
    if(domain)domain.enter();
    fn(); // <- currently we use it only for Promise - try / catch not required
    if(domain)domain.exit();
    head = head.next;
  } last = undefined;
  if(parent)parent.enter();
};

// Node.js
if(isNode){
  notify = function(){
    process.nextTick(flush);
  };
// browsers with MutationObserver
} else if(Observer){
  var toggle = 1
    , node   = document.createTextNode('');
  new Observer(flush).observe(node, {characterData: true}); // eslint-disable-line no-new
  notify = function(){
    node.data = toggle = -toggle;
  };
// environments with maybe non-completely correct, but existent Promise
} else if(Promise && Promise.resolve){
  notify = function(){
    Promise.resolve().then(flush);
  };
// for other environments - macrotask based on:
// - setImmediate
// - MessageChannel
// - window.postMessag
// - onreadystatechange
// - setTimeout
} else {
  notify = function(){
    // strange IE + webpack dev server bug - use .call(global)
    macrotask.call(global, flush);
  };
}

module.exports = function asap(fn){
  var task = {fn: fn, next: undefined, domain: isNode && process.domain};
  if(last)last.next = task;
  if(!head){
    head = task;
    notify();
  } last = task;
};
},{"./$.cof":23,"./$.global":35,"./$.task":65}],52:[function(_dereq_,module,exports){
// 19.1.2.1 Object.assign(target, source, ...)
var $        = _dereq_('./$')
  , toObject = _dereq_('./$.to-object')
  , IObject  = _dereq_('./$.iobject');

// should work with symbols and should have deterministic property order (V8 bug)
module.exports = _dereq_('./$.fails')(function(){
  var a = Object.assign
    , A = {}
    , B = {}
    , S = Symbol()
    , K = 'abcdefghijklmnopqrst';
  A[S] = 7;
  K.split('').forEach(function(k){ B[k] = k; });
  return a({}, A)[S] != 7 || Object.keys(a({}, B)).join('') != K;
}) ? function assign(target, source){ // eslint-disable-line no-unused-vars
  var T     = toObject(target)
    , $$    = arguments
    , $$len = $$.length
    , index = 1
    , getKeys    = $.getKeys
    , getSymbols = $.getSymbols
    , isEnum     = $.isEnum;
  while($$len > index){
    var S      = IObject($$[index++])
      , keys   = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S)
      , length = keys.length
      , j      = 0
      , key;
    while(length > j)if(isEnum.call(S, key = keys[j++]))T[key] = S[key];
  }
  return T;
} : Object.assign;
},{"./$":49,"./$.fails":33,"./$.iobject":40,"./$.to-object":69}],53:[function(_dereq_,module,exports){
// most Object methods by ES6 should accept primitives
var $export = _dereq_('./$.export')
  , core    = _dereq_('./$.core')
  , fails   = _dereq_('./$.fails');
module.exports = function(KEY, exec){
  var fn  = (core.Object || {})[KEY] || Object[KEY]
    , exp = {};
  exp[KEY] = exec(fn);
  $export($export.S + $export.F * fails(function(){ fn(1); }), 'Object', exp);
};
},{"./$.core":27,"./$.export":32,"./$.fails":33}],54:[function(_dereq_,module,exports){
module.exports = function(bitmap, value){
  return {
    enumerable  : !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable    : !(bitmap & 4),
    value       : value
  };
};
},{}],55:[function(_dereq_,module,exports){
var redefine = _dereq_('./$.redefine');
module.exports = function(target, src){
  for(var key in src)redefine(target, key, src[key]);
  return target;
};
},{"./$.redefine":56}],56:[function(_dereq_,module,exports){
module.exports = _dereq_('./$.hide');
},{"./$.hide":37}],57:[function(_dereq_,module,exports){
// 7.2.9 SameValue(x, y)
module.exports = Object.is || function is(x, y){
  return x === y ? x !== 0 || 1 / x === 1 / y : x != x && y != y;
};
},{}],58:[function(_dereq_,module,exports){
// Works with __proto__ only. Old v8 can't work with null proto objects.
/* eslint-disable no-proto */
var getDesc  = _dereq_('./$').getDesc
  , isObject = _dereq_('./$.is-object')
  , anObject = _dereq_('./$.an-object');
var check = function(O, proto){
  anObject(O);
  if(!isObject(proto) && proto !== null)throw TypeError(proto + ": can't set as prototype!");
};
module.exports = {
  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line
    function(test, buggy, set){
      try {
        set = _dereq_('./$.ctx')(Function.call, getDesc(Object.prototype, '__proto__').set, 2);
        set(test, []);
        buggy = !(test instanceof Array);
      } catch(e){ buggy = true; }
      return function setPrototypeOf(O, proto){
        check(O, proto);
        if(buggy)O.__proto__ = proto;
        else set(O, proto);
        return O;
      };
    }({}, false) : undefined),
  check: check
};
},{"./$":49,"./$.an-object":21,"./$.ctx":28,"./$.is-object":42}],59:[function(_dereq_,module,exports){
'use strict';
var core        = _dereq_('./$.core')
  , $           = _dereq_('./$')
  , DESCRIPTORS = _dereq_('./$.descriptors')
  , SPECIES     = _dereq_('./$.wks')('species');

module.exports = function(KEY){
  var C = core[KEY];
  if(DESCRIPTORS && C && !C[SPECIES])$.setDesc(C, SPECIES, {
    configurable: true,
    get: function(){ return this; }
  });
};
},{"./$":49,"./$.core":27,"./$.descriptors":30,"./$.wks":71}],60:[function(_dereq_,module,exports){
var def = _dereq_('./$').setDesc
  , has = _dereq_('./$.has')
  , TAG = _dereq_('./$.wks')('toStringTag');

module.exports = function(it, tag, stat){
  if(it && !has(it = stat ? it : it.prototype, TAG))def(it, TAG, {configurable: true, value: tag});
};
},{"./$":49,"./$.has":36,"./$.wks":71}],61:[function(_dereq_,module,exports){
var global = _dereq_('./$.global')
  , SHARED = '__core-js_shared__'
  , store  = global[SHARED] || (global[SHARED] = {});
module.exports = function(key){
  return store[key] || (store[key] = {});
};
},{"./$.global":35}],62:[function(_dereq_,module,exports){
// 7.3.20 SpeciesConstructor(O, defaultConstructor)
var anObject  = _dereq_('./$.an-object')
  , aFunction = _dereq_('./$.a-function')
  , SPECIES   = _dereq_('./$.wks')('species');
module.exports = function(O, D){
  var C = anObject(O).constructor, S;
  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);
};
},{"./$.a-function":19,"./$.an-object":21,"./$.wks":71}],63:[function(_dereq_,module,exports){
module.exports = function(it, Constructor, name){
  if(!(it instanceof Constructor))throw TypeError(name + ": use the 'new' operator!");
  return it;
};
},{}],64:[function(_dereq_,module,exports){
var toInteger = _dereq_('./$.to-integer')
  , defined   = _dereq_('./$.defined');
// true  -> String#at
// false -> String#codePointAt
module.exports = function(TO_STRING){
  return function(that, pos){
    var s = String(defined(that))
      , i = toInteger(pos)
      , l = s.length
      , a, b;
    if(i < 0 || i >= l)return TO_STRING ? '' : undefined;
    a = s.charCodeAt(i);
    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
      ? TO_STRING ? s.charAt(i) : a
      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
  };
};
},{"./$.defined":29,"./$.to-integer":66}],65:[function(_dereq_,module,exports){
var ctx                = _dereq_('./$.ctx')
  , invoke             = _dereq_('./$.invoke')
  , html               = _dereq_('./$.html')
  , cel                = _dereq_('./$.dom-create')
  , global             = _dereq_('./$.global')
  , process            = global.process
  , setTask            = global.setImmediate
  , clearTask          = global.clearImmediate
  , MessageChannel     = global.MessageChannel
  , counter            = 0
  , queue              = {}
  , ONREADYSTATECHANGE = 'onreadystatechange'
  , defer, channel, port;
var run = function(){
  var id = +this;
  if(queue.hasOwnProperty(id)){
    var fn = queue[id];
    delete queue[id];
    fn();
  }
};
var listner = function(event){
  run.call(event.data);
};
// Node.js 0.9+ & IE10+ has setImmediate, otherwise:
if(!setTask || !clearTask){
  setTask = function setImmediate(fn){
    var args = [], i = 1;
    while(arguments.length > i)args.push(arguments[i++]);
    queue[++counter] = function(){
      invoke(typeof fn == 'function' ? fn : Function(fn), args);
    };
    defer(counter);
    return counter;
  };
  clearTask = function clearImmediate(id){
    delete queue[id];
  };
  // Node.js 0.8-
  if(_dereq_('./$.cof')(process) == 'process'){
    defer = function(id){
      process.nextTick(ctx(run, id, 1));
    };
  // Browsers with MessageChannel, includes WebWorkers
  } else if(MessageChannel){
    channel = new MessageChannel;
    port    = channel.port2;
    channel.port1.onmessage = listner;
    defer = ctx(port.postMessage, port, 1);
  // Browsers with postMessage, skip WebWorkers
  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
  } else if(global.addEventListener && typeof postMessage == 'function' && !global.importScripts){
    defer = function(id){
      global.postMessage(id + '', '*');
    };
    global.addEventListener('message', listner, false);
  // IE8-
  } else if(ONREADYSTATECHANGE in cel('script')){
    defer = function(id){
      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function(){
        html.removeChild(this);
        run.call(id);
      };
    };
  // Rest old browsers
  } else {
    defer = function(id){
      setTimeout(ctx(run, id, 1), 0);
    };
  }
}
module.exports = {
  set:   setTask,
  clear: clearTask
};
},{"./$.cof":23,"./$.ctx":28,"./$.dom-create":31,"./$.global":35,"./$.html":38,"./$.invoke":39}],66:[function(_dereq_,module,exports){
// 7.1.4 ToInteger
var ceil  = Math.ceil
  , floor = Math.floor;
module.exports = function(it){
  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
};
},{}],67:[function(_dereq_,module,exports){
// to indexed object, toObject with fallback for non-array-like ES3 strings
var IObject = _dereq_('./$.iobject')
  , defined = _dereq_('./$.defined');
module.exports = function(it){
  return IObject(defined(it));
};
},{"./$.defined":29,"./$.iobject":40}],68:[function(_dereq_,module,exports){
// 7.1.15 ToLength
var toInteger = _dereq_('./$.to-integer')
  , min       = Math.min;
module.exports = function(it){
  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
};
},{"./$.to-integer":66}],69:[function(_dereq_,module,exports){
// 7.1.13 ToObject(argument)
var defined = _dereq_('./$.defined');
module.exports = function(it){
  return Object(defined(it));
};
},{"./$.defined":29}],70:[function(_dereq_,module,exports){
var id = 0
  , px = Math.random();
module.exports = function(key){
  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
};
},{}],71:[function(_dereq_,module,exports){
var store  = _dereq_('./$.shared')('wks')
  , uid    = _dereq_('./$.uid')
  , Symbol = _dereq_('./$.global').Symbol;
module.exports = function(name){
  return store[name] || (store[name] =
    Symbol && Symbol[name] || (Symbol || uid)('Symbol.' + name));
};
},{"./$.global":35,"./$.shared":61,"./$.uid":70}],72:[function(_dereq_,module,exports){
var classof   = _dereq_('./$.classof')
  , ITERATOR  = _dereq_('./$.wks')('iterator')
  , Iterators = _dereq_('./$.iterators');
module.exports = _dereq_('./$.core').getIteratorMethod = function(it){
  if(it != undefined)return it[ITERATOR]
    || it['@@iterator']
    || Iterators[classof(it)];
};
},{"./$.classof":22,"./$.core":27,"./$.iterators":48,"./$.wks":71}],73:[function(_dereq_,module,exports){
var anObject = _dereq_('./$.an-object')
  , get      = _dereq_('./core.get-iterator-method');
module.exports = _dereq_('./$.core').getIterator = function(it){
  var iterFn = get(it);
  if(typeof iterFn != 'function')throw TypeError(it + ' is not iterable!');
  return anObject(iterFn.call(it));
};
},{"./$.an-object":21,"./$.core":27,"./core.get-iterator-method":72}],74:[function(_dereq_,module,exports){
'use strict';
var ctx         = _dereq_('./$.ctx')
  , $export     = _dereq_('./$.export')
  , toObject    = _dereq_('./$.to-object')
  , call        = _dereq_('./$.iter-call')
  , isArrayIter = _dereq_('./$.is-array-iter')
  , toLength    = _dereq_('./$.to-length')
  , getIterFn   = _dereq_('./core.get-iterator-method');
$export($export.S + $export.F * !_dereq_('./$.iter-detect')(function(iter){ Array.from(iter); }), 'Array', {
  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)
  from: function from(arrayLike/*, mapfn = undefined, thisArg = undefined*/){
    var O       = toObject(arrayLike)
      , C       = typeof this == 'function' ? this : Array
      , $$      = arguments
      , $$len   = $$.length
      , mapfn   = $$len > 1 ? $$[1] : undefined
      , mapping = mapfn !== undefined
      , index   = 0
      , iterFn  = getIterFn(O)
      , length, result, step, iterator;
    if(mapping)mapfn = ctx(mapfn, $$len > 2 ? $$[2] : undefined, 2);
    // if object isn't iterable or it's array with default iterator - use simple case
    if(iterFn != undefined && !(C == Array && isArrayIter(iterFn))){
      for(iterator = iterFn.call(O), result = new C; !(step = iterator.next()).done; index++){
        result[index] = mapping ? call(iterator, mapfn, [step.value, index], true) : step.value;
      }
    } else {
      length = toLength(O.length);
      for(result = new C(length); length > index; index++){
        result[index] = mapping ? mapfn(O[index], index) : O[index];
      }
    }
    result.length = index;
    return result;
  }
});

},{"./$.ctx":28,"./$.export":32,"./$.is-array-iter":41,"./$.iter-call":43,"./$.iter-detect":46,"./$.to-length":68,"./$.to-object":69,"./core.get-iterator-method":72}],75:[function(_dereq_,module,exports){
'use strict';
var addToUnscopables = _dereq_('./$.add-to-unscopables')
  , step             = _dereq_('./$.iter-step')
  , Iterators        = _dereq_('./$.iterators')
  , toIObject        = _dereq_('./$.to-iobject');

// 22.1.3.4 Array.prototype.entries()
// 22.1.3.13 Array.prototype.keys()
// 22.1.3.29 Array.prototype.values()
// 22.1.3.30 Array.prototype[@@iterator]()
module.exports = _dereq_('./$.iter-define')(Array, 'Array', function(iterated, kind){
  this._t = toIObject(iterated); // target
  this._i = 0;                   // next index
  this._k = kind;                // kind
// 22.1.5.2.1 %ArrayIteratorPrototype%.next()
}, function(){
  var O     = this._t
    , kind  = this._k
    , index = this._i++;
  if(!O || index >= O.length){
    this._t = undefined;
    return step(1);
  }
  if(kind == 'keys'  )return step(0, index);
  if(kind == 'values')return step(0, O[index]);
  return step(0, [index, O[index]]);
}, 'values');

// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
Iterators.Arguments = Iterators.Array;

addToUnscopables('keys');
addToUnscopables('values');
addToUnscopables('entries');
},{"./$.add-to-unscopables":20,"./$.iter-define":45,"./$.iter-step":47,"./$.iterators":48,"./$.to-iobject":67}],76:[function(_dereq_,module,exports){
// 19.1.3.1 Object.assign(target, source)
var $export = _dereq_('./$.export');

$export($export.S + $export.F, 'Object', {assign: _dereq_('./$.object-assign')});
},{"./$.export":32,"./$.object-assign":52}],77:[function(_dereq_,module,exports){
// 19.1.2.14 Object.keys(O)
var toObject = _dereq_('./$.to-object');

_dereq_('./$.object-sap')('keys', function($keys){
  return function keys(it){
    return $keys(toObject(it));
  };
});
},{"./$.object-sap":53,"./$.to-object":69}],78:[function(_dereq_,module,exports){

},{}],79:[function(_dereq_,module,exports){
'use strict';
var $          = _dereq_('./$')
  , LIBRARY    = _dereq_('./$.library')
  , global     = _dereq_('./$.global')
  , ctx        = _dereq_('./$.ctx')
  , classof    = _dereq_('./$.classof')
  , $export    = _dereq_('./$.export')
  , isObject   = _dereq_('./$.is-object')
  , anObject   = _dereq_('./$.an-object')
  , aFunction  = _dereq_('./$.a-function')
  , strictNew  = _dereq_('./$.strict-new')
  , forOf      = _dereq_('./$.for-of')
  , setProto   = _dereq_('./$.set-proto').set
  , same       = _dereq_('./$.same-value')
  , SPECIES    = _dereq_('./$.wks')('species')
  , speciesConstructor = _dereq_('./$.species-constructor')
  , asap       = _dereq_('./$.microtask')
  , PROMISE    = 'Promise'
  , process    = global.process
  , isNode     = classof(process) == 'process'
  , P          = global[PROMISE]
  , Wrapper;

var testResolve = function(sub){
  var test = new P(function(){});
  if(sub)test.constructor = Object;
  return P.resolve(test) === test;
};

var USE_NATIVE = function(){
  var works = false;
  function P2(x){
    var self = new P(x);
    setProto(self, P2.prototype);
    return self;
  }
  try {
    works = P && P.resolve && testResolve();
    setProto(P2, P);
    P2.prototype = $.create(P.prototype, {constructor: {value: P2}});
    // actual Firefox has broken subclass support, test that
    if(!(P2.resolve(5).then(function(){}) instanceof P2)){
      works = false;
    }
    // actual V8 bug, https://code.google.com/p/v8/issues/detail?id=4162
    if(works && _dereq_('./$.descriptors')){
      var thenableThenGotten = false;
      P.resolve($.setDesc({}, 'then', {
        get: function(){ thenableThenGotten = true; }
      }));
      works = thenableThenGotten;
    }
  } catch(e){ works = false; }
  return works;
}();

// helpers
var sameConstructor = function(a, b){
  // library wrapper special case
  if(LIBRARY && a === P && b === Wrapper)return true;
  return same(a, b);
};
var getConstructor = function(C){
  var S = anObject(C)[SPECIES];
  return S != undefined ? S : C;
};
var isThenable = function(it){
  var then;
  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;
};
var PromiseCapability = function(C){
  var resolve, reject;
  this.promise = new C(function($$resolve, $$reject){
    if(resolve !== undefined || reject !== undefined)throw TypeError('Bad Promise constructor');
    resolve = $$resolve;
    reject  = $$reject;
  });
  this.resolve = aFunction(resolve),
  this.reject  = aFunction(reject)
};
var perform = function(exec){
  try {
    exec();
  } catch(e){
    return {error: e};
  }
};
var notify = function(record, isReject){
  if(record.n)return;
  record.n = true;
  var chain = record.c;
  asap(function(){
    var value = record.v
      , ok    = record.s == 1
      , i     = 0;
    var run = function(reaction){
      var handler = ok ? reaction.ok : reaction.fail
        , resolve = reaction.resolve
        , reject  = reaction.reject
        , result, then;
      try {
        if(handler){
          if(!ok)record.h = true;
          result = handler === true ? value : handler(value);
          if(result === reaction.promise){
            reject(TypeError('Promise-chain cycle'));
          } else if(then = isThenable(result)){
            then.call(result, resolve, reject);
          } else resolve(result);
        } else reject(value);
      } catch(e){
        reject(e);
      }
    };
    while(chain.length > i)run(chain[i++]); // variable length - can't use forEach
    chain.length = 0;
    record.n = false;
    if(isReject)setTimeout(function(){
      var promise = record.p
        , handler, console;
      if(isUnhandled(promise)){
        if(isNode){
          process.emit('unhandledRejection', value, promise);
        } else if(handler = global.onunhandledrejection){
          handler({promise: promise, reason: value});
        } else if((console = global.console) && console.error){
          console.error('Unhandled promise rejection', value);
        }
      } record.a = undefined;
    }, 1);
  });
};
var isUnhandled = function(promise){
  var record = promise._d
    , chain  = record.a || record.c
    , i      = 0
    , reaction;
  if(record.h)return false;
  while(chain.length > i){
    reaction = chain[i++];
    if(reaction.fail || !isUnhandled(reaction.promise))return false;
  } return true;
};
var $reject = function(value){
  var record = this;
  if(record.d)return;
  record.d = true;
  record = record.r || record; // unwrap
  record.v = value;
  record.s = 2;
  record.a = record.c.slice();
  notify(record, true);
};
var $resolve = function(value){
  var record = this
    , then;
  if(record.d)return;
  record.d = true;
  record = record.r || record; // unwrap
  try {
    if(record.p === value)throw TypeError("Promise can't be resolved itself");
    if(then = isThenable(value)){
      asap(function(){
        var wrapper = {r: record, d: false}; // wrap
        try {
          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));
        } catch(e){
          $reject.call(wrapper, e);
        }
      });
    } else {
      record.v = value;
      record.s = 1;
      notify(record, false);
    }
  } catch(e){
    $reject.call({r: record, d: false}, e); // wrap
  }
};

// constructor polyfill
if(!USE_NATIVE){
  // 25.4.3.1 Promise(executor)
  P = function Promise(executor){
    aFunction(executor);
    var record = this._d = {
      p: strictNew(this, P, PROMISE),         // <- promise
      c: [],                                  // <- awaiting reactions
      a: undefined,                           // <- checked in isUnhandled reactions
      s: 0,                                   // <- state
      d: false,                               // <- done
      v: undefined,                           // <- value
      h: false,                               // <- handled rejection
      n: false                                // <- notify
    };
    try {
      executor(ctx($resolve, record, 1), ctx($reject, record, 1));
    } catch(err){
      $reject.call(record, err);
    }
  };
  _dereq_('./$.redefine-all')(P.prototype, {
    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)
    then: function then(onFulfilled, onRejected){
      var reaction = new PromiseCapability(speciesConstructor(this, P))
        , promise  = reaction.promise
        , record   = this._d;
      reaction.ok   = typeof onFulfilled == 'function' ? onFulfilled : true;
      reaction.fail = typeof onRejected == 'function' && onRejected;
      record.c.push(reaction);
      if(record.a)record.a.push(reaction);
      if(record.s)notify(record, false);
      return promise;
    },
    // 25.4.5.1 Promise.prototype.catch(onRejected)
    'catch': function(onRejected){
      return this.then(undefined, onRejected);
    }
  });
}

$export($export.G + $export.W + $export.F * !USE_NATIVE, {Promise: P});
_dereq_('./$.set-to-string-tag')(P, PROMISE);
_dereq_('./$.set-species')(PROMISE);
Wrapper = _dereq_('./$.core')[PROMISE];

// statics
$export($export.S + $export.F * !USE_NATIVE, PROMISE, {
  // 25.4.4.5 Promise.reject(r)
  reject: function reject(r){
    var capability = new PromiseCapability(this)
      , $$reject   = capability.reject;
    $$reject(r);
    return capability.promise;
  }
});
$export($export.S + $export.F * (!USE_NATIVE || testResolve(true)), PROMISE, {
  // 25.4.4.6 Promise.resolve(x)
  resolve: function resolve(x){
    // instanceof instead of internal slot check because we should fix it without replacement native Promise core
    if(x instanceof P && sameConstructor(x.constructor, this))return x;
    var capability = new PromiseCapability(this)
      , $$resolve  = capability.resolve;
    $$resolve(x);
    return capability.promise;
  }
});
$export($export.S + $export.F * !(USE_NATIVE && _dereq_('./$.iter-detect')(function(iter){
  P.all(iter)['catch'](function(){});
})), PROMISE, {
  // 25.4.4.1 Promise.all(iterable)
  all: function all(iterable){
    var C          = getConstructor(this)
      , capability = new PromiseCapability(C)
      , resolve    = capability.resolve
      , reject     = capability.reject
      , values     = [];
    var abrupt = perform(function(){
      forOf(iterable, false, values.push, values);
      var remaining = values.length
        , results   = Array(remaining);
      if(remaining)$.each.call(values, function(promise, index){
        var alreadyCalled = false;
        C.resolve(promise).then(function(value){
          if(alreadyCalled)return;
          alreadyCalled = true;
          results[index] = value;
          --remaining || resolve(results);
        }, reject);
      });
      else resolve(results);
    });
    if(abrupt)reject(abrupt.error);
    return capability.promise;
  },
  // 25.4.4.4 Promise.race(iterable)
  race: function race(iterable){
    var C          = getConstructor(this)
      , capability = new PromiseCapability(C)
      , reject     = capability.reject;
    var abrupt = perform(function(){
      forOf(iterable, false, function(promise){
        C.resolve(promise).then(capability.resolve, reject);
      });
    });
    if(abrupt)reject(abrupt.error);
    return capability.promise;
  }
});
},{"./$":49,"./$.a-function":19,"./$.an-object":21,"./$.classof":22,"./$.core":27,"./$.ctx":28,"./$.descriptors":30,"./$.export":32,"./$.for-of":34,"./$.global":35,"./$.is-object":42,"./$.iter-detect":46,"./$.library":50,"./$.microtask":51,"./$.redefine-all":55,"./$.same-value":57,"./$.set-proto":58,"./$.set-species":59,"./$.set-to-string-tag":60,"./$.species-constructor":62,"./$.strict-new":63,"./$.wks":71}],80:[function(_dereq_,module,exports){
'use strict';
var strong = _dereq_('./$.collection-strong');

// 23.2 Set Objects
_dereq_('./$.collection')('Set', function(get){
  return function Set(){ return get(this, arguments.length > 0 ? arguments[0] : undefined); };
}, {
  // 23.2.3.1 Set.prototype.add(value)
  add: function add(value){
    return strong.def(this, value = value === 0 ? 0 : value, value);
  }
}, strong);
},{"./$.collection":26,"./$.collection-strong":24}],81:[function(_dereq_,module,exports){
'use strict';
var $at  = _dereq_('./$.string-at')(true);

// 21.1.3.27 String.prototype[@@iterator]()
_dereq_('./$.iter-define')(String, 'String', function(iterated){
  this._t = String(iterated); // target
  this._i = 0;                // next index
// 21.1.5.2.1 %StringIteratorPrototype%.next()
}, function(){
  var O     = this._t
    , index = this._i
    , point;
  if(index >= O.length)return {value: undefined, done: true};
  point = $at(O, index);
  this._i += point.length;
  return {value: point, done: false};
});
},{"./$.iter-define":45,"./$.string-at":64}],82:[function(_dereq_,module,exports){
// https://github.com/DavidBruant/Map-Set.prototype.toJSON
var $export  = _dereq_('./$.export');

$export($export.P, 'Set', {toJSON: _dereq_('./$.collection-to-json')('Set')});
},{"./$.collection-to-json":25,"./$.export":32}],83:[function(_dereq_,module,exports){
_dereq_('./es6.array.iterator');
var Iterators = _dereq_('./$.iterators');
Iterators.NodeList = Iterators.HTMLCollection = Iterators.Array;
},{"./$.iterators":48,"./es6.array.iterator":75}],84:[function(_dereq_,module,exports){
var isFunction = _dereq_('is-function')

module.exports = forEach

var toString = Object.prototype.toString
var hasOwnProperty = Object.prototype.hasOwnProperty

function forEach(list, iterator, context) {
    if (!isFunction(iterator)) {
        throw new TypeError('iterator must be a function')
    }

    if (arguments.length < 3) {
        context = this
    }
    
    if (toString.call(list) === '[object Array]')
        forEachArray(list, iterator, context)
    else if (typeof list === 'string')
        forEachString(list, iterator, context)
    else
        forEachObject(list, iterator, context)
}

function forEachArray(array, iterator, context) {
    for (var i = 0, len = array.length; i < len; i++) {
        if (hasOwnProperty.call(array, i)) {
            iterator.call(context, array[i], i, array)
        }
    }
}

function forEachString(string, iterator, context) {
    for (var i = 0, len = string.length; i < len; i++) {
        // no such thing as a sparse string.
        iterator.call(context, string.charAt(i), i, string)
    }
}

function forEachObject(object, iterator, context) {
    for (var k in object) {
        if (hasOwnProperty.call(object, k)) {
            iterator.call(context, object[k], k, object)
        }
    }
}

},{"is-function":86}],85:[function(_dereq_,module,exports){
(function (global){
if (typeof window !== "undefined") {
    module.exports = window;
} else if (typeof global !== "undefined") {
    module.exports = global;
} else if (typeof self !== "undefined"){
    module.exports = self;
} else {
    module.exports = {};
}

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{}],86:[function(_dereq_,module,exports){
module.exports = isFunction

var toString = Object.prototype.toString

function isFunction (fn) {
  var string = toString.call(fn)
  return string === '[object Function]' ||
    (typeof fn === 'function' && string !== '[object RegExp]') ||
    (typeof window !== 'undefined' &&
     // IE8 and below
     (fn === window.setTimeout ||
      fn === window.alert ||
      fn === window.confirm ||
      fn === window.prompt))
};

},{}],87:[function(_dereq_,module,exports){
var trim = _dereq_('trim')
  , forEach = _dereq_('for-each')
  , isArray = function(arg) {
      return Object.prototype.toString.call(arg) === '[object Array]';
    }

module.exports = function (headers) {
  if (!headers)
    return {}

  var result = {}

  forEach(
      trim(headers).split('\n')
    , function (row) {
        var index = row.indexOf(':')
          , key = trim(row.slice(0, index)).toLowerCase()
          , value = trim(row.slice(index + 1))

        if (typeof(result[key]) === 'undefined') {
          result[key] = value
        } else if (isArray(result[key])) {
          result[key].push(value)
        } else {
          result[key] = [ result[key], value ]
        }
      }
  )

  return result
}
},{"for-each":84,"trim":88}],88:[function(_dereq_,module,exports){

exports = module.exports = trim;

function trim(str){
  return str.replace(/^\s*|\s*$/g, '');
}

exports.left = function(str){
  return str.replace(/^\s*/, '');
};

exports.right = function(str){
  return str.replace(/\s*$/, '');
};

},{}],89:[function(_dereq_,module,exports){
"use strict";
var window = _dereq_("global/window")
var once = _dereq_("once")
var isFunction = _dereq_("is-function")
var parseHeaders = _dereq_("parse-headers")
var xtend = _dereq_("xtend")

module.exports = createXHR
createXHR.XMLHttpRequest = window.XMLHttpRequest || noop
createXHR.XDomainRequest = "withCredentials" in (new createXHR.XMLHttpRequest()) ? createXHR.XMLHttpRequest : window.XDomainRequest

forEachArray(["get", "put", "post", "patch", "head", "delete"], function(method) {
    createXHR[method === "delete" ? "del" : method] = function(uri, options, callback) {
        options = initParams(uri, options, callback)
        options.method = method.toUpperCase()
        return _createXHR(options)
    }
})

function forEachArray(array, iterator) {
    for (var i = 0; i < array.length; i++) {
        iterator(array[i])
    }
}

function isEmpty(obj){
    for(var i in obj){
        if(obj.hasOwnProperty(i)) return false
    }
    return true
}

function initParams(uri, options, callback) {
    var params = uri

    if (isFunction(options)) {
        callback = options
        if (typeof uri === "string") {
            params = {uri:uri}
        }
    } else {
        params = xtend(options, {uri: uri})
    }

    params.callback = callback
    return params
}

function createXHR(uri, options, callback) {
    options = initParams(uri, options, callback)
    return _createXHR(options)
}

function _createXHR(options) {
    var callback = options.callback
    if(typeof callback === "undefined"){
        throw new Error("callback argument missing")
    }
    callback = once(callback)

    function readystatechange() {
        if (xhr.readyState === 4) {
            loadFunc()
        }
    }

    function getBody() {
        // Chrome with requestType=blob throws errors arround when even testing access to responseText
        var body = undefined

        if (xhr.response) {
            body = xhr.response
        } else if (xhr.responseType === "text" || !xhr.responseType) {
            body = xhr.responseText || xhr.responseXML
        }

        if (isJson) {
            try {
                body = JSON.parse(body)
            } catch (e) {}
        }

        return body
    }

    var failureResponse = {
                body: undefined,
                headers: {},
                statusCode: 0,
                method: method,
                url: uri,
                rawRequest: xhr
            }

    function errorFunc(evt) {
        clearTimeout(timeoutTimer)
        if(!(evt instanceof Error)){
            evt = new Error("" + (evt || "Unknown XMLHttpRequest Error") )
        }
        evt.statusCode = 0
        callback(evt, failureResponse)
    }

    // will load the data & process the response in a special response object
    function loadFunc() {
        if (aborted) return
        var status
        clearTimeout(timeoutTimer)
        if(options.useXDR && xhr.status===undefined) {
            //IE8 CORS GET successful response doesn't have a status field, but body is fine
            status = 200
        } else {
            status = (xhr.status === 1223 ? 204 : xhr.status)
        }
        var response = failureResponse
        var err = null

        if (status !== 0){
            response = {
                body: getBody(),
                statusCode: status,
                method: method,
                headers: {},
                url: uri,
                rawRequest: xhr
            }
            if(xhr.getAllResponseHeaders){ //remember xhr can in fact be XDR for CORS in IE
                response.headers = parseHeaders(xhr.getAllResponseHeaders())
            }
        } else {
            err = new Error("Internal XMLHttpRequest Error")
        }
        callback(err, response, response.body)

    }

    var xhr = options.xhr || null

    if (!xhr) {
        if (options.cors || options.useXDR) {
            xhr = new createXHR.XDomainRequest()
        }else{
            xhr = new createXHR.XMLHttpRequest()
        }
    }

    var key
    var aborted
    var uri = xhr.url = options.uri || options.url
    var method = xhr.method = options.method || "GET"
    var body = options.body || options.data || null
    var headers = xhr.headers = options.headers || {}
    var sync = !!options.sync
    var isJson = false
    var timeoutTimer

    if ("json" in options) {
        isJson = true
        headers["accept"] || headers["Accept"] || (headers["Accept"] = "application/json") //Don't override existing accept header declared by user
        if (method !== "GET" && method !== "HEAD") {
            headers["content-type"] || headers["Content-Type"] || (headers["Content-Type"] = "application/json") //Don't override existing accept header declared by user
            body = JSON.stringify(options.json)
        }
    }

    xhr.onreadystatechange = readystatechange
    xhr.onload = loadFunc
    xhr.onerror = errorFunc
    // IE9 must have onprogress be set to a unique function.
    xhr.onprogress = function () {
        // IE must die
    }
    xhr.ontimeout = errorFunc
    xhr.open(method, uri, !sync, options.username, options.password)
    //has to be after open
    if(!sync) {
        xhr.withCredentials = !!options.withCredentials
    }
    // Cannot set timeout with sync request
    // not setting timeout on the xhr object, because of old webkits etc. not handling that correctly
    // both npm's request and jquery 1.x use this kind of timeout, so this is being consistent
    if (!sync && options.timeout > 0 ) {
        timeoutTimer = setTimeout(function(){
            aborted=true//IE9 may still call readystatechange
            xhr.abort("timeout")
            var e = new Error("XMLHttpRequest timeout")
            e.code = "ETIMEDOUT"
            errorFunc(e)
        }, options.timeout )
    }

    if (xhr.setRequestHeader) {
        for(key in headers){
            if(headers.hasOwnProperty(key)){
                xhr.setRequestHeader(key, headers[key])
            }
        }
    } else if (options.headers && !isEmpty(options.headers)) {
        throw new Error("Headers cannot be set on an XDomainRequest object")
    }

    if ("responseType" in options) {
        xhr.responseType = options.responseType
    }

    if ("beforeSend" in options &&
        typeof options.beforeSend === "function"
    ) {
        options.beforeSend(xhr)
    }

    xhr.send(body)

    return xhr


}

function noop() {}

},{"global/window":85,"is-function":86,"once":90,"parse-headers":87,"xtend":91}],90:[function(_dereq_,module,exports){
module.exports = once

once.proto = once(function () {
  Object.defineProperty(Function.prototype, 'once', {
    value: function () {
      return once(this)
    },
    configurable: true
  })
})

function once (fn) {
  var called = false
  return function () {
    if (called) return
    called = true
    return fn.apply(this, arguments)
  }
}

},{}],91:[function(_dereq_,module,exports){
module.exports = extend

var hasOwnProperty = Object.prototype.hasOwnProperty;

function extend() {
    var target = {}

    for (var i = 0; i < arguments.length; i++) {
        var source = arguments[i]

        for (var key in source) {
            if (hasOwnProperty.call(source, key)) {
                target[key] = source[key]
            }
        }
    }

    return target
}

},{}],92:[function(_dereq_,module,exports){
/*
The MIT License (MIT)

Copyright (c) 2015 Patricio Gonzalez Vivo ( http://www.patriciogonzalezvivo.com )

Permission is hereby granted, free of charge, to any person obtaining a copy of
this software and associated documentation files (the 'Software'), to deal in
the Software without restriction, including without limitation the rights to
use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
the Software, and to permit persons to whom the Software is furnished to do so,
subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
*/

'use strict';

var _createClass = _dereq_('babel-runtime/helpers/create-class')['default'];

var _classCallCheck = _dereq_('babel-runtime/helpers/class-call-check')['default'];

var _interopRequireDefault = _dereq_('babel-runtime/helpers/interop-require-default')['default'];

Object.defineProperty(exports, '__esModule', {
    value: true
});

var _xhr = _dereq_('xhr');

var _xhr2 = _interopRequireDefault(_xhr);

var _glGl = _dereq_('./gl/gl');

var _glTexture = _dereq_('./gl/Texture');

var _glTexture2 = _interopRequireDefault(_glTexture);

var _toolsCommon = _dereq_('./tools/common');

var _toolsMixin = _dereq_('./tools/mixin');

var GlslCanvas = (function () {
    function GlslCanvas(canvas, options) {
        var _this = this;

        _classCallCheck(this, GlslCanvas);

        (0, _toolsMixin.subscribeMixin)(this);

        options = options || {};

        this.width = canvas.clientWidth;
        this.height = canvas.clientHeight;

        this.canvas = canvas;
        this.gl = undefined;
        this.program = undefined;
        this.textures = {};
        this.uniforms = {};
        this.vbo = {};
        this.isValid = false;

        this.vertexString = options.vertexString || '\n#ifdef GL_ES\nprecision mediump float;\n#endif\n\nattribute vec2 a_position;\nattribute vec2 a_texcoord;\n\nvarying vec2 v_texcoord;\n\nvoid main() {\n    gl_Position = vec4(a_position, 0.0, 1.0);\n    v_texcoord = a_texcoord;\n}\n';
        this.fragmentString = options.fragmentString || '\n#ifdef GL_ES\nprecision mediump float;\n#endif\n\nvarying vec2 v_texcoord;\n\nvoid main(){\n    gl_FragColor = vec4(0.0);\n}\n';

        // GL Context
        var gl = (0, _glGl.setupWebGL)(canvas, options);
        if (!gl) {
            return;
        }
        this.gl = gl;
        this.timeLoad = this.timePrev = Date.now();
        this.forceRender = true;
        this.paused = false;

        // Allow alpha
        canvas.style.backgroundColor = options.backgroundColor || 'rgba(1,1,1,0)';

        // Load shader
        if (canvas.hasAttribute('data-fragment')) {
            this.fragmentString = canvas.getAttribute('data-fragment');
        } else if (canvas.hasAttribute('data-fragment-url')) {
            var source = canvas.getAttribute('data-fragment-url');
            _xhr2['default'].get(source, function (error, response, body) {
                _this.load(body, _this.vertexString);
            });
        }

        // Load shader
        if (canvas.hasAttribute('data-vertex')) {
            this.vertexString = canvas.getAttribute('data-vertex');
        } else if (canvas.hasAttribute('data-vertex-url')) {
            var source = canvas.getAttribute('data-vertex-url');
            _xhr2['default'].get(source, function (error, response, body) {
                _this.load(_this.fragmentString, body);
            });
        }

        this.load();

        if (!this.program) {
            return;
        }

        // Define Vertex buffer
        var texCoordsLoc = gl.getAttribLocation(this.program, 'a_texcoord');
        this.vbo.texCoords = gl.createBuffer();
        this.gl.bindBuffer(gl.ARRAY_BUFFER, this.vbo.texCoords);
        this.gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0]), gl.STATIC_DRAW);
        this.gl.enableVertexAttribArray(texCoordsLoc);
        this.gl.vertexAttribPointer(texCoordsLoc, 2, gl.FLOAT, false, 0, 0);

        var verticesLoc = gl.getAttribLocation(this.program, 'a_position');
        this.vbo.vertices = gl.createBuffer();
        this.gl.bindBuffer(gl.ARRAY_BUFFER, this.vbo.vertices);
        this.gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([-1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, 1.0]), gl.STATIC_DRAW);
        this.gl.enableVertexAttribArray(verticesLoc);
        this.gl.vertexAttribPointer(verticesLoc, 2, gl.FLOAT, false, 0, 0);

        // load TEXTURES
        if (canvas.hasAttribute('data-textures')) {
            var imgList = canvas.getAttribute('data-textures').split(',');
            for (var nImg in imgList) {
                this.setUniform('u_tex' + nImg, imgList[nImg]);
            }
        }

        // ========================== EVENTS
        var mouse = {
            x: 0,
            y: 0
        };
        document.addEventListener('mousemove', function (e) {
            mouse.x = e.clientX || e.pageX;
            mouse.y = e.clientY || e.pageY;
        }, false);

        var sandbox = this;
        function RenderLoop() {
            if (sandbox.nMouse > 1) {
                sandbox.setMouse(mouse);
            }
            sandbox.render();
            sandbox.forceRender = sandbox.resize();
            window.requestAnimationFrame(RenderLoop);
        }

        // Start
        this.setMouse({ x: 0, y: 0 });
        RenderLoop();
        return this;
    }

    _createClass(GlslCanvas, [{
        key: 'destroy',
        value: function destroy() {
            this.animated = false;
            this.isValid = false;
            for (var tex in this.textures) {
                this.gl.deleteTexture(tex);
            }
            this.textures = {};
            for (var att in this.attribs) {
                this.gl.deleteBuffer(this.attribs[att]);
            }
            this.gl.useProgram(null);
            this.gl.deleteProgram(this.program);
            this.program = null;
            this.gl = null;
        }
    }, {
        key: 'load',
        value: function load(fragString, vertString) {
            // Load vertex shader if there is one
            if (vertString) {
                this.vertexString = vertString;
            }

            // Load fragment shader if there is one
            if (fragString) {
                this.fragmentString = fragString;
            }

            this.animated = false;
            this.nDelta = (this.fragmentString.match(/u_delta/g) || []).length;
            this.nTime = (this.fragmentString.match(/u_time/g) || []).length;
            this.nDate = (this.fragmentString.match(/u_date/g) || []).length;
            this.nMouse = (this.fragmentString.match(/u_mouse/g) || []).length;
            this.animated = this.nDate > 1 || this.nTime > 1 || this.nMouse > 1;

            var nTextures = this.fragmentString.search(/sampler2D/g);
            if (nTextures) {
                var lines = this.fragmentString.split('\n');
                for (var i = 0; i < lines.length; i++) {
                    var match = lines[i].match(/uniform\s*sampler2D\s*([\w]*);\s*\/\/\s*([\w|\:\/\/|\.|\-|\_]*)/i);
                    if (match) {
                        var ext = match[2].split('.').pop();
                        if (match[1] && match[2] && (ext === 'jpg' || ext === 'JPG' || ext === 'jpeg' || ext === 'JPEG' || ext === 'png' || ext === 'PNG')) {
                            this.setUniform(match[1], match[2]);
                        }
                    }
                    var main = lines[i].match(/\s*void\s*main\s*/g);
                    if (main) {
                        break;
                    }
                }
            }

            var vertexShader = (0, _glGl.createShader)(this, this.vertexString, this.gl.VERTEX_SHADER);
            var fragmentShader = (0, _glGl.createShader)(this, this.fragmentString, this.gl.FRAGMENT_SHADER);

            // If Fragment shader fails load a empty one to sign the error
            if (!fragmentShader) {
                fragmentShader = (0, _glGl.createShader)(this, 'void main(){\n\tgl_FragColor = vec4(1.0);\n}', this.gl.FRAGMENT_SHADER);
                this.isValid = false;
            } else {
                this.isValid = true;
            }

            // Create and use program
            var program = (0, _glGl.createProgram)(this, [vertexShader, fragmentShader]); //, [0,1],['a_texcoord','a_position']);
            this.gl.useProgram(program);

            // Delete shaders
            // this.gl.detachShader(program, vertexShader);
            // this.gl.detachShader(program, fragmentShader);
            this.gl.deleteShader(vertexShader);
            this.gl.deleteShader(fragmentShader);

            this.program = program;
            this.change = true;

            // Trigger event
            this.trigger('load', {});

            this.forceRender = true;
        }
    }, {
        key: 'loadTexture',
        value: function loadTexture(name, urlElementOrData, options) {
            var _this2 = this;

            if (!options) {
                options = {};
            }

            if (typeof urlElementOrData === 'string') {
                options.url = urlElementOrData;
            } else if (typeof urlElementOrData === 'object' && urlElementOrData.data && urlElementOrData.width && urlElementOrData.height) {
                options.data = urlElementOrData.data;
                options.width = urlElementOrData.width;
                options.height = urlElementOrData.height;
            } else if (typeof urlElementOrData === 'object') {
                options.element = urlElementOrData;
            }

            if (this.textures[name]) {
                if (this.textures[name]) {
                    this.textures[name].load(options);
                    this.textures[name].on('loaded', function (args) {
                        _this2.forceRender = true;
                    });
                }
            } else {
                this.textures[name] = new _glTexture2['default'](this.gl, name, options);
                this.textures[name].on('loaded', function (args) {
                    _this2.forceRender = true;
                });
            }
        }
    }, {
        key: 'refreshUniforms',
        value: function refreshUniforms() {
            this.uniforms = {};
        }
    }, {
        key: 'setUniform',
        value: function setUniform(name) {
            var u = {};

            for (var _len = arguments.length, value = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
                value[_key - 1] = arguments[_key];
            }

            u[name] = value;
            this.setUniforms(u);
        }
    }, {
        key: 'setUniforms',
        value: function setUniforms(uniforms) {
            var parsed = (0, _glGl.parseUniforms)(uniforms);
            // Set each uniform
            for (var u in parsed) {
                if (parsed[u].type === 'sampler2D') {
                    // For textures, we need to track texture units, so we have a special setter
                    // this.uniformTexture(parsed[u].name, parsed[u].value[0]);
                    this.loadTexture(parsed[u].name, parsed[u].value[0]);
                } else {
                    this.uniform(parsed[u].method, parsed[u].type, parsed[u].name, parsed[u].value);
                    this.forceRender = true;
                }
            }
        }
    }, {
        key: 'setMouse',
        value: function setMouse(mouse) {
            // set the mouse uniform
            var rect = this.canvas.getBoundingClientRect();
            if (mouse && mouse.x && mouse.x >= rect.left && mouse.x <= rect.right && mouse.y && mouse.y >= rect.top && mouse.y <= rect.bottom) {
                this.uniform('2f', 'vec2', 'u_mouse', mouse.x - rect.left, this.canvas.height - (mouse.y - rect.top));
            }
        }

        // ex: program.uniform('3f', 'position', x, y, z);
    }, {
        key: 'uniform',
        value: function uniform(method, type, name) {
            // 'value' is a method-appropriate arguments list
            this.uniforms[name] = this.uniforms[name] || {};
            var uniform = this.uniforms[name];

            for (var _len2 = arguments.length, value = Array(_len2 > 3 ? _len2 - 3 : 0), _key2 = 3; _key2 < _len2; _key2++) {
                value[_key2 - 3] = arguments[_key2];
            }

            var change = (0, _toolsCommon.isDiff)(uniform.value, value);
            if (change || this.change || uniform.location === undefined || uniform.value === undefined) {
                uniform.name = name;
                uniform.value = value;
                uniform.type = type;
                uniform.method = 'uniform' + method;
                uniform.location = this.gl.getUniformLocation(this.program, name);

                this.gl[uniform.method].apply(this.gl, [uniform.location].concat(uniform.value));
            }
        }
    }, {
        key: 'uniformTexture',
        value: function uniformTexture(name, texture, options) {
            if (this.textures[name] === undefined) {
                this.loadTexture(name, texture, options);
            } else {
                this.uniform('1i', 'sampler2D', name, this.texureIndex);
                this.textures[name].bind(this.texureIndex);
                this.uniform('2f', 'vec2', name + 'Resolution', this.textures[name].width, this.textures[name].height);
                this.texureIndex++;
            }
        }
    }, {
        key: 'resize',
        value: function resize() {
            if (this.width !== this.canvas.clientWidth || this.height !== this.canvas.clientHeight) {
                var realToCSSPixels = window.devicePixelRatio || 1;

                // Lookup the size the browser is displaying the canvas in CSS pixels
                // and compute a size needed to make our drawingbuffer match it in
                // device pixels.
                var displayWidth = Math.floor(this.gl.canvas.clientWidth * realToCSSPixels);
                var displayHeight = Math.floor(this.gl.canvas.clientHeight * realToCSSPixels);

                // Check if the canvas is not the same size.
                if (this.gl.canvas.width !== displayWidth || this.gl.canvas.height !== displayHeight) {
                    // Make the canvas the same size
                    this.gl.canvas.width = displayWidth;
                    this.gl.canvas.height = displayHeight;
                    // Set the viewport to match
                    this.gl.viewport(0, 0, this.gl.canvas.width, this.gl.canvas.height);
                    // this.gl.viewport(0, 0, this.gl.drawingBufferWidth, this.gl.drawingBufferHeight);
                }
                this.width = this.canvas.clientWidth;
                this.height = this.canvas.clientHeight;
                return true;
            } else {
                return false;
            }
        }
    }, {
        key: 'render',
        value: function render() {
            this.visible = (0, _toolsCommon.isCanvasVisible)(this.canvas);
            if (this.forceRender || this.animated && this.visible && !this.paused) {

                var date = new Date();
                var now = date.getTime();
                if (this.nDelta > 1) {
                    this.uniform('1f', 'float', 'u_time', (now - this.timePrev) / 1000.0);
                    this.timePrev = now;
                }

                if (this.nTime > 1) {
                    // set the time uniform
                    this.uniform('1f', 'float', 'u_time', (now - this.timeLoad) / 1000.0);
                }

                if (this.nDate) {
                    // Set date uniform: year/month/day/time_in_sec
                    this.uniform('4f', 'float', 'u_date', date.getFullYear(), date.getMonth(), date.getDate(), date.getHours() * 3600 + date.getMinutes() * 60 + date.getSeconds() + date.getMilliseconds() * 0.001);
                }

                // set the resolution uniform
                this.uniform('2f', 'vec2', 'u_resolution', this.canvas.width, this.canvas.height);

                this.texureIndex = 0;
                for (var tex in this.textures) {
                    this.uniformTexture(tex);
                }

                // Draw the rectangle.
                this.gl.drawArrays(this.gl.TRIANGLES, 0, 6);

                // Trigger event
                this.trigger('render', {});

                this.change = false;
                this.forceRender = false;
            }
        }
    }, {
        key: 'pause',
        value: function pause() {
            this.paused = true;
        }
    }, {
        key: 'play',
        value: function play() {
            this.paused = false;
        }
    }, {
        key: 'version',
        value: function version() {
            return '0.0.16';
        }
    }]);

    return GlslCanvas;
})();

exports['default'] = GlslCanvas;

window.GlslCanvas = GlslCanvas;

function loadAllGlslCanvas() {
    var list = document.getElementsByClassName('glslCanvas');
    if (list.length > 0) {
        window.glslCanvases = [];
        for (var i = 0; i < list.length; i++) {
            var sandbox = new GlslCanvas(list[i]);
            if (sandbox.isValid) {
                window.glslCanvases.push(sandbox);
            }
        }
    }
}

window.addEventListener('load', function () {
    loadAllGlslCanvas();
});
module.exports = exports['default'];

},{"./gl/Texture":93,"./gl/gl":94,"./tools/common":95,"./tools/mixin":96,"babel-runtime/helpers/class-call-check":8,"babel-runtime/helpers/create-class":9,"babel-runtime/helpers/interop-require-default":10,"xhr":89}],93:[function(_dereq_,module,exports){
// Texture management
'use strict';

var _createClass = _dereq_('babel-runtime/helpers/create-class')['default'];

var _classCallCheck = _dereq_('babel-runtime/helpers/class-call-check')['default'];

var _Promise = _dereq_('babel-runtime/core-js/promise')['default'];

Object.defineProperty(exports, '__esModule', {
    value: true
});

var _toolsCommon = _dereq_('../tools/common');

var _toolsMixin = _dereq_('../tools/mixin');

// GL texture wrapper object for keeping track of a global set of textures, keyed by a unique user-defined name

var Texture = (function () {
    function Texture(gl, name) {
        var options = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];

        _classCallCheck(this, Texture);

        (0, _toolsMixin.subscribeMixin)(this);

        this.gl = gl;
        this.texture = gl.createTexture();
        if (this.texture) {
            this.valid = true;
        }
        this.bind();

        this.name = name;
        this.source = null;
        this.sourceType = null;
        this.loading = null; // a Promise object to track the loading state of this texture

        // Default to a 1-pixel black texture so we can safely render while we wait for an image to load
        // See: http://stackoverflow.com/questions/19722247/webgl-wait-for-texture-to-load
        this.setData(1, 1, new Uint8Array([0, 0, 0, 255]), { filtering: 'linear' });
        this.setFiltering(options.filtering);

        this.load(options);
    }

    // Report max texture size for a GL context

    // Destroy a single texture instance

    _createClass(Texture, [{
        key: 'destroy',
        value: function destroy() {
            if (!this.valid) {
                return;
            }
            this.gl.deleteTexture(this.texture);
            this.texture = null;
            delete this.data;
            this.data = null;
            this.valid = false;
        }
    }, {
        key: 'bind',
        value: function bind(unit) {
            if (!this.valid) {
                return;
            }
            if (typeof unit === 'number') {
                if (Texture.activeUnit !== unit) {
                    this.gl.activeTexture(this.gl.TEXTURE0 + unit);
                    Texture.activeUnit = unit;
                }
            }
            if (Texture.activeTexture !== this.texture) {
                this.gl.bindTexture(this.gl.TEXTURE_2D, this.texture);
                Texture.activeTexture = this.texture;
            }
        }
    }, {
        key: 'load',
        value: function load() {
            var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

            this.loading = null;

            if (typeof options.url === 'string') {
                if (this.url === undefined || options.url !== this.url) {
                    this.setUrl(options.url, options);
                }
            } else if (options.element) {
                this.setElement(options.element, options);
            } else if (options.data && options.width && options.height) {
                this.setData(options.width, options.height, options.data, options);
            }
        }

        // Sets texture from an url
    }, {
        key: 'setUrl',
        value: function setUrl(url) {
            var _this = this;

            var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

            if (!this.valid) {
                return;
            }

            this.url = url; // save URL reference (will be overwritten when element is loaded below)
            this.source = this.url;
            this.sourceType = 'url';

            this.loading = new _Promise(function (resolve, reject) {
                var image = new Image();
                image.onload = function () {
                    try {
                        _this.setElement(image, options);
                    } catch (e) {
                        console.log('Texture \'' + _this.name + '\': failed to load url: \'' + _this.source + '\'', e, options);
                    }

                    resolve(_this);
                };
                image.onerror = function (e) {
                    // Warn and resolve on error
                    console.log('Texture \'' + _this.name + '\': failed to load url: \'' + _this.source + '\'', e, options);
                    resolve(_this);
                };
                image.crossOrigin = 'anonymous';
                image.src = _this.source;
            });
            return this.loading;
        }

        // Sets texture to a raw image buffer
    }, {
        key: 'setData',
        value: function setData(width, height, data) {
            var options = arguments.length <= 3 || arguments[3] === undefined ? {} : arguments[3];

            this.width = width;
            this.height = height;

            this.source = data;
            this.sourceType = 'data';

            this.update(options);
            this.setFiltering(options);

            this.loading = _Promise.resolve(this);
            return this.loading;
        }

        // Sets the texture to track a element (canvas/image)
    }, {
        key: 'setElement',
        value: function setElement(element, options) {
            var el = element;

            // a string element is interpeted as a CSS selector
            if (typeof element === 'string') {
                element = document.querySelector(element);
            }

            if (element instanceof HTMLCanvasElement || element instanceof HTMLImageElement || element instanceof HTMLVideoElement) {
                this.source = element;
                this.sourceType = 'element';

                this.update(options);
                this.setFiltering(options);
            } else {
                var msg = 'the \'element\' parameter (`element: ' + JSON.stringify(el) + '`) must be a CSS ';
                msg += 'selector string, or a <canvas>, <image> or <video> object';
                console.log('Texture \'' + this.name + '\': ' + msg, options);
            }

            this.loading = _Promise.resolve(this);
            return this.loading;
        }

        // Uploads current image or buffer to the GPU (can be used to update animated textures on the fly)
    }, {
        key: 'update',
        value: function update() {
            var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

            if (!this.valid) {
                return;
            }

            this.bind();
            this.gl.pixelStorei(this.gl.UNPACK_FLIP_Y_WEBGL, options.UNPACK_FLIP_Y_WEBGL === false ? false : true);
            this.gl.pixelStorei(this.gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, options.UNPACK_PREMULTIPLY_ALPHA_WEBGL || false);

            // Image or Canvas element
            if (this.sourceType === 'element' && (this.source instanceof HTMLCanvasElement || this.source instanceof HTMLVideoElement || this.source instanceof HTMLImageElement && this.source.complete)) {
                this.width = this.source.width;
                this.height = this.source.height;
                this.gl.texImage2D(this.gl.TEXTURE_2D, 0, this.gl.RGBA, this.gl.RGBA, this.gl.UNSIGNED_BYTE, this.source);
            }
            // Raw image buffer
            else if (this.sourceType === 'data') {
                    this.gl.texImage2D(this.gl.TEXTURE_2D, 0, this.gl.RGBA, this.width, this.height, 0, this.gl.RGBA, this.gl.UNSIGNED_BYTE, this.source);
                }
            this.trigger('loaded', this);
        }

        // Determines appropriate filtering mode
    }, {
        key: 'setFiltering',
        value: function setFiltering() {
            var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

            if (!this.valid) {
                return;
            }

            this.powerOf2 = (0, _toolsCommon.isPowerOf2)(this.width) && (0, _toolsCommon.isPowerOf2)(this.height);
            var defualtFilter = this.powerOf2 ? 'mipmap' : 'linear';
            this.filtering = options.filtering || defualtFilter;

            var gl = this.gl;
            this.bind();

            // For power-of-2 textures, the following presets are available:
            // mipmap: linear blend from nearest mip
            // linear: linear blend from original image (no mips)
            // nearest: nearest pixel from original image (no mips, 'blocky' look)
            if (this.powerOf2) {
                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, options.TEXTURE_WRAP_S || options.repeat && gl.REPEAT || gl.CLAMP_TO_EDGE);
                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, options.TEXTURE_WRAP_T || options.repeat && gl.REPEAT || gl.CLAMP_TO_EDGE);

                if (this.filtering === 'mipmap') {
                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR_MIPMAP_LINEAR); // TODO: use trilinear filtering by defualt instead?
                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);
                    gl.generateMipmap(gl.TEXTURE_2D);
                } else if (this.filtering === 'linear') {
                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);
                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);
                } else if (this.filtering === 'nearest') {
                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);
                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);
                }
            } else {
                // WebGL has strict requirements on non-power-of-2 textures:
                // No mipmaps and must clamp to edge
                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);
                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);

                if (this.filtering === 'mipmap') {
                    this.filtering = 'linear';
                }

                if (this.filtering === 'nearest') {
                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);
                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);
                } else {
                    // default to linear for non-power-of-2 textures
                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);
                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);
                }
            }
        }
    }]);

    return Texture;
})();

exports['default'] = Texture;
Texture.getMaxTextureSize = function (gl) {
    return gl.getParameter(gl.MAX_TEXTURE_SIZE);
};

// Global set of textures, by name
Texture.activeUnit = -1;
module.exports = exports['default'];

},{"../tools/common":95,"../tools/mixin":96,"babel-runtime/core-js/promise":6,"babel-runtime/helpers/class-call-check":8,"babel-runtime/helpers/create-class":9}],94:[function(_dereq_,module,exports){
'use strict';

var _toConsumableArray = _dereq_('babel-runtime/helpers/to-consumable-array')['default'];

Object.defineProperty(exports, '__esModule', {
    value: true
});
exports.setupWebGL = setupWebGL;
exports.create3DContext = create3DContext;
exports.createShader = createShader;
exports.createProgram = createProgram;
exports.parseUniforms = parseUniforms;
var lastError = '';

/**
 * Creates the HTLM for a failure message
 * @param {string} canvasContainerId id of container of th
 *        canvas.
 * @return {string} The html.
 */
function makeFailHTML(msg) {
    return '\n<table style="background-color: #8CE; width: 100%; height: 100%;"><tr>\n<td align="center">\n<div style="display: table-cell; vertical-align: middle;">\n<div style="">' + msg + '</div>\n</div>\n</td></tr></table>\n';
}

/**
 * Mesasge for getting a webgl browser
 * @type {string}
 */
var GET_A_WEBGL_BROWSER = '\n\tThis page requires a browser that supports WebGL.<br/>\n\t<a href="http://get.webgl.org">Click here to upgrade your browser.</a>\n';

/**
 * Mesasge for need better hardware
 * @type {string}
 */
var OTHER_PROBLEM = '\n\tIt does not appear your computer can support WebGL.<br/>\n\t<a href="http://get.webgl.org/troubleshooting/">Click here for more information.</a>\n';

/**
 * Creates a webgl context. If creation fails it will
 * change the contents of the container of the <canvas>
 * tag to an error message with the correct links for WebGL.
 * @param {Element} canvas. The canvas element to create a
 *     context from.
 * @param {WebGLContextCreationAttirbutes} optAttribs Any
 *     creation attributes you want to pass in.
 * @return {WebGLRenderingContext} The created context.
 */

function setupWebGL(canvas, optAttribs) {
    function showLink(str) {
        var container = canvas.parentNode;
        if (container) {
            container.innerHTML = makeFailHTML(str);
        }
    }

    if (!window.WebGLRenderingContext) {
        showLink(GET_A_WEBGL_BROWSER);
        return null;
    }

    var context = create3DContext(canvas, optAttribs);
    if (!context) {
        showLink(OTHER_PROBLEM);
    }
    context.getExtension('OES_standard_derivatives');
    return context;
}

/**
 * Creates a webgl context.
 * @param {!Canvas} canvas The canvas tag to get context
 *     from. If one is not passed in one will be created.
 * @return {!WebGLContext} The created context.
 */

function create3DContext(canvas, optAttribs) {
    var names = ['webgl', 'experimental-webgl'];
    var context = null;
    for (var ii = 0; ii < names.length; ++ii) {
        try {
            context = canvas.getContext(names[ii], optAttribs);
        } catch (e) {
            if (context) {
                break;
            }
        }
    }
    return context;
}

/*
 *	Create a Vertex of a specific type (gl.VERTEX_SHADER/)
 */

function createShader(main, source, type) {
    var gl = main.gl;

    var shader = gl.createShader(type);
    gl.shaderSource(shader, source);
    gl.compileShader(shader);

    var compiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS);

    if (!compiled) {
        // Something went wrong during compilation; get the error
        lastError = gl.getShaderInfoLog(shader);
        console.error('*** Error compiling shader ' + shader + ':' + lastError);
        main.trigger('error', { shader: shader, source: source, type: type, error: lastError });
        gl.deleteShader(shader);
        return null;
    }

    return shader;
}

/**
 * Loads a shader.
 * @param {!WebGLContext} gl The WebGLContext to use.
 * @param {string} shaderSource The shader source.
 * @param {number} shaderType The type of shader.
 * @param {function(string): void) opt_errorCallback callback for errors.
 * @return {!WebGLShader} The created shader.
 */

function createProgram(main, shaders, optAttribs, optLocations) {
    var gl = main.gl;

    var program = gl.createProgram();
    for (var ii = 0; ii < shaders.length; ++ii) {
        gl.attachShader(program, shaders[ii]);
    }
    if (optAttribs) {
        for (var ii = 0; ii < optAttribs.length; ++ii) {
            gl.bindAttribLocation(program, optLocations ? optLocations[ii] : ii, optAttribs[ii]);
        }
    }
    gl.linkProgram(program);

    // Check the link status
    var linked = gl.getProgramParameter(program, gl.LINK_STATUS);
    if (!linked) {
        // something went wrong with the link
        lastError = gl.getProgramInfoLog(program);
        console.log('Error in program linking:' + lastError);
        gl.deleteProgram(program);
        return null;
    }
    return program;
}

// By Brett Camber on
// https://github.com/tangrams/tangram/blob/master/src/gl/glsl.js

function parseUniforms(uniforms) {
    var prefix = arguments.length <= 1 || arguments[1] === undefined ? null : arguments[1];

    var parsed = [];

    for (var _name in uniforms) {
        var uniform = uniforms[_name];
        var u = undefined;

        if (prefix) {
            _name = prefix + '.' + _name;
        }

        // Single float
        if (typeof uniform === 'number') {
            parsed.push({
                type: 'float',
                method: '1f',
                name: _name,
                value: uniform
            });
        }
        // Array: vector, array of floats, array of textures, or array of structs
        else if (Array.isArray(uniform)) {
                // Numeric values
                if (typeof uniform[0] === 'number') {
                    // float vectors (vec2, vec3, vec4)
                    if (uniform.length === 1) {
                        parsed.push({
                            type: 'float',
                            method: '1f',
                            name: _name,
                            value: uniform
                        });
                    }
                    // float vectors (vec2, vec3, vec4)
                    else if (uniform.length >= 2 && uniform.length <= 4) {
                            parsed.push({
                                type: 'vec' + uniform.length,
                                method: uniform.length + 'fv',
                                name: _name,
                                value: uniform
                            });
                        }
                        // float array
                        else if (uniform.length > 4) {
                                parsed.push({
                                    type: 'float[]',
                                    method: '1fv',
                                    name: _name + '[0]',
                                    value: uniform
                                });
                            }
                    // TODO: assume matrix for (typeof == Float32Array && length == 16)?
                }
                // Array of textures
                else if (typeof uniform[0] === 'string') {
                        parsed.push({
                            type: 'sampler2D',
                            method: '1i',
                            name: _name,
                            value: uniform
                        });
                    }
                    // Array of arrays - but only arrays of vectors are allowed in this case
                    else if (Array.isArray(uniform[0]) && typeof uniform[0][0] === 'number') {
                            // float vectors (vec2, vec3, vec4)
                            if (uniform[0].length >= 2 && uniform[0].length <= 4) {
                                // Set each vector in the array
                                for (u = 0; u < uniform.length; u++) {
                                    parsed.push({
                                        type: 'vec' + uniform[0].length,
                                        method: uniform[u].length + 'fv',
                                        name: _name + '[' + u + ']',
                                        value: uniform[u]
                                    });
                                }
                            }
                            // else error?
                        }
                        // Array of structures
                        else if (typeof uniform[0] === 'object') {
                                for (u = 0; u < uniform.length; u++) {
                                    // Set each struct in the array
                                    parsed.push.apply(parsed, _toConsumableArray(parseUniforms(uniform[u], _name + '[' + u + ']')));
                                }
                            }
            }
            // Boolean
            else if (typeof uniform === 'boolean') {
                    parsed.push({
                        type: 'bool',
                        method: '1i',
                        name: _name,
                        value: uniform
                    });
                }
                // Texture
                else if (typeof uniform === 'string') {
                        parsed.push({
                            type: 'sampler2D',
                            method: '1i',
                            name: _name,
                            value: uniform
                        });
                    }
                    // Structure
                    else if (typeof uniform === 'object') {
                            // Set each field in the struct
                            parsed.push.apply(parsed, _toConsumableArray(parseUniforms(uniform, _name)));
                        }
        // TODO: support other non-float types? (int, etc.)
    }
    return parsed;
}

},{"babel-runtime/helpers/to-consumable-array":11}],95:[function(_dereq_,module,exports){
'use strict';

var _Set = _dereq_('babel-runtime/core-js/set')['default'];

var _Object$assign = _dereq_('babel-runtime/core-js/object/assign')['default'];

var _getIterator = _dereq_('babel-runtime/core-js/get-iterator')['default'];

Object.defineProperty(exports, '__esModule', {
    value: true
});
exports.isCanvasVisible = isCanvasVisible;
exports.isPowerOf2 = isPowerOf2;
exports.nextHighestPowerOfTwo = nextHighestPowerOfTwo;
exports.FormatNumberLength = FormatNumberLength;
exports.getMousePos = getMousePos;
exports.isDiff = isDiff;
exports.subscribeMixin = subscribeMixin;

function isCanvasVisible(canvas) {
    return canvas.getBoundingClientRect().top + canvas.height > 0 && canvas.getBoundingClientRect().top < (window.innerHeight || document.documentElement.clientHeight);
}

function isPowerOf2(value) {
    return (value & value - 1) === 0;
}

function nextHighestPowerOfTwo(x) {
    --x;
    for (var i = 1; i < 32; i <<= 1) {
        x = x | x >> i;
    }
    return x + 1;
}

function FormatNumberLength(num, length) {
    var r = num.toString();
    while (r.length < length) {
        r = '0' + r;
    }
    return r;
}

function getMousePos(canvas, evt) {
    var rect = canvas.getBoundingClientRect();
    return {
        x: evt.clientX - rect.left,
        y: evt.clientY - rect.top
    };
}

function isDiff(a, b) {
    if (a && b) {
        return a.toString() !== b.toString();
    }
    return false;
}

function subscribeMixin(target) {
    var listeners = new _Set();

    return _Object$assign(target, {

        subscribe: function subscribe(listener) {
            listeners.add(listener);
        },

        on: function on(type, f) {
            var listener = {};
            listener[type] = f;
            listeners.add(listener);
        },

        unsubscribe: function unsubscribe(listener) {
            listeners['delete'](listener);
        },

        unsubscribeAll: function unsubscribeAll() {
            listeners.clear();
        },

        trigger: function trigger(event) {
            var _iteratorNormalCompletion = true;
            var _didIteratorError = false;
            var _iteratorError = undefined;

            try {
                for (var _len = arguments.length, data = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
                    data[_key - 1] = arguments[_key];
                }

                for (var _iterator = _getIterator(listeners), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                    var listener = _step.value;

                    if (typeof listener[event] === 'function') {
                        listener[event].apply(listener, data);
                    }
                }
            } catch (err) {
                _didIteratorError = true;
                _iteratorError = err;
            } finally {
                try {
                    if (!_iteratorNormalCompletion && _iterator['return']) {
                        _iterator['return']();
                    }
                } finally {
                    if (_didIteratorError) {
                        throw _iteratorError;
                    }
                }
            }
        }
    });
}

},{"babel-runtime/core-js/get-iterator":2,"babel-runtime/core-js/object/assign":3,"babel-runtime/core-js/set":7}],96:[function(_dereq_,module,exports){
'use strict';

var _Set = _dereq_('babel-runtime/core-js/set')['default'];

var _Object$assign = _dereq_('babel-runtime/core-js/object/assign')['default'];

var _getIterator = _dereq_('babel-runtime/core-js/get-iterator')['default'];

var _Object$keys = _dereq_('babel-runtime/core-js/object/keys')['default'];

Object.defineProperty(exports, '__esModule', {
    value: true
});
exports.subscribeMixin = subscribeMixin;

function subscribeMixin(target) {
    var listeners = new _Set();

    return _Object$assign(target, {

        on: function on(type, f) {
            var listener = {};
            listener[type] = f;
            listeners.add(listener);
        },

        off: function off(type, f) {
            if (f) {
                var listener = {};
                listener[type] = f;
                listeners['delete'](listener);
            } else {
                var _iteratorNormalCompletion = true;
                var _didIteratorError = false;
                var _iteratorError = undefined;

                try {
                    for (var _iterator = _getIterator(listeners), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                        var item = _step.value;
                        var _iteratorNormalCompletion2 = true;
                        var _didIteratorError2 = false;
                        var _iteratorError2 = undefined;

                        try {
                            for (var _iterator2 = _getIterator(_Object$keys(item)), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
                                var key = _step2.value;

                                if (key === type) {
                                    listeners['delete'](item);
                                    return;
                                }
                            }
                        } catch (err) {
                            _didIteratorError2 = true;
                            _iteratorError2 = err;
                        } finally {
                            try {
                                if (!_iteratorNormalCompletion2 && _iterator2['return']) {
                                    _iterator2['return']();
                                }
                            } finally {
                                if (_didIteratorError2) {
                                    throw _iteratorError2;
                                }
                            }
                        }
                    }
                } catch (err) {
                    _didIteratorError = true;
                    _iteratorError = err;
                } finally {
                    try {
                        if (!_iteratorNormalCompletion && _iterator['return']) {
                            _iterator['return']();
                        }
                    } finally {
                        if (_didIteratorError) {
                            throw _iteratorError;
                        }
                    }
                }
            }
        },

        listSubscriptions: function listSubscriptions() {
            var _iteratorNormalCompletion3 = true;
            var _didIteratorError3 = false;
            var _iteratorError3 = undefined;

            try {
                for (var _iterator3 = _getIterator(listeners), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
                    var item = _step3.value;

                    console.log(item);
                }
            } catch (err) {
                _didIteratorError3 = true;
                _iteratorError3 = err;
            } finally {
                try {
                    if (!_iteratorNormalCompletion3 && _iterator3['return']) {
                        _iterator3['return']();
                    }
                } finally {
                    if (_didIteratorError3) {
                        throw _iteratorError3;
                    }
                }
            }
        },

        subscribe: function subscribe(listener) {
            listeners.add(listener);
        },

        unsubscribe: function unsubscribe(listener) {
            listeners['delete'](listener);
        },

        unsubscribeAll: function unsubscribeAll() {
            listeners.clear();
        },

        trigger: function trigger(event) {
            var _iteratorNormalCompletion4 = true;
            var _didIteratorError4 = false;
            var _iteratorError4 = undefined;

            try {
                for (var _len = arguments.length, data = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
                    data[_key - 1] = arguments[_key];
                }

                for (var _iterator4 = _getIterator(listeners), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {
                    var listener = _step4.value;

                    if (typeof listener[event] === 'function') {
                        listener[event].apply(listener, data);
                    }
                }
            } catch (err) {
                _didIteratorError4 = true;
                _iteratorError4 = err;
            } finally {
                try {
                    if (!_iteratorNormalCompletion4 && _iterator4['return']) {
                        _iterator4['return']();
                    }
                } finally {
                    if (_didIteratorError4) {
                        throw _iteratorError4;
                    }
                }
            }
        }
    });
}

},{"babel-runtime/core-js/get-iterator":2,"babel-runtime/core-js/object/assign":3,"babel-runtime/core-js/object/keys":5,"babel-runtime/core-js/set":7}]},{},[92])(92)
});


}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{}],12:[function(_dereq_,module,exports){
/**
 * lodash (Custom Build) <https://lodash.com/>
 * Build: `lodash modularize exports="npm" -o ./`
 * Copyright jQuery Foundation and other contributors <https://jquery.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */

/** Used as references for various `Number` constants. */
var MAX_SAFE_INTEGER = 9007199254740991;

/** `Object#toString` result references. */
var argsTag = '[object Arguments]',
    funcTag = '[object Function]',
    genTag = '[object GeneratorFunction]';

/** Used to detect unsigned integer values. */
var reIsUint = /^(?:0|[1-9]\d*)$/;

/**
 * A faster alternative to `Function#apply`, this function invokes `func`
 * with the `this` binding of `thisArg` and the arguments of `args`.
 *
 * @private
 * @param {Function} func The function to invoke.
 * @param {*} thisArg The `this` binding of `func`.
 * @param {Array} args The arguments to invoke `func` with.
 * @returns {*} Returns the result of `func`.
 */
function apply(func, thisArg, args) {
  switch (args.length) {
    case 0: return func.call(thisArg);
    case 1: return func.call(thisArg, args[0]);
    case 2: return func.call(thisArg, args[0], args[1]);
    case 3: return func.call(thisArg, args[0], args[1], args[2]);
  }
  return func.apply(thisArg, args);
}

/**
 * The base implementation of `_.times` without support for iteratee shorthands
 * or max array length checks.
 *
 * @private
 * @param {number} n The number of times to invoke `iteratee`.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the array of results.
 */
function baseTimes(n, iteratee) {
  var index = -1,
      result = Array(n);

  while (++index < n) {
    result[index] = iteratee(index);
  }
  return result;
}

/**
 * Creates a unary function that invokes `func` with its argument transformed.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {Function} transform The argument transform.
 * @returns {Function} Returns the new function.
 */
function overArg(func, transform) {
  return function(arg) {
    return func(transform(arg));
  };
}

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var objectToString = objectProto.toString;

/** Built-in value references. */
var propertyIsEnumerable = objectProto.propertyIsEnumerable;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeKeys = overArg(Object.keys, Object),
    nativeMax = Math.max;

/** Detect if properties shadowing those on `Object.prototype` are non-enumerable. */
var nonEnumShadows = !propertyIsEnumerable.call({ 'valueOf': 1 }, 'valueOf');

/**
 * Creates an array of the enumerable property names of the array-like `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @param {boolean} inherited Specify returning inherited property names.
 * @returns {Array} Returns the array of property names.
 */
function arrayLikeKeys(value, inherited) {
  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.
  // Safari 9 makes `arguments.length` enumerable in strict mode.
  var result = (isArray(value) || isArguments(value))
    ? baseTimes(value.length, String)
    : [];

  var length = result.length,
      skipIndexes = !!length;

  for (var key in value) {
    if ((inherited || hasOwnProperty.call(value, key)) &&
        !(skipIndexes && (key == 'length' || isIndex(key, length)))) {
      result.push(key);
    }
  }
  return result;
}

/**
 * Assigns `value` to `key` of `object` if the existing value is not equivalent
 * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * for equality comparisons.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {string} key The key of the property to assign.
 * @param {*} value The value to assign.
 */
function assignValue(object, key, value) {
  var objValue = object[key];
  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||
      (value === undefined && !(key in object))) {
    object[key] = value;
  }
}

/**
 * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function baseKeys(object) {
  if (!isPrototype(object)) {
    return nativeKeys(object);
  }
  var result = [];
  for (var key in Object(object)) {
    if (hasOwnProperty.call(object, key) && key != 'constructor') {
      result.push(key);
    }
  }
  return result;
}

/**
 * The base implementation of `_.rest` which doesn't validate or coerce arguments.
 *
 * @private
 * @param {Function} func The function to apply a rest parameter to.
 * @param {number} [start=func.length-1] The start position of the rest parameter.
 * @returns {Function} Returns the new function.
 */
function baseRest(func, start) {
  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);
  return function() {
    var args = arguments,
        index = -1,
        length = nativeMax(args.length - start, 0),
        array = Array(length);

    while (++index < length) {
      array[index] = args[start + index];
    }
    index = -1;
    var otherArgs = Array(start + 1);
    while (++index < start) {
      otherArgs[index] = args[index];
    }
    otherArgs[start] = array;
    return apply(func, this, otherArgs);
  };
}

/**
 * Copies properties of `source` to `object`.
 *
 * @private
 * @param {Object} source The object to copy properties from.
 * @param {Array} props The property identifiers to copy.
 * @param {Object} [object={}] The object to copy properties to.
 * @param {Function} [customizer] The function to customize copied values.
 * @returns {Object} Returns `object`.
 */
function copyObject(source, props, object, customizer) {
  object || (object = {});

  var index = -1,
      length = props.length;

  while (++index < length) {
    var key = props[index];

    var newValue = customizer
      ? customizer(object[key], source[key], key, object, source)
      : undefined;

    assignValue(object, key, newValue === undefined ? source[key] : newValue);
  }
  return object;
}

/**
 * Creates a function like `_.assign`.
 *
 * @private
 * @param {Function} assigner The function to assign values.
 * @returns {Function} Returns the new assigner function.
 */
function createAssigner(assigner) {
  return baseRest(function(object, sources) {
    var index = -1,
        length = sources.length,
        customizer = length > 1 ? sources[length - 1] : undefined,
        guard = length > 2 ? sources[2] : undefined;

    customizer = (assigner.length > 3 && typeof customizer == 'function')
      ? (length--, customizer)
      : undefined;

    if (guard && isIterateeCall(sources[0], sources[1], guard)) {
      customizer = length < 3 ? undefined : customizer;
      length = 1;
    }
    object = Object(object);
    while (++index < length) {
      var source = sources[index];
      if (source) {
        assigner(object, source, index, customizer);
      }
    }
    return object;
  });
}

/**
 * Checks if `value` is a valid array-like index.
 *
 * @private
 * @param {*} value The value to check.
 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
 */
function isIndex(value, length) {
  length = length == null ? MAX_SAFE_INTEGER : length;
  return !!length &&
    (typeof value == 'number' || reIsUint.test(value)) &&
    (value > -1 && value % 1 == 0 && value < length);
}

/**
 * Checks if the given arguments are from an iteratee call.
 *
 * @private
 * @param {*} value The potential iteratee value argument.
 * @param {*} index The potential iteratee index or key argument.
 * @param {*} object The potential iteratee object argument.
 * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
 *  else `false`.
 */
function isIterateeCall(value, index, object) {
  if (!isObject(object)) {
    return false;
  }
  var type = typeof index;
  if (type == 'number'
        ? (isArrayLike(object) && isIndex(index, object.length))
        : (type == 'string' && index in object)
      ) {
    return eq(object[index], value);
  }
  return false;
}

/**
 * Checks if `value` is likely a prototype object.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
 */
function isPrototype(value) {
  var Ctor = value && value.constructor,
      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;

  return value === proto;
}

/**
 * Performs a
 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * comparison between two values to determine if they are equivalent.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 * @example
 *
 * var object = { 'a': 1 };
 * var other = { 'a': 1 };
 *
 * _.eq(object, object);
 * // => true
 *
 * _.eq(object, other);
 * // => false
 *
 * _.eq('a', 'a');
 * // => true
 *
 * _.eq('a', Object('a'));
 * // => false
 *
 * _.eq(NaN, NaN);
 * // => true
 */
function eq(value, other) {
  return value === other || (value !== value && other !== other);
}

/**
 * Checks if `value` is likely an `arguments` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 *  else `false`.
 * @example
 *
 * _.isArguments(function() { return arguments; }());
 * // => true
 *
 * _.isArguments([1, 2, 3]);
 * // => false
 */
function isArguments(value) {
  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.
  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&
    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);
}

/**
 * Checks if `value` is classified as an `Array` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array, else `false`.
 * @example
 *
 * _.isArray([1, 2, 3]);
 * // => true
 *
 * _.isArray(document.body.children);
 * // => false
 *
 * _.isArray('abc');
 * // => false
 *
 * _.isArray(_.noop);
 * // => false
 */
var isArray = Array.isArray;

/**
 * Checks if `value` is array-like. A value is considered array-like if it's
 * not a function and has a `value.length` that's an integer greater than or
 * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
 * @example
 *
 * _.isArrayLike([1, 2, 3]);
 * // => true
 *
 * _.isArrayLike(document.body.children);
 * // => true
 *
 * _.isArrayLike('abc');
 * // => true
 *
 * _.isArrayLike(_.noop);
 * // => false
 */
function isArrayLike(value) {
  return value != null && isLength(value.length) && !isFunction(value);
}

/**
 * This method is like `_.isArrayLike` except that it also checks if `value`
 * is an object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array-like object,
 *  else `false`.
 * @example
 *
 * _.isArrayLikeObject([1, 2, 3]);
 * // => true
 *
 * _.isArrayLikeObject(document.body.children);
 * // => true
 *
 * _.isArrayLikeObject('abc');
 * // => false
 *
 * _.isArrayLikeObject(_.noop);
 * // => false
 */
function isArrayLikeObject(value) {
  return isObjectLike(value) && isArrayLike(value);
}

/**
 * Checks if `value` is classified as a `Function` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
 * @example
 *
 * _.isFunction(_);
 * // => true
 *
 * _.isFunction(/abc/);
 * // => false
 */
function isFunction(value) {
  // The use of `Object#toString` avoids issues with the `typeof` operator
  // in Safari 8-9 which returns 'object' for typed array and other constructors.
  var tag = isObject(value) ? objectToString.call(value) : '';
  return tag == funcTag || tag == genTag;
}

/**
 * Checks if `value` is a valid array-like length.
 *
 * **Note:** This method is loosely based on
 * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
 * @example
 *
 * _.isLength(3);
 * // => true
 *
 * _.isLength(Number.MIN_VALUE);
 * // => false
 *
 * _.isLength(Infinity);
 * // => false
 *
 * _.isLength('3');
 * // => false
 */
function isLength(value) {
  return typeof value == 'number' &&
    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
}

/**
 * Checks if `value` is the
 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(_.noop);
 * // => true
 *
 * _.isObject(null);
 * // => false
 */
function isObject(value) {
  var type = typeof value;
  return !!value && (type == 'object' || type == 'function');
}

/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */
function isObjectLike(value) {
  return !!value && typeof value == 'object';
}

/**
 * Assigns own enumerable string keyed properties of source objects to the
 * destination object. Source objects are applied from left to right.
 * Subsequent sources overwrite property assignments of previous sources.
 *
 * **Note:** This method mutates `object` and is loosely based on
 * [`Object.assign`](https://mdn.io/Object/assign).
 *
 * @static
 * @memberOf _
 * @since 0.10.0
 * @category Object
 * @param {Object} object The destination object.
 * @param {...Object} [sources] The source objects.
 * @returns {Object} Returns `object`.
 * @see _.assignIn
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 * }
 *
 * function Bar() {
 *   this.c = 3;
 * }
 *
 * Foo.prototype.b = 2;
 * Bar.prototype.d = 4;
 *
 * _.assign({ 'a': 0 }, new Foo, new Bar);
 * // => { 'a': 1, 'c': 3 }
 */
var assign = createAssigner(function(object, source) {
  if (nonEnumShadows || isPrototype(source) || isArrayLike(source)) {
    copyObject(source, keys(source), object);
    return;
  }
  for (var key in source) {
    if (hasOwnProperty.call(source, key)) {
      assignValue(object, key, source[key]);
    }
  }
});

/**
 * Creates an array of the own enumerable property names of `object`.
 *
 * **Note:** Non-object values are coerced to objects. See the
 * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
 * for more details.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.keys(new Foo);
 * // => ['a', 'b'] (iteration order is not guaranteed)
 *
 * _.keys('hi');
 * // => ['0', '1']
 */
function keys(object) {
  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
}

module.exports = assign;

},{}],13:[function(_dereq_,module,exports){
(function (global){
/**
 * lodash (Custom Build) <https://lodash.com/>
 * Build: `lodash modularize exports="npm" -o ./`
 * Copyright jQuery Foundation and other contributors <https://jquery.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */

/** Used as the `TypeError` message for "Functions" methods. */
var FUNC_ERROR_TEXT = 'Expected a function';

/** Used as references for various `Number` constants. */
var NAN = 0 / 0;

/** `Object#toString` result references. */
var symbolTag = '[object Symbol]';

/** Used to match leading and trailing whitespace. */
var reTrim = /^\s+|\s+$/g;

/** Used to detect bad signed hexadecimal string values. */
var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

/** Used to detect binary string values. */
var reIsBinary = /^0b[01]+$/i;

/** Used to detect octal string values. */
var reIsOctal = /^0o[0-7]+$/i;

/** Built-in method references without a dependency on `root`. */
var freeParseInt = parseInt;

/** Detect free variable `global` from Node.js. */
var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

/** Detect free variable `self`. */
var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

/** Used as a reference to the global object. */
var root = freeGlobal || freeSelf || Function('return this')();

/** Used for built-in method references. */
var objectProto = Object.prototype;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var objectToString = objectProto.toString;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max,
    nativeMin = Math.min;

/**
 * Gets the timestamp of the number of milliseconds that have elapsed since
 * the Unix epoch (1 January 1970 00:00:00 UTC).
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Date
 * @returns {number} Returns the timestamp.
 * @example
 *
 * _.defer(function(stamp) {
 *   console.log(_.now() - stamp);
 * }, _.now());
 * // => Logs the number of milliseconds it took for the deferred invocation.
 */
var now = function() {
  return root.Date.now();
};

/**
 * Creates a debounced function that delays invoking `func` until after `wait`
 * milliseconds have elapsed since the last time the debounced function was
 * invoked. The debounced function comes with a `cancel` method to cancel
 * delayed `func` invocations and a `flush` method to immediately invoke them.
 * Provide `options` to indicate whether `func` should be invoked on the
 * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
 * with the last arguments provided to the debounced function. Subsequent
 * calls to the debounced function return the result of the last `func`
 * invocation.
 *
 * **Note:** If `leading` and `trailing` options are `true`, `func` is
 * invoked on the trailing edge of the timeout only if the debounced function
 * is invoked more than once during the `wait` timeout.
 *
 * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
 * until to the next tick, similar to `setTimeout` with a timeout of `0`.
 *
 * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
 * for details over the differences between `_.debounce` and `_.throttle`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to debounce.
 * @param {number} [wait=0] The number of milliseconds to delay.
 * @param {Object} [options={}] The options object.
 * @param {boolean} [options.leading=false]
 *  Specify invoking on the leading edge of the timeout.
 * @param {number} [options.maxWait]
 *  The maximum time `func` is allowed to be delayed before it's invoked.
 * @param {boolean} [options.trailing=true]
 *  Specify invoking on the trailing edge of the timeout.
 * @returns {Function} Returns the new debounced function.
 * @example
 *
 * // Avoid costly calculations while the window size is in flux.
 * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
 *
 * // Invoke `sendMail` when clicked, debouncing subsequent calls.
 * jQuery(element).on('click', _.debounce(sendMail, 300, {
 *   'leading': true,
 *   'trailing': false
 * }));
 *
 * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
 * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
 * var source = new EventSource('/stream');
 * jQuery(source).on('message', debounced);
 *
 * // Cancel the trailing debounced invocation.
 * jQuery(window).on('popstate', debounced.cancel);
 */
function debounce(func, wait, options) {
  var lastArgs,
      lastThis,
      maxWait,
      result,
      timerId,
      lastCallTime,
      lastInvokeTime = 0,
      leading = false,
      maxing = false,
      trailing = true;

  if (typeof func != 'function') {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  wait = toNumber(wait) || 0;
  if (isObject(options)) {
    leading = !!options.leading;
    maxing = 'maxWait' in options;
    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
    trailing = 'trailing' in options ? !!options.trailing : trailing;
  }

  function invokeFunc(time) {
    var args = lastArgs,
        thisArg = lastThis;

    lastArgs = lastThis = undefined;
    lastInvokeTime = time;
    result = func.apply(thisArg, args);
    return result;
  }

  function leadingEdge(time) {
    // Reset any `maxWait` timer.
    lastInvokeTime = time;
    // Start the timer for the trailing edge.
    timerId = setTimeout(timerExpired, wait);
    // Invoke the leading edge.
    return leading ? invokeFunc(time) : result;
  }

  function remainingWait(time) {
    var timeSinceLastCall = time - lastCallTime,
        timeSinceLastInvoke = time - lastInvokeTime,
        result = wait - timeSinceLastCall;

    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;
  }

  function shouldInvoke(time) {
    var timeSinceLastCall = time - lastCallTime,
        timeSinceLastInvoke = time - lastInvokeTime;

    // Either this is the first call, activity has stopped and we're at the
    // trailing edge, the system time has gone backwards and we're treating
    // it as the trailing edge, or we've hit the `maxWait` limit.
    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||
      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));
  }

  function timerExpired() {
    var time = now();
    if (shouldInvoke(time)) {
      return trailingEdge(time);
    }
    // Restart the timer.
    timerId = setTimeout(timerExpired, remainingWait(time));
  }

  function trailingEdge(time) {
    timerId = undefined;

    // Only invoke if we have `lastArgs` which means `func` has been
    // debounced at least once.
    if (trailing && lastArgs) {
      return invokeFunc(time);
    }
    lastArgs = lastThis = undefined;
    return result;
  }

  function cancel() {
    if (timerId !== undefined) {
      clearTimeout(timerId);
    }
    lastInvokeTime = 0;
    lastArgs = lastCallTime = lastThis = timerId = undefined;
  }

  function flush() {
    return timerId === undefined ? result : trailingEdge(now());
  }

  function debounced() {
    var time = now(),
        isInvoking = shouldInvoke(time);

    lastArgs = arguments;
    lastThis = this;
    lastCallTime = time;

    if (isInvoking) {
      if (timerId === undefined) {
        return leadingEdge(lastCallTime);
      }
      if (maxing) {
        // Handle invocations in a tight loop.
        timerId = setTimeout(timerExpired, wait);
        return invokeFunc(lastCallTime);
      }
    }
    if (timerId === undefined) {
      timerId = setTimeout(timerExpired, wait);
    }
    return result;
  }
  debounced.cancel = cancel;
  debounced.flush = flush;
  return debounced;
}

/**
 * Creates a throttled function that only invokes `func` at most once per
 * every `wait` milliseconds. The throttled function comes with a `cancel`
 * method to cancel delayed `func` invocations and a `flush` method to
 * immediately invoke them. Provide `options` to indicate whether `func`
 * should be invoked on the leading and/or trailing edge of the `wait`
 * timeout. The `func` is invoked with the last arguments provided to the
 * throttled function. Subsequent calls to the throttled function return the
 * result of the last `func` invocation.
 *
 * **Note:** If `leading` and `trailing` options are `true`, `func` is
 * invoked on the trailing edge of the timeout only if the throttled function
 * is invoked more than once during the `wait` timeout.
 *
 * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
 * until to the next tick, similar to `setTimeout` with a timeout of `0`.
 *
 * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
 * for details over the differences between `_.throttle` and `_.debounce`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to throttle.
 * @param {number} [wait=0] The number of milliseconds to throttle invocations to.
 * @param {Object} [options={}] The options object.
 * @param {boolean} [options.leading=true]
 *  Specify invoking on the leading edge of the timeout.
 * @param {boolean} [options.trailing=true]
 *  Specify invoking on the trailing edge of the timeout.
 * @returns {Function} Returns the new throttled function.
 * @example
 *
 * // Avoid excessively updating the position while scrolling.
 * jQuery(window).on('scroll', _.throttle(updatePosition, 100));
 *
 * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.
 * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });
 * jQuery(element).on('click', throttled);
 *
 * // Cancel the trailing throttled invocation.
 * jQuery(window).on('popstate', throttled.cancel);
 */
function throttle(func, wait, options) {
  var leading = true,
      trailing = true;

  if (typeof func != 'function') {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  if (isObject(options)) {
    leading = 'leading' in options ? !!options.leading : leading;
    trailing = 'trailing' in options ? !!options.trailing : trailing;
  }
  return debounce(func, wait, {
    'leading': leading,
    'maxWait': wait,
    'trailing': trailing
  });
}

/**
 * Checks if `value` is the
 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(_.noop);
 * // => true
 *
 * _.isObject(null);
 * // => false
 */
function isObject(value) {
  var type = typeof value;
  return !!value && (type == 'object' || type == 'function');
}

/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */
function isObjectLike(value) {
  return !!value && typeof value == 'object';
}

/**
 * Checks if `value` is classified as a `Symbol` primitive or object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
 * @example
 *
 * _.isSymbol(Symbol.iterator);
 * // => true
 *
 * _.isSymbol('abc');
 * // => false
 */
function isSymbol(value) {
  return typeof value == 'symbol' ||
    (isObjectLike(value) && objectToString.call(value) == symbolTag);
}

/**
 * Converts `value` to a number.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to process.
 * @returns {number} Returns the number.
 * @example
 *
 * _.toNumber(3.2);
 * // => 3.2
 *
 * _.toNumber(Number.MIN_VALUE);
 * // => 5e-324
 *
 * _.toNumber(Infinity);
 * // => Infinity
 *
 * _.toNumber('3.2');
 * // => 3.2
 */
function toNumber(value) {
  if (typeof value == 'number') {
    return value;
  }
  if (isSymbol(value)) {
    return NAN;
  }
  if (isObject(value)) {
    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
    value = isObject(other) ? (other + '') : other;
  }
  if (typeof value != 'string') {
    return value === 0 ? value : +value;
  }
  value = value.replace(reTrim, '');
  var isBinary = reIsBinary.test(value);
  return (isBinary || reIsOctal.test(value))
    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
    : (reIsBadHex.test(value) ? NAN : +value);
}

module.exports = throttle;

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{}],14:[function(_dereq_,module,exports){
//! moment.js
//! version : 2.15.2
//! authors : Tim Wood, Iskren Chernev, Moment.js contributors
//! license : MIT
//! momentjs.com

;(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :
    typeof define === 'function' && define.amd ? define(factory) :
    global.moment = factory()
}(this, function () { 'use strict';

    var hookCallback;

    function utils_hooks__hooks () {
        return hookCallback.apply(null, arguments);
    }

    // This is done to register the method called with moment()
    // without creating circular dependencies.
    function setHookCallback (callback) {
        hookCallback = callback;
    }

    function isArray(input) {
        return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';
    }

    function isObject(input) {
        // IE8 will treat undefined and null as object if it wasn't for
        // input != null
        return input != null && Object.prototype.toString.call(input) === '[object Object]';
    }

    function isObjectEmpty(obj) {
        var k;
        for (k in obj) {
            // even if its not own property I'd still call it non-empty
            return false;
        }
        return true;
    }

    function isDate(input) {
        return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';
    }

    function map(arr, fn) {
        var res = [], i;
        for (i = 0; i < arr.length; ++i) {
            res.push(fn(arr[i], i));
        }
        return res;
    }

    function hasOwnProp(a, b) {
        return Object.prototype.hasOwnProperty.call(a, b);
    }

    function extend(a, b) {
        for (var i in b) {
            if (hasOwnProp(b, i)) {
                a[i] = b[i];
            }
        }

        if (hasOwnProp(b, 'toString')) {
            a.toString = b.toString;
        }

        if (hasOwnProp(b, 'valueOf')) {
            a.valueOf = b.valueOf;
        }

        return a;
    }

    function create_utc__createUTC (input, format, locale, strict) {
        return createLocalOrUTC(input, format, locale, strict, true).utc();
    }

    function defaultParsingFlags() {
        // We need to deep clone this object.
        return {
            empty           : false,
            unusedTokens    : [],
            unusedInput     : [],
            overflow        : -2,
            charsLeftOver   : 0,
            nullInput       : false,
            invalidMonth    : null,
            invalidFormat   : false,
            userInvalidated : false,
            iso             : false,
            parsedDateParts : [],
            meridiem        : null
        };
    }

    function getParsingFlags(m) {
        if (m._pf == null) {
            m._pf = defaultParsingFlags();
        }
        return m._pf;
    }

    var some;
    if (Array.prototype.some) {
        some = Array.prototype.some;
    } else {
        some = function (fun) {
            var t = Object(this);
            var len = t.length >>> 0;

            for (var i = 0; i < len; i++) {
                if (i in t && fun.call(this, t[i], i, t)) {
                    return true;
                }
            }

            return false;
        };
    }

    function valid__isValid(m) {
        if (m._isValid == null) {
            var flags = getParsingFlags(m);
            var parsedParts = some.call(flags.parsedDateParts, function (i) {
                return i != null;
            });
            var isNowValid = !isNaN(m._d.getTime()) &&
                flags.overflow < 0 &&
                !flags.empty &&
                !flags.invalidMonth &&
                !flags.invalidWeekday &&
                !flags.nullInput &&
                !flags.invalidFormat &&
                !flags.userInvalidated &&
                (!flags.meridiem || (flags.meridiem && parsedParts));

            if (m._strict) {
                isNowValid = isNowValid &&
                    flags.charsLeftOver === 0 &&
                    flags.unusedTokens.length === 0 &&
                    flags.bigHour === undefined;
            }

            if (Object.isFrozen == null || !Object.isFrozen(m)) {
                m._isValid = isNowValid;
            }
            else {
                return isNowValid;
            }
        }
        return m._isValid;
    }

    function valid__createInvalid (flags) {
        var m = create_utc__createUTC(NaN);
        if (flags != null) {
            extend(getParsingFlags(m), flags);
        }
        else {
            getParsingFlags(m).userInvalidated = true;
        }

        return m;
    }

    function isUndefined(input) {
        return input === void 0;
    }

    // Plugins that add properties should also add the key here (null value),
    // so we can properly clone ourselves.
    var momentProperties = utils_hooks__hooks.momentProperties = [];

    function copyConfig(to, from) {
        var i, prop, val;

        if (!isUndefined(from._isAMomentObject)) {
            to._isAMomentObject = from._isAMomentObject;
        }
        if (!isUndefined(from._i)) {
            to._i = from._i;
        }
        if (!isUndefined(from._f)) {
            to._f = from._f;
        }
        if (!isUndefined(from._l)) {
            to._l = from._l;
        }
        if (!isUndefined(from._strict)) {
            to._strict = from._strict;
        }
        if (!isUndefined(from._tzm)) {
            to._tzm = from._tzm;
        }
        if (!isUndefined(from._isUTC)) {
            to._isUTC = from._isUTC;
        }
        if (!isUndefined(from._offset)) {
            to._offset = from._offset;
        }
        if (!isUndefined(from._pf)) {
            to._pf = getParsingFlags(from);
        }
        if (!isUndefined(from._locale)) {
            to._locale = from._locale;
        }

        if (momentProperties.length > 0) {
            for (i in momentProperties) {
                prop = momentProperties[i];
                val = from[prop];
                if (!isUndefined(val)) {
                    to[prop] = val;
                }
            }
        }

        return to;
    }

    var updateInProgress = false;

    // Moment prototype object
    function Moment(config) {
        copyConfig(this, config);
        this._d = new Date(config._d != null ? config._d.getTime() : NaN);
        // Prevent infinite loop in case updateOffset creates new moment
        // objects.
        if (updateInProgress === false) {
            updateInProgress = true;
            utils_hooks__hooks.updateOffset(this);
            updateInProgress = false;
        }
    }

    function isMoment (obj) {
        return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);
    }

    function absFloor (number) {
        if (number < 0) {
            // -0 -> 0
            return Math.ceil(number) || 0;
        } else {
            return Math.floor(number);
        }
    }

    function toInt(argumentForCoercion) {
        var coercedNumber = +argumentForCoercion,
            value = 0;

        if (coercedNumber !== 0 && isFinite(coercedNumber)) {
            value = absFloor(coercedNumber);
        }

        return value;
    }

    // compare two arrays, return the number of differences
    function compareArrays(array1, array2, dontConvert) {
        var len = Math.min(array1.length, array2.length),
            lengthDiff = Math.abs(array1.length - array2.length),
            diffs = 0,
            i;
        for (i = 0; i < len; i++) {
            if ((dontConvert && array1[i] !== array2[i]) ||
                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {
                diffs++;
            }
        }
        return diffs + lengthDiff;
    }

    function warn(msg) {
        if (utils_hooks__hooks.suppressDeprecationWarnings === false &&
                (typeof console !==  'undefined') && console.warn) {
            console.warn('Deprecation warning: ' + msg);
        }
    }

    function deprecate(msg, fn) {
        var firstTime = true;

        return extend(function () {
            if (utils_hooks__hooks.deprecationHandler != null) {
                utils_hooks__hooks.deprecationHandler(null, msg);
            }
            if (firstTime) {
                var args = [];
                var arg;
                for (var i = 0; i < arguments.length; i++) {
                    arg = '';
                    if (typeof arguments[i] === 'object') {
                        arg += '\n[' + i + '] ';
                        for (var key in arguments[0]) {
                            arg += key + ': ' + arguments[0][key] + ', ';
                        }
                        arg = arg.slice(0, -2); // Remove trailing comma and space
                    } else {
                        arg = arguments[i];
                    }
                    args.push(arg);
                }
                warn(msg + '\nArguments: ' + Array.prototype.slice.call(args).join('') + '\n' + (new Error()).stack);
                firstTime = false;
            }
            return fn.apply(this, arguments);
        }, fn);
    }

    var deprecations = {};

    function deprecateSimple(name, msg) {
        if (utils_hooks__hooks.deprecationHandler != null) {
            utils_hooks__hooks.deprecationHandler(name, msg);
        }
        if (!deprecations[name]) {
            warn(msg);
            deprecations[name] = true;
        }
    }

    utils_hooks__hooks.suppressDeprecationWarnings = false;
    utils_hooks__hooks.deprecationHandler = null;

    function isFunction(input) {
        return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';
    }

    function locale_set__set (config) {
        var prop, i;
        for (i in config) {
            prop = config[i];
            if (isFunction(prop)) {
                this[i] = prop;
            } else {
                this['_' + i] = prop;
            }
        }
        this._config = config;
        // Lenient ordinal parsing accepts just a number in addition to
        // number + (possibly) stuff coming from _ordinalParseLenient.
        this._ordinalParseLenient = new RegExp(this._ordinalParse.source + '|' + (/\d{1,2}/).source);
    }

    function mergeConfigs(parentConfig, childConfig) {
        var res = extend({}, parentConfig), prop;
        for (prop in childConfig) {
            if (hasOwnProp(childConfig, prop)) {
                if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {
                    res[prop] = {};
                    extend(res[prop], parentConfig[prop]);
                    extend(res[prop], childConfig[prop]);
                } else if (childConfig[prop] != null) {
                    res[prop] = childConfig[prop];
                } else {
                    delete res[prop];
                }
            }
        }
        for (prop in parentConfig) {
            if (hasOwnProp(parentConfig, prop) &&
                    !hasOwnProp(childConfig, prop) &&
                    isObject(parentConfig[prop])) {
                // make sure changes to properties don't modify parent config
                res[prop] = extend({}, res[prop]);
            }
        }
        return res;
    }

    function Locale(config) {
        if (config != null) {
            this.set(config);
        }
    }

    var keys;

    if (Object.keys) {
        keys = Object.keys;
    } else {
        keys = function (obj) {
            var i, res = [];
            for (i in obj) {
                if (hasOwnProp(obj, i)) {
                    res.push(i);
                }
            }
            return res;
        };
    }

    var defaultCalendar = {
        sameDay : '[Today at] LT',
        nextDay : '[Tomorrow at] LT',
        nextWeek : 'dddd [at] LT',
        lastDay : '[Yesterday at] LT',
        lastWeek : '[Last] dddd [at] LT',
        sameElse : 'L'
    };

    function locale_calendar__calendar (key, mom, now) {
        var output = this._calendar[key] || this._calendar['sameElse'];
        return isFunction(output) ? output.call(mom, now) : output;
    }

    var defaultLongDateFormat = {
        LTS  : 'h:mm:ss A',
        LT   : 'h:mm A',
        L    : 'MM/DD/YYYY',
        LL   : 'MMMM D, YYYY',
        LLL  : 'MMMM D, YYYY h:mm A',
        LLLL : 'dddd, MMMM D, YYYY h:mm A'
    };

    function longDateFormat (key) {
        var format = this._longDateFormat[key],
            formatUpper = this._longDateFormat[key.toUpperCase()];

        if (format || !formatUpper) {
            return format;
        }

        this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {
            return val.slice(1);
        });

        return this._longDateFormat[key];
    }

    var defaultInvalidDate = 'Invalid date';

    function invalidDate () {
        return this._invalidDate;
    }

    var defaultOrdinal = '%d';
    var defaultOrdinalParse = /\d{1,2}/;

    function ordinal (number) {
        return this._ordinal.replace('%d', number);
    }

    var defaultRelativeTime = {
        future : 'in %s',
        past   : '%s ago',
        s  : 'a few seconds',
        m  : 'a minute',
        mm : '%d minutes',
        h  : 'an hour',
        hh : '%d hours',
        d  : 'a day',
        dd : '%d days',
        M  : 'a month',
        MM : '%d months',
        y  : 'a year',
        yy : '%d years'
    };

    function relative__relativeTime (number, withoutSuffix, string, isFuture) {
        var output = this._relativeTime[string];
        return (isFunction(output)) ?
            output(number, withoutSuffix, string, isFuture) :
            output.replace(/%d/i, number);
    }

    function pastFuture (diff, output) {
        var format = this._relativeTime[diff > 0 ? 'future' : 'past'];
        return isFunction(format) ? format(output) : format.replace(/%s/i, output);
    }

    var aliases = {};

    function addUnitAlias (unit, shorthand) {
        var lowerCase = unit.toLowerCase();
        aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;
    }

    function normalizeUnits(units) {
        return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;
    }

    function normalizeObjectUnits(inputObject) {
        var normalizedInput = {},
            normalizedProp,
            prop;

        for (prop in inputObject) {
            if (hasOwnProp(inputObject, prop)) {
                normalizedProp = normalizeUnits(prop);
                if (normalizedProp) {
                    normalizedInput[normalizedProp] = inputObject[prop];
                }
            }
        }

        return normalizedInput;
    }

    var priorities = {};

    function addUnitPriority(unit, priority) {
        priorities[unit] = priority;
    }

    function getPrioritizedUnits(unitsObj) {
        var units = [];
        for (var u in unitsObj) {
            units.push({unit: u, priority: priorities[u]});
        }
        units.sort(function (a, b) {
            return a.priority - b.priority;
        });
        return units;
    }

    function makeGetSet (unit, keepTime) {
        return function (value) {
            if (value != null) {
                get_set__set(this, unit, value);
                utils_hooks__hooks.updateOffset(this, keepTime);
                return this;
            } else {
                return get_set__get(this, unit);
            }
        };
    }

    function get_set__get (mom, unit) {
        return mom.isValid() ?
            mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;
    }

    function get_set__set (mom, unit, value) {
        if (mom.isValid()) {
            mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);
        }
    }

    // MOMENTS

    function stringGet (units) {
        units = normalizeUnits(units);
        if (isFunction(this[units])) {
            return this[units]();
        }
        return this;
    }


    function stringSet (units, value) {
        if (typeof units === 'object') {
            units = normalizeObjectUnits(units);
            var prioritized = getPrioritizedUnits(units);
            for (var i = 0; i < prioritized.length; i++) {
                this[prioritized[i].unit](units[prioritized[i].unit]);
            }
        } else {
            units = normalizeUnits(units);
            if (isFunction(this[units])) {
                return this[units](value);
            }
        }
        return this;
    }

    function zeroFill(number, targetLength, forceSign) {
        var absNumber = '' + Math.abs(number),
            zerosToFill = targetLength - absNumber.length,
            sign = number >= 0;
        return (sign ? (forceSign ? '+' : '') : '-') +
            Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;
    }

    var formattingTokens = /(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;

    var localFormattingTokens = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g;

    var formatFunctions = {};

    var formatTokenFunctions = {};

    // token:    'M'
    // padded:   ['MM', 2]
    // ordinal:  'Mo'
    // callback: function () { this.month() + 1 }
    function addFormatToken (token, padded, ordinal, callback) {
        var func = callback;
        if (typeof callback === 'string') {
            func = function () {
                return this[callback]();
            };
        }
        if (token) {
            formatTokenFunctions[token] = func;
        }
        if (padded) {
            formatTokenFunctions[padded[0]] = function () {
                return zeroFill(func.apply(this, arguments), padded[1], padded[2]);
            };
        }
        if (ordinal) {
            formatTokenFunctions[ordinal] = function () {
                return this.localeData().ordinal(func.apply(this, arguments), token);
            };
        }
    }

    function removeFormattingTokens(input) {
        if (input.match(/\[[\s\S]/)) {
            return input.replace(/^\[|\]$/g, '');
        }
        return input.replace(/\\/g, '');
    }

    function makeFormatFunction(format) {
        var array = format.match(formattingTokens), i, length;

        for (i = 0, length = array.length; i < length; i++) {
            if (formatTokenFunctions[array[i]]) {
                array[i] = formatTokenFunctions[array[i]];
            } else {
                array[i] = removeFormattingTokens(array[i]);
            }
        }

        return function (mom) {
            var output = '', i;
            for (i = 0; i < length; i++) {
                output += array[i] instanceof Function ? array[i].call(mom, format) : array[i];
            }
            return output;
        };
    }

    // format date using native date object
    function formatMoment(m, format) {
        if (!m.isValid()) {
            return m.localeData().invalidDate();
        }

        format = expandFormat(format, m.localeData());
        formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);

        return formatFunctions[format](m);
    }

    function expandFormat(format, locale) {
        var i = 5;

        function replaceLongDateFormatTokens(input) {
            return locale.longDateFormat(input) || input;
        }

        localFormattingTokens.lastIndex = 0;
        while (i >= 0 && localFormattingTokens.test(format)) {
            format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);
            localFormattingTokens.lastIndex = 0;
            i -= 1;
        }

        return format;
    }

    var match1         = /\d/;            //       0 - 9
    var match2         = /\d\d/;          //      00 - 99
    var match3         = /\d{3}/;         //     000 - 999
    var match4         = /\d{4}/;         //    0000 - 9999
    var match6         = /[+-]?\d{6}/;    // -999999 - 999999
    var match1to2      = /\d\d?/;         //       0 - 99
    var match3to4      = /\d\d\d\d?/;     //     999 - 9999
    var match5to6      = /\d\d\d\d\d\d?/; //   99999 - 999999
    var match1to3      = /\d{1,3}/;       //       0 - 999
    var match1to4      = /\d{1,4}/;       //       0 - 9999
    var match1to6      = /[+-]?\d{1,6}/;  // -999999 - 999999

    var matchUnsigned  = /\d+/;           //       0 - inf
    var matchSigned    = /[+-]?\d+/;      //    -inf - inf

    var matchOffset    = /Z|[+-]\d\d:?\d\d/gi; // +00:00 -00:00 +0000 -0000 or Z
    var matchShortOffset = /Z|[+-]\d\d(?::?\d\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z

    var matchTimestamp = /[+-]?\d+(\.\d{1,3})?/; // 123456789 123456789.123

    // any word (or two) characters or numbers including two/three word month in arabic.
    // includes scottish gaelic two word and hyphenated months
    var matchWord = /[0-9]*['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+|[\u0600-\u06FF\/]+(\s*?[\u0600-\u06FF]+){1,2}/i;


    var regexes = {};

    function addRegexToken (token, regex, strictRegex) {
        regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {
            return (isStrict && strictRegex) ? strictRegex : regex;
        };
    }

    function getParseRegexForToken (token, config) {
        if (!hasOwnProp(regexes, token)) {
            return new RegExp(unescapeFormat(token));
        }

        return regexes[token](config._strict, config._locale);
    }

    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript
    function unescapeFormat(s) {
        return regexEscape(s.replace('\\', '').replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, function (matched, p1, p2, p3, p4) {
            return p1 || p2 || p3 || p4;
        }));
    }

    function regexEscape(s) {
        return s.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&');
    }

    var tokens = {};

    function addParseToken (token, callback) {
        var i, func = callback;
        if (typeof token === 'string') {
            token = [token];
        }
        if (typeof callback === 'number') {
            func = function (input, array) {
                array[callback] = toInt(input);
            };
        }
        for (i = 0; i < token.length; i++) {
            tokens[token[i]] = func;
        }
    }

    function addWeekParseToken (token, callback) {
        addParseToken(token, function (input, array, config, token) {
            config._w = config._w || {};
            callback(input, config._w, config, token);
        });
    }

    function addTimeToArrayFromToken(token, input, config) {
        if (input != null && hasOwnProp(tokens, token)) {
            tokens[token](input, config._a, config, token);
        }
    }

    var YEAR = 0;
    var MONTH = 1;
    var DATE = 2;
    var HOUR = 3;
    var MINUTE = 4;
    var SECOND = 5;
    var MILLISECOND = 6;
    var WEEK = 7;
    var WEEKDAY = 8;

    var indexOf;

    if (Array.prototype.indexOf) {
        indexOf = Array.prototype.indexOf;
    } else {
        indexOf = function (o) {
            // I know
            var i;
            for (i = 0; i < this.length; ++i) {
                if (this[i] === o) {
                    return i;
                }
            }
            return -1;
        };
    }

    function daysInMonth(year, month) {
        return new Date(Date.UTC(year, month + 1, 0)).getUTCDate();
    }

    // FORMATTING

    addFormatToken('M', ['MM', 2], 'Mo', function () {
        return this.month() + 1;
    });

    addFormatToken('MMM', 0, 0, function (format) {
        return this.localeData().monthsShort(this, format);
    });

    addFormatToken('MMMM', 0, 0, function (format) {
        return this.localeData().months(this, format);
    });

    // ALIASES

    addUnitAlias('month', 'M');

    // PRIORITY

    addUnitPriority('month', 8);

    // PARSING

    addRegexToken('M',    match1to2);
    addRegexToken('MM',   match1to2, match2);
    addRegexToken('MMM',  function (isStrict, locale) {
        return locale.monthsShortRegex(isStrict);
    });
    addRegexToken('MMMM', function (isStrict, locale) {
        return locale.monthsRegex(isStrict);
    });

    addParseToken(['M', 'MM'], function (input, array) {
        array[MONTH] = toInt(input) - 1;
    });

    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {
        var month = config._locale.monthsParse(input, token, config._strict);
        // if we didn't find a month name, mark the date as invalid.
        if (month != null) {
            array[MONTH] = month;
        } else {
            getParsingFlags(config).invalidMonth = input;
        }
    });

    // LOCALES

    var MONTHS_IN_FORMAT = /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/;
    var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');
    function localeMonths (m, format) {
        if (!m) {
            return this._months;
        }
        return isArray(this._months) ? this._months[m.month()] :
            this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];
    }

    var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');
    function localeMonthsShort (m, format) {
        if (!m) {
            return this._monthsShort;
        }
        return isArray(this._monthsShort) ? this._monthsShort[m.month()] :
            this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];
    }

    function units_month__handleStrictParse(monthName, format, strict) {
        var i, ii, mom, llc = monthName.toLocaleLowerCase();
        if (!this._monthsParse) {
            // this is not used
            this._monthsParse = [];
            this._longMonthsParse = [];
            this._shortMonthsParse = [];
            for (i = 0; i < 12; ++i) {
                mom = create_utc__createUTC([2000, i]);
                this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();
                this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();
            }
        }

        if (strict) {
            if (format === 'MMM') {
                ii = indexOf.call(this._shortMonthsParse, llc);
                return ii !== -1 ? ii : null;
            } else {
                ii = indexOf.call(this._longMonthsParse, llc);
                return ii !== -1 ? ii : null;
            }
        } else {
            if (format === 'MMM') {
                ii = indexOf.call(this._shortMonthsParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._longMonthsParse, llc);
                return ii !== -1 ? ii : null;
            } else {
                ii = indexOf.call(this._longMonthsParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._shortMonthsParse, llc);
                return ii !== -1 ? ii : null;
            }
        }
    }

    function localeMonthsParse (monthName, format, strict) {
        var i, mom, regex;

        if (this._monthsParseExact) {
            return units_month__handleStrictParse.call(this, monthName, format, strict);
        }

        if (!this._monthsParse) {
            this._monthsParse = [];
            this._longMonthsParse = [];
            this._shortMonthsParse = [];
        }

        // TODO: add sorting
        // Sorting makes sure if one month (or abbr) is a prefix of another
        // see sorting in computeMonthsParse
        for (i = 0; i < 12; i++) {
            // make the regex if we don't have it already
            mom = create_utc__createUTC([2000, i]);
            if (strict && !this._longMonthsParse[i]) {
                this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');
                this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');
            }
            if (!strict && !this._monthsParse[i]) {
                regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');
                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');
            }
            // test the regex
            if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {
                return i;
            } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {
                return i;
            } else if (!strict && this._monthsParse[i].test(monthName)) {
                return i;
            }
        }
    }

    // MOMENTS

    function setMonth (mom, value) {
        var dayOfMonth;

        if (!mom.isValid()) {
            // No op
            return mom;
        }

        if (typeof value === 'string') {
            if (/^\d+$/.test(value)) {
                value = toInt(value);
            } else {
                value = mom.localeData().monthsParse(value);
                // TODO: Another silent failure?
                if (typeof value !== 'number') {
                    return mom;
                }
            }
        }

        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));
        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);
        return mom;
    }

    function getSetMonth (value) {
        if (value != null) {
            setMonth(this, value);
            utils_hooks__hooks.updateOffset(this, true);
            return this;
        } else {
            return get_set__get(this, 'Month');
        }
    }

    function getDaysInMonth () {
        return daysInMonth(this.year(), this.month());
    }

    var defaultMonthsShortRegex = matchWord;
    function monthsShortRegex (isStrict) {
        if (this._monthsParseExact) {
            if (!hasOwnProp(this, '_monthsRegex')) {
                computeMonthsParse.call(this);
            }
            if (isStrict) {
                return this._monthsShortStrictRegex;
            } else {
                return this._monthsShortRegex;
            }
        } else {
            if (!hasOwnProp(this, '_monthsShortRegex')) {
                this._monthsShortRegex = defaultMonthsShortRegex;
            }
            return this._monthsShortStrictRegex && isStrict ?
                this._monthsShortStrictRegex : this._monthsShortRegex;
        }
    }

    var defaultMonthsRegex = matchWord;
    function monthsRegex (isStrict) {
        if (this._monthsParseExact) {
            if (!hasOwnProp(this, '_monthsRegex')) {
                computeMonthsParse.call(this);
            }
            if (isStrict) {
                return this._monthsStrictRegex;
            } else {
                return this._monthsRegex;
            }
        } else {
            if (!hasOwnProp(this, '_monthsRegex')) {
                this._monthsRegex = defaultMonthsRegex;
            }
            return this._monthsStrictRegex && isStrict ?
                this._monthsStrictRegex : this._monthsRegex;
        }
    }

    function computeMonthsParse () {
        function cmpLenRev(a, b) {
            return b.length - a.length;
        }

        var shortPieces = [], longPieces = [], mixedPieces = [],
            i, mom;
        for (i = 0; i < 12; i++) {
            // make the regex if we don't have it already
            mom = create_utc__createUTC([2000, i]);
            shortPieces.push(this.monthsShort(mom, ''));
            longPieces.push(this.months(mom, ''));
            mixedPieces.push(this.months(mom, ''));
            mixedPieces.push(this.monthsShort(mom, ''));
        }
        // Sorting makes sure if one month (or abbr) is a prefix of another it
        // will match the longer piece.
        shortPieces.sort(cmpLenRev);
        longPieces.sort(cmpLenRev);
        mixedPieces.sort(cmpLenRev);
        for (i = 0; i < 12; i++) {
            shortPieces[i] = regexEscape(shortPieces[i]);
            longPieces[i] = regexEscape(longPieces[i]);
        }
        for (i = 0; i < 24; i++) {
            mixedPieces[i] = regexEscape(mixedPieces[i]);
        }

        this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
        this._monthsShortRegex = this._monthsRegex;
        this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');
        this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');
    }

    // FORMATTING

    addFormatToken('Y', 0, 0, function () {
        var y = this.year();
        return y <= 9999 ? '' + y : '+' + y;
    });

    addFormatToken(0, ['YY', 2], 0, function () {
        return this.year() % 100;
    });

    addFormatToken(0, ['YYYY',   4],       0, 'year');
    addFormatToken(0, ['YYYYY',  5],       0, 'year');
    addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');

    // ALIASES

    addUnitAlias('year', 'y');

    // PRIORITIES

    addUnitPriority('year', 1);

    // PARSING

    addRegexToken('Y',      matchSigned);
    addRegexToken('YY',     match1to2, match2);
    addRegexToken('YYYY',   match1to4, match4);
    addRegexToken('YYYYY',  match1to6, match6);
    addRegexToken('YYYYYY', match1to6, match6);

    addParseToken(['YYYYY', 'YYYYYY'], YEAR);
    addParseToken('YYYY', function (input, array) {
        array[YEAR] = input.length === 2 ? utils_hooks__hooks.parseTwoDigitYear(input) : toInt(input);
    });
    addParseToken('YY', function (input, array) {
        array[YEAR] = utils_hooks__hooks.parseTwoDigitYear(input);
    });
    addParseToken('Y', function (input, array) {
        array[YEAR] = parseInt(input, 10);
    });

    // HELPERS

    function daysInYear(year) {
        return isLeapYear(year) ? 366 : 365;
    }

    function isLeapYear(year) {
        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;
    }

    // HOOKS

    utils_hooks__hooks.parseTwoDigitYear = function (input) {
        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);
    };

    // MOMENTS

    var getSetYear = makeGetSet('FullYear', true);

    function getIsLeapYear () {
        return isLeapYear(this.year());
    }

    function createDate (y, m, d, h, M, s, ms) {
        //can't just apply() to create a date:
        //http://stackoverflow.com/questions/181348/instantiating-a-javascript-object-by-calling-prototype-constructor-apply
        var date = new Date(y, m, d, h, M, s, ms);

        //the date constructor remaps years 0-99 to 1900-1999
        if (y < 100 && y >= 0 && isFinite(date.getFullYear())) {
            date.setFullYear(y);
        }
        return date;
    }

    function createUTCDate (y) {
        var date = new Date(Date.UTC.apply(null, arguments));

        //the Date.UTC function remaps years 0-99 to 1900-1999
        if (y < 100 && y >= 0 && isFinite(date.getUTCFullYear())) {
            date.setUTCFullYear(y);
        }
        return date;
    }

    // start-of-first-week - start-of-year
    function firstWeekOffset(year, dow, doy) {
        var // first-week day -- which january is always in the first week (4 for iso, 1 for other)
            fwd = 7 + dow - doy,
            // first-week day local weekday -- which local weekday is fwd
            fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;

        return -fwdlw + fwd - 1;
    }

    //http://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday
    function dayOfYearFromWeeks(year, week, weekday, dow, doy) {
        var localWeekday = (7 + weekday - dow) % 7,
            weekOffset = firstWeekOffset(year, dow, doy),
            dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,
            resYear, resDayOfYear;

        if (dayOfYear <= 0) {
            resYear = year - 1;
            resDayOfYear = daysInYear(resYear) + dayOfYear;
        } else if (dayOfYear > daysInYear(year)) {
            resYear = year + 1;
            resDayOfYear = dayOfYear - daysInYear(year);
        } else {
            resYear = year;
            resDayOfYear = dayOfYear;
        }

        return {
            year: resYear,
            dayOfYear: resDayOfYear
        };
    }

    function weekOfYear(mom, dow, doy) {
        var weekOffset = firstWeekOffset(mom.year(), dow, doy),
            week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,
            resWeek, resYear;

        if (week < 1) {
            resYear = mom.year() - 1;
            resWeek = week + weeksInYear(resYear, dow, doy);
        } else if (week > weeksInYear(mom.year(), dow, doy)) {
            resWeek = week - weeksInYear(mom.year(), dow, doy);
            resYear = mom.year() + 1;
        } else {
            resYear = mom.year();
            resWeek = week;
        }

        return {
            week: resWeek,
            year: resYear
        };
    }

    function weeksInYear(year, dow, doy) {
        var weekOffset = firstWeekOffset(year, dow, doy),
            weekOffsetNext = firstWeekOffset(year + 1, dow, doy);
        return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;
    }

    // FORMATTING

    addFormatToken('w', ['ww', 2], 'wo', 'week');
    addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');

    // ALIASES

    addUnitAlias('week', 'w');
    addUnitAlias('isoWeek', 'W');

    // PRIORITIES

    addUnitPriority('week', 5);
    addUnitPriority('isoWeek', 5);

    // PARSING

    addRegexToken('w',  match1to2);
    addRegexToken('ww', match1to2, match2);
    addRegexToken('W',  match1to2);
    addRegexToken('WW', match1to2, match2);

    addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {
        week[token.substr(0, 1)] = toInt(input);
    });

    // HELPERS

    // LOCALES

    function localeWeek (mom) {
        return weekOfYear(mom, this._week.dow, this._week.doy).week;
    }

    var defaultLocaleWeek = {
        dow : 0, // Sunday is the first day of the week.
        doy : 6  // The week that contains Jan 1st is the first week of the year.
    };

    function localeFirstDayOfWeek () {
        return this._week.dow;
    }

    function localeFirstDayOfYear () {
        return this._week.doy;
    }

    // MOMENTS

    function getSetWeek (input) {
        var week = this.localeData().week(this);
        return input == null ? week : this.add((input - week) * 7, 'd');
    }

    function getSetISOWeek (input) {
        var week = weekOfYear(this, 1, 4).week;
        return input == null ? week : this.add((input - week) * 7, 'd');
    }

    // FORMATTING

    addFormatToken('d', 0, 'do', 'day');

    addFormatToken('dd', 0, 0, function (format) {
        return this.localeData().weekdaysMin(this, format);
    });

    addFormatToken('ddd', 0, 0, function (format) {
        return this.localeData().weekdaysShort(this, format);
    });

    addFormatToken('dddd', 0, 0, function (format) {
        return this.localeData().weekdays(this, format);
    });

    addFormatToken('e', 0, 0, 'weekday');
    addFormatToken('E', 0, 0, 'isoWeekday');

    // ALIASES

    addUnitAlias('day', 'd');
    addUnitAlias('weekday', 'e');
    addUnitAlias('isoWeekday', 'E');

    // PRIORITY
    addUnitPriority('day', 11);
    addUnitPriority('weekday', 11);
    addUnitPriority('isoWeekday', 11);

    // PARSING

    addRegexToken('d',    match1to2);
    addRegexToken('e',    match1to2);
    addRegexToken('E',    match1to2);
    addRegexToken('dd',   function (isStrict, locale) {
        return locale.weekdaysMinRegex(isStrict);
    });
    addRegexToken('ddd',   function (isStrict, locale) {
        return locale.weekdaysShortRegex(isStrict);
    });
    addRegexToken('dddd',   function (isStrict, locale) {
        return locale.weekdaysRegex(isStrict);
    });

    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {
        var weekday = config._locale.weekdaysParse(input, token, config._strict);
        // if we didn't get a weekday name, mark the date as invalid
        if (weekday != null) {
            week.d = weekday;
        } else {
            getParsingFlags(config).invalidWeekday = input;
        }
    });

    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {
        week[token] = toInt(input);
    });

    // HELPERS

    function parseWeekday(input, locale) {
        if (typeof input !== 'string') {
            return input;
        }

        if (!isNaN(input)) {
            return parseInt(input, 10);
        }

        input = locale.weekdaysParse(input);
        if (typeof input === 'number') {
            return input;
        }

        return null;
    }

    function parseIsoWeekday(input, locale) {
        if (typeof input === 'string') {
            return locale.weekdaysParse(input) % 7 || 7;
        }
        return isNaN(input) ? null : input;
    }

    // LOCALES

    var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');
    function localeWeekdays (m, format) {
        if (!m) {
            return this._weekdays;
        }
        return isArray(this._weekdays) ? this._weekdays[m.day()] :
            this._weekdays[this._weekdays.isFormat.test(format) ? 'format' : 'standalone'][m.day()];
    }

    var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');
    function localeWeekdaysShort (m) {
        return (m) ? this._weekdaysShort[m.day()] : this._weekdaysShort;
    }

    var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');
    function localeWeekdaysMin (m) {
        return (m) ? this._weekdaysMin[m.day()] : this._weekdaysMin;
    }

    function day_of_week__handleStrictParse(weekdayName, format, strict) {
        var i, ii, mom, llc = weekdayName.toLocaleLowerCase();
        if (!this._weekdaysParse) {
            this._weekdaysParse = [];
            this._shortWeekdaysParse = [];
            this._minWeekdaysParse = [];

            for (i = 0; i < 7; ++i) {
                mom = create_utc__createUTC([2000, 1]).day(i);
                this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();
                this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();
                this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();
            }
        }

        if (strict) {
            if (format === 'dddd') {
                ii = indexOf.call(this._weekdaysParse, llc);
                return ii !== -1 ? ii : null;
            } else if (format === 'ddd') {
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            } else {
                ii = indexOf.call(this._minWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            }
        } else {
            if (format === 'dddd') {
                ii = indexOf.call(this._weekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._minWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            } else if (format === 'ddd') {
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._weekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._minWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            } else {
                ii = indexOf.call(this._minWeekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._weekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            }
        }
    }

    function localeWeekdaysParse (weekdayName, format, strict) {
        var i, mom, regex;

        if (this._weekdaysParseExact) {
            return day_of_week__handleStrictParse.call(this, weekdayName, format, strict);
        }

        if (!this._weekdaysParse) {
            this._weekdaysParse = [];
            this._minWeekdaysParse = [];
            this._shortWeekdaysParse = [];
            this._fullWeekdaysParse = [];
        }

        for (i = 0; i < 7; i++) {
            // make the regex if we don't have it already

            mom = create_utc__createUTC([2000, 1]).day(i);
            if (strict && !this._fullWeekdaysParse[i]) {
                this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\.?') + '$', 'i');
                this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\.?') + '$', 'i');
                this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\.?') + '$', 'i');
            }
            if (!this._weekdaysParse[i]) {
                regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');
                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');
            }
            // test the regex
            if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {
                return i;
            } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {
                return i;
            } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {
                return i;
            } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {
                return i;
            }
        }
    }

    // MOMENTS

    function getSetDayOfWeek (input) {
        if (!this.isValid()) {
            return input != null ? this : NaN;
        }
        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
        if (input != null) {
            input = parseWeekday(input, this.localeData());
            return this.add(input - day, 'd');
        } else {
            return day;
        }
    }

    function getSetLocaleDayOfWeek (input) {
        if (!this.isValid()) {
            return input != null ? this : NaN;
        }
        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;
        return input == null ? weekday : this.add(input - weekday, 'd');
    }

    function getSetISODayOfWeek (input) {
        if (!this.isValid()) {
            return input != null ? this : NaN;
        }

        // behaves the same as moment#day except
        // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)
        // as a setter, sunday should belong to the previous week.

        if (input != null) {
            var weekday = parseIsoWeekday(input, this.localeData());
            return this.day(this.day() % 7 ? weekday : weekday - 7);
        } else {
            return this.day() || 7;
        }
    }

    var defaultWeekdaysRegex = matchWord;
    function weekdaysRegex (isStrict) {
        if (this._weekdaysParseExact) {
            if (!hasOwnProp(this, '_weekdaysRegex')) {
                computeWeekdaysParse.call(this);
            }
            if (isStrict) {
                return this._weekdaysStrictRegex;
            } else {
                return this._weekdaysRegex;
            }
        } else {
            if (!hasOwnProp(this, '_weekdaysRegex')) {
                this._weekdaysRegex = defaultWeekdaysRegex;
            }
            return this._weekdaysStrictRegex && isStrict ?
                this._weekdaysStrictRegex : this._weekdaysRegex;
        }
    }

    var defaultWeekdaysShortRegex = matchWord;
    function weekdaysShortRegex (isStrict) {
        if (this._weekdaysParseExact) {
            if (!hasOwnProp(this, '_weekdaysRegex')) {
                computeWeekdaysParse.call(this);
            }
            if (isStrict) {
                return this._weekdaysShortStrictRegex;
            } else {
                return this._weekdaysShortRegex;
            }
        } else {
            if (!hasOwnProp(this, '_weekdaysShortRegex')) {
                this._weekdaysShortRegex = defaultWeekdaysShortRegex;
            }
            return this._weekdaysShortStrictRegex && isStrict ?
                this._weekdaysShortStrictRegex : this._weekdaysShortRegex;
        }
    }

    var defaultWeekdaysMinRegex = matchWord;
    function weekdaysMinRegex (isStrict) {
        if (this._weekdaysParseExact) {
            if (!hasOwnProp(this, '_weekdaysRegex')) {
                computeWeekdaysParse.call(this);
            }
            if (isStrict) {
                return this._weekdaysMinStrictRegex;
            } else {
                return this._weekdaysMinRegex;
            }
        } else {
            if (!hasOwnProp(this, '_weekdaysMinRegex')) {
                this._weekdaysMinRegex = defaultWeekdaysMinRegex;
            }
            return this._weekdaysMinStrictRegex && isStrict ?
                this._weekdaysMinStrictRegex : this._weekdaysMinRegex;
        }
    }


    function computeWeekdaysParse () {
        function cmpLenRev(a, b) {
            return b.length - a.length;
        }

        var minPieces = [], shortPieces = [], longPieces = [], mixedPieces = [],
            i, mom, minp, shortp, longp;
        for (i = 0; i < 7; i++) {
            // make the regex if we don't have it already
            mom = create_utc__createUTC([2000, 1]).day(i);
            minp = this.weekdaysMin(mom, '');
            shortp = this.weekdaysShort(mom, '');
            longp = this.weekdays(mom, '');
            minPieces.push(minp);
            shortPieces.push(shortp);
            longPieces.push(longp);
            mixedPieces.push(minp);
            mixedPieces.push(shortp);
            mixedPieces.push(longp);
        }
        // Sorting makes sure if one weekday (or abbr) is a prefix of another it
        // will match the longer piece.
        minPieces.sort(cmpLenRev);
        shortPieces.sort(cmpLenRev);
        longPieces.sort(cmpLenRev);
        mixedPieces.sort(cmpLenRev);
        for (i = 0; i < 7; i++) {
            shortPieces[i] = regexEscape(shortPieces[i]);
            longPieces[i] = regexEscape(longPieces[i]);
            mixedPieces[i] = regexEscape(mixedPieces[i]);
        }

        this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
        this._weekdaysShortRegex = this._weekdaysRegex;
        this._weekdaysMinRegex = this._weekdaysRegex;

        this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');
        this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');
        this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');
    }

    // FORMATTING

    function hFormat() {
        return this.hours() % 12 || 12;
    }

    function kFormat() {
        return this.hours() || 24;
    }

    addFormatToken('H', ['HH', 2], 0, 'hour');
    addFormatToken('h', ['hh', 2], 0, hFormat);
    addFormatToken('k', ['kk', 2], 0, kFormat);

    addFormatToken('hmm', 0, 0, function () {
        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);
    });

    addFormatToken('hmmss', 0, 0, function () {
        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) +
            zeroFill(this.seconds(), 2);
    });

    addFormatToken('Hmm', 0, 0, function () {
        return '' + this.hours() + zeroFill(this.minutes(), 2);
    });

    addFormatToken('Hmmss', 0, 0, function () {
        return '' + this.hours() + zeroFill(this.minutes(), 2) +
            zeroFill(this.seconds(), 2);
    });

    function meridiem (token, lowercase) {
        addFormatToken(token, 0, 0, function () {
            return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);
        });
    }

    meridiem('a', true);
    meridiem('A', false);

    // ALIASES

    addUnitAlias('hour', 'h');

    // PRIORITY
    addUnitPriority('hour', 13);

    // PARSING

    function matchMeridiem (isStrict, locale) {
        return locale._meridiemParse;
    }

    addRegexToken('a',  matchMeridiem);
    addRegexToken('A',  matchMeridiem);
    addRegexToken('H',  match1to2);
    addRegexToken('h',  match1to2);
    addRegexToken('HH', match1to2, match2);
    addRegexToken('hh', match1to2, match2);

    addRegexToken('hmm', match3to4);
    addRegexToken('hmmss', match5to6);
    addRegexToken('Hmm', match3to4);
    addRegexToken('Hmmss', match5to6);

    addParseToken(['H', 'HH'], HOUR);
    addParseToken(['a', 'A'], function (input, array, config) {
        config._isPm = config._locale.isPM(input);
        config._meridiem = input;
    });
    addParseToken(['h', 'hh'], function (input, array, config) {
        array[HOUR] = toInt(input);
        getParsingFlags(config).bigHour = true;
    });
    addParseToken('hmm', function (input, array, config) {
        var pos = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos));
        array[MINUTE] = toInt(input.substr(pos));
        getParsingFlags(config).bigHour = true;
    });
    addParseToken('hmmss', function (input, array, config) {
        var pos1 = input.length - 4;
        var pos2 = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos1));
        array[MINUTE] = toInt(input.substr(pos1, 2));
        array[SECOND] = toInt(input.substr(pos2));
        getParsingFlags(config).bigHour = true;
    });
    addParseToken('Hmm', function (input, array, config) {
        var pos = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos));
        array[MINUTE] = toInt(input.substr(pos));
    });
    addParseToken('Hmmss', function (input, array, config) {
        var pos1 = input.length - 4;
        var pos2 = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos1));
        array[MINUTE] = toInt(input.substr(pos1, 2));
        array[SECOND] = toInt(input.substr(pos2));
    });

    // LOCALES

    function localeIsPM (input) {
        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays
        // Using charAt should be more compatible.
        return ((input + '').toLowerCase().charAt(0) === 'p');
    }

    var defaultLocaleMeridiemParse = /[ap]\.?m?\.?/i;
    function localeMeridiem (hours, minutes, isLower) {
        if (hours > 11) {
            return isLower ? 'pm' : 'PM';
        } else {
            return isLower ? 'am' : 'AM';
        }
    }


    // MOMENTS

    // Setting the hour should keep the time, because the user explicitly
    // specified which hour he wants. So trying to maintain the same hour (in
    // a new timezone) makes sense. Adding/subtracting hours does not follow
    // this rule.
    var getSetHour = makeGetSet('Hours', true);

    var baseConfig = {
        calendar: defaultCalendar,
        longDateFormat: defaultLongDateFormat,
        invalidDate: defaultInvalidDate,
        ordinal: defaultOrdinal,
        ordinalParse: defaultOrdinalParse,
        relativeTime: defaultRelativeTime,

        months: defaultLocaleMonths,
        monthsShort: defaultLocaleMonthsShort,

        week: defaultLocaleWeek,

        weekdays: defaultLocaleWeekdays,
        weekdaysMin: defaultLocaleWeekdaysMin,
        weekdaysShort: defaultLocaleWeekdaysShort,

        meridiemParse: defaultLocaleMeridiemParse
    };

    // internal storage for locale config files
    var locales = {};
    var globalLocale;

    function normalizeLocale(key) {
        return key ? key.toLowerCase().replace('_', '-') : key;
    }

    // pick the locale from the array
    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each
    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root
    function chooseLocale(names) {
        var i = 0, j, next, locale, split;

        while (i < names.length) {
            split = normalizeLocale(names[i]).split('-');
            j = split.length;
            next = normalizeLocale(names[i + 1]);
            next = next ? next.split('-') : null;
            while (j > 0) {
                locale = loadLocale(split.slice(0, j).join('-'));
                if (locale) {
                    return locale;
                }
                if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {
                    //the next array item is better than a shallower substring of this one
                    break;
                }
                j--;
            }
            i++;
        }
        return null;
    }

    function loadLocale(name) {
        var oldLocale = null;
        // TODO: Find a better way to register and load all the locales in Node
        if (!locales[name] && (typeof module !== 'undefined') &&
                module && module.exports) {
            try {
                oldLocale = globalLocale._abbr;
                _dereq_('./locale/' + name);
                // because defineLocale currently also sets the global locale, we
                // want to undo that for lazy loaded locales
                locale_locales__getSetGlobalLocale(oldLocale);
            } catch (e) { }
        }
        return locales[name];
    }

    // This function will load locale and then set the global locale.  If
    // no arguments are passed in, it will simply return the current global
    // locale key.
    function locale_locales__getSetGlobalLocale (key, values) {
        var data;
        if (key) {
            if (isUndefined(values)) {
                data = locale_locales__getLocale(key);
            }
            else {
                data = defineLocale(key, values);
            }

            if (data) {
                // moment.duration._locale = moment._locale = data;
                globalLocale = data;
            }
        }

        return globalLocale._abbr;
    }

    function defineLocale (name, config) {
        if (config !== null) {
            var parentConfig = baseConfig;
            config.abbr = name;
            if (locales[name] != null) {
                deprecateSimple('defineLocaleOverride',
                        'use moment.updateLocale(localeName, config) to change ' +
                        'an existing locale. moment.defineLocale(localeName, ' +
                        'config) should only be used for creating a new locale ' +
                        'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');
                parentConfig = locales[name]._config;
            } else if (config.parentLocale != null) {
                if (locales[config.parentLocale] != null) {
                    parentConfig = locales[config.parentLocale]._config;
                } else {
                    // treat as if there is no base config
                    deprecateSimple('parentLocaleUndefined',
                            'specified parentLocale is not defined yet. See http://momentjs.com/guides/#/warnings/parent-locale/');
                }
            }
            locales[name] = new Locale(mergeConfigs(parentConfig, config));

            // backwards compat for now: also set the locale
            locale_locales__getSetGlobalLocale(name);

            return locales[name];
        } else {
            // useful for testing
            delete locales[name];
            return null;
        }
    }

    function updateLocale(name, config) {
        if (config != null) {
            var locale, parentConfig = baseConfig;
            // MERGE
            if (locales[name] != null) {
                parentConfig = locales[name]._config;
            }
            config = mergeConfigs(parentConfig, config);
            locale = new Locale(config);
            locale.parentLocale = locales[name];
            locales[name] = locale;

            // backwards compat for now: also set the locale
            locale_locales__getSetGlobalLocale(name);
        } else {
            // pass null for config to unupdate, useful for tests
            if (locales[name] != null) {
                if (locales[name].parentLocale != null) {
                    locales[name] = locales[name].parentLocale;
                } else if (locales[name] != null) {
                    delete locales[name];
                }
            }
        }
        return locales[name];
    }

    // returns locale data
    function locale_locales__getLocale (key) {
        var locale;

        if (key && key._locale && key._locale._abbr) {
            key = key._locale._abbr;
        }

        if (!key) {
            return globalLocale;
        }

        if (!isArray(key)) {
            //short-circuit everything else
            locale = loadLocale(key);
            if (locale) {
                return locale;
            }
            key = [key];
        }

        return chooseLocale(key);
    }

    function locale_locales__listLocales() {
        return keys(locales);
    }

    function checkOverflow (m) {
        var overflow;
        var a = m._a;

        if (a && getParsingFlags(m).overflow === -2) {
            overflow =
                a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :
                a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :
                a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :
                a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :
                a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :
                a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :
                -1;

            if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {
                overflow = DATE;
            }
            if (getParsingFlags(m)._overflowWeeks && overflow === -1) {
                overflow = WEEK;
            }
            if (getParsingFlags(m)._overflowWeekday && overflow === -1) {
                overflow = WEEKDAY;
            }

            getParsingFlags(m).overflow = overflow;
        }

        return m;
    }

    // iso 8601 regex
    // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)
    var extendedIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?/;
    var basicIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?/;

    var tzRegex = /Z|[+-]\d\d(?::?\d\d)?/;

    var isoDates = [
        ['YYYYYY-MM-DD', /[+-]\d{6}-\d\d-\d\d/],
        ['YYYY-MM-DD', /\d{4}-\d\d-\d\d/],
        ['GGGG-[W]WW-E', /\d{4}-W\d\d-\d/],
        ['GGGG-[W]WW', /\d{4}-W\d\d/, false],
        ['YYYY-DDD', /\d{4}-\d{3}/],
        ['YYYY-MM', /\d{4}-\d\d/, false],
        ['YYYYYYMMDD', /[+-]\d{10}/],
        ['YYYYMMDD', /\d{8}/],
        // YYYYMM is NOT allowed by the standard
        ['GGGG[W]WWE', /\d{4}W\d{3}/],
        ['GGGG[W]WW', /\d{4}W\d{2}/, false],
        ['YYYYDDD', /\d{7}/]
    ];

    // iso time formats and regexes
    var isoTimes = [
        ['HH:mm:ss.SSSS', /\d\d:\d\d:\d\d\.\d+/],
        ['HH:mm:ss,SSSS', /\d\d:\d\d:\d\d,\d+/],
        ['HH:mm:ss', /\d\d:\d\d:\d\d/],
        ['HH:mm', /\d\d:\d\d/],
        ['HHmmss.SSSS', /\d\d\d\d\d\d\.\d+/],
        ['HHmmss,SSSS', /\d\d\d\d\d\d,\d+/],
        ['HHmmss', /\d\d\d\d\d\d/],
        ['HHmm', /\d\d\d\d/],
        ['HH', /\d\d/]
    ];

    var aspNetJsonRegex = /^\/?Date\((\-?\d+)/i;

    // date from iso format
    function configFromISO(config) {
        var i, l,
            string = config._i,
            match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),
            allowTime, dateFormat, timeFormat, tzFormat;

        if (match) {
            getParsingFlags(config).iso = true;

            for (i = 0, l = isoDates.length; i < l; i++) {
                if (isoDates[i][1].exec(match[1])) {
                    dateFormat = isoDates[i][0];
                    allowTime = isoDates[i][2] !== false;
                    break;
                }
            }
            if (dateFormat == null) {
                config._isValid = false;
                return;
            }
            if (match[3]) {
                for (i = 0, l = isoTimes.length; i < l; i++) {
                    if (isoTimes[i][1].exec(match[3])) {
                        // match[2] should be 'T' or space
                        timeFormat = (match[2] || ' ') + isoTimes[i][0];
                        break;
                    }
                }
                if (timeFormat == null) {
                    config._isValid = false;
                    return;
                }
            }
            if (!allowTime && timeFormat != null) {
                config._isValid = false;
                return;
            }
            if (match[4]) {
                if (tzRegex.exec(match[4])) {
                    tzFormat = 'Z';
                } else {
                    config._isValid = false;
                    return;
                }
            }
            config._f = dateFormat + (timeFormat || '') + (tzFormat || '');
            configFromStringAndFormat(config);
        } else {
            config._isValid = false;
        }
    }

    // date from iso format or fallback
    function configFromString(config) {
        var matched = aspNetJsonRegex.exec(config._i);

        if (matched !== null) {
            config._d = new Date(+matched[1]);
            return;
        }

        configFromISO(config);
        if (config._isValid === false) {
            delete config._isValid;
            utils_hooks__hooks.createFromInputFallback(config);
        }
    }

    utils_hooks__hooks.createFromInputFallback = deprecate(
        'value provided is not in a recognized ISO format. moment construction falls back to js Date(), ' +
        'which is not reliable across all browsers and versions. Non ISO date formats are ' +
        'discouraged and will be removed in an upcoming major release. Please refer to ' +
        'http://momentjs.com/guides/#/warnings/js-date/ for more info.',
        function (config) {
            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));
        }
    );

    // Pick the first defined of two or three arguments.
    function defaults(a, b, c) {
        if (a != null) {
            return a;
        }
        if (b != null) {
            return b;
        }
        return c;
    }

    function currentDateArray(config) {
        // hooks is actually the exported moment object
        var nowValue = new Date(utils_hooks__hooks.now());
        if (config._useUTC) {
            return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];
        }
        return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];
    }

    // convert an array to a date.
    // the array should mirror the parameters below
    // note: all values past the year are optional and will default to the lowest possible value.
    // [year, month, day , hour, minute, second, millisecond]
    function configFromArray (config) {
        var i, date, input = [], currentDate, yearToUse;

        if (config._d) {
            return;
        }

        currentDate = currentDateArray(config);

        //compute day of the year from weeks and weekdays
        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {
            dayOfYearFromWeekInfo(config);
        }

        //if the day of the year is set, figure out what it is
        if (config._dayOfYear) {
            yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);

            if (config._dayOfYear > daysInYear(yearToUse)) {
                getParsingFlags(config)._overflowDayOfYear = true;
            }

            date = createUTCDate(yearToUse, 0, config._dayOfYear);
            config._a[MONTH] = date.getUTCMonth();
            config._a[DATE] = date.getUTCDate();
        }

        // Default to current date.
        // * if no year, month, day of month are given, default to today
        // * if day of month is given, default month and year
        // * if month is given, default only year
        // * if year is given, don't default anything
        for (i = 0; i < 3 && config._a[i] == null; ++i) {
            config._a[i] = input[i] = currentDate[i];
        }

        // Zero out whatever was not defaulted, including time
        for (; i < 7; i++) {
            config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];
        }

        // Check for 24:00:00.000
        if (config._a[HOUR] === 24 &&
                config._a[MINUTE] === 0 &&
                config._a[SECOND] === 0 &&
                config._a[MILLISECOND] === 0) {
            config._nextDay = true;
            config._a[HOUR] = 0;
        }

        config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);
        // Apply timezone offset from input. The actual utcOffset can be changed
        // with parseZone.
        if (config._tzm != null) {
            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);
        }

        if (config._nextDay) {
            config._a[HOUR] = 24;
        }
    }

    function dayOfYearFromWeekInfo(config) {
        var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;

        w = config._w;
        if (w.GG != null || w.W != null || w.E != null) {
            dow = 1;
            doy = 4;

            // TODO: We need to take the current isoWeekYear, but that depends on
            // how we interpret now (local, utc, fixed offset). So create
            // a now version of current config (take local/utc/offset flags, and
            // create now).
            weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(local__createLocal(), 1, 4).year);
            week = defaults(w.W, 1);
            weekday = defaults(w.E, 1);
            if (weekday < 1 || weekday > 7) {
                weekdayOverflow = true;
            }
        } else {
            dow = config._locale._week.dow;
            doy = config._locale._week.doy;

            weekYear = defaults(w.gg, config._a[YEAR], weekOfYear(local__createLocal(), dow, doy).year);
            week = defaults(w.w, 1);

            if (w.d != null) {
                // weekday -- low day numbers are considered next week
                weekday = w.d;
                if (weekday < 0 || weekday > 6) {
                    weekdayOverflow = true;
                }
            } else if (w.e != null) {
                // local weekday -- counting starts from begining of week
                weekday = w.e + dow;
                if (w.e < 0 || w.e > 6) {
                    weekdayOverflow = true;
                }
            } else {
                // default to begining of week
                weekday = dow;
            }
        }
        if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {
            getParsingFlags(config)._overflowWeeks = true;
        } else if (weekdayOverflow != null) {
            getParsingFlags(config)._overflowWeekday = true;
        } else {
            temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);
            config._a[YEAR] = temp.year;
            config._dayOfYear = temp.dayOfYear;
        }
    }

    // constant that refers to the ISO standard
    utils_hooks__hooks.ISO_8601 = function () {};

    // date from string and format string
    function configFromStringAndFormat(config) {
        // TODO: Move this to another part of the creation flow to prevent circular deps
        if (config._f === utils_hooks__hooks.ISO_8601) {
            configFromISO(config);
            return;
        }

        config._a = [];
        getParsingFlags(config).empty = true;

        // This array is used to make a Date, either with `new Date` or `Date.UTC`
        var string = '' + config._i,
            i, parsedInput, tokens, token, skipped,
            stringLength = string.length,
            totalParsedInputLength = 0;

        tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];

        for (i = 0; i < tokens.length; i++) {
            token = tokens[i];
            parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];
            // console.log('token', token, 'parsedInput', parsedInput,
            //         'regex', getParseRegexForToken(token, config));
            if (parsedInput) {
                skipped = string.substr(0, string.indexOf(parsedInput));
                if (skipped.length > 0) {
                    getParsingFlags(config).unusedInput.push(skipped);
                }
                string = string.slice(string.indexOf(parsedInput) + parsedInput.length);
                totalParsedInputLength += parsedInput.length;
            }
            // don't parse if it's not a known token
            if (formatTokenFunctions[token]) {
                if (parsedInput) {
                    getParsingFlags(config).empty = false;
                }
                else {
                    getParsingFlags(config).unusedTokens.push(token);
                }
                addTimeToArrayFromToken(token, parsedInput, config);
            }
            else if (config._strict && !parsedInput) {
                getParsingFlags(config).unusedTokens.push(token);
            }
        }

        // add remaining unparsed input length to the string
        getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;
        if (string.length > 0) {
            getParsingFlags(config).unusedInput.push(string);
        }

        // clear _12h flag if hour is <= 12
        if (config._a[HOUR] <= 12 &&
            getParsingFlags(config).bigHour === true &&
            config._a[HOUR] > 0) {
            getParsingFlags(config).bigHour = undefined;
        }

        getParsingFlags(config).parsedDateParts = config._a.slice(0);
        getParsingFlags(config).meridiem = config._meridiem;
        // handle meridiem
        config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);

        configFromArray(config);
        checkOverflow(config);
    }


    function meridiemFixWrap (locale, hour, meridiem) {
        var isPm;

        if (meridiem == null) {
            // nothing to do
            return hour;
        }
        if (locale.meridiemHour != null) {
            return locale.meridiemHour(hour, meridiem);
        } else if (locale.isPM != null) {
            // Fallback
            isPm = locale.isPM(meridiem);
            if (isPm && hour < 12) {
                hour += 12;
            }
            if (!isPm && hour === 12) {
                hour = 0;
            }
            return hour;
        } else {
            // this is not supposed to happen
            return hour;
        }
    }

    // date from string and array of format strings
    function configFromStringAndArray(config) {
        var tempConfig,
            bestMoment,

            scoreToBeat,
            i,
            currentScore;

        if (config._f.length === 0) {
            getParsingFlags(config).invalidFormat = true;
            config._d = new Date(NaN);
            return;
        }

        for (i = 0; i < config._f.length; i++) {
            currentScore = 0;
            tempConfig = copyConfig({}, config);
            if (config._useUTC != null) {
                tempConfig._useUTC = config._useUTC;
            }
            tempConfig._f = config._f[i];
            configFromStringAndFormat(tempConfig);

            if (!valid__isValid(tempConfig)) {
                continue;
            }

            // if there is any input that was not parsed add a penalty for that format
            currentScore += getParsingFlags(tempConfig).charsLeftOver;

            //or tokens
            currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;

            getParsingFlags(tempConfig).score = currentScore;

            if (scoreToBeat == null || currentScore < scoreToBeat) {
                scoreToBeat = currentScore;
                bestMoment = tempConfig;
            }
        }

        extend(config, bestMoment || tempConfig);
    }

    function configFromObject(config) {
        if (config._d) {
            return;
        }

        var i = normalizeObjectUnits(config._i);
        config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {
            return obj && parseInt(obj, 10);
        });

        configFromArray(config);
    }

    function createFromConfig (config) {
        var res = new Moment(checkOverflow(prepareConfig(config)));
        if (res._nextDay) {
            // Adding is smart enough around DST
            res.add(1, 'd');
            res._nextDay = undefined;
        }

        return res;
    }

    function prepareConfig (config) {
        var input = config._i,
            format = config._f;

        config._locale = config._locale || locale_locales__getLocale(config._l);

        if (input === null || (format === undefined && input === '')) {
            return valid__createInvalid({nullInput: true});
        }

        if (typeof input === 'string') {
            config._i = input = config._locale.preparse(input);
        }

        if (isMoment(input)) {
            return new Moment(checkOverflow(input));
        } else if (isArray(format)) {
            configFromStringAndArray(config);
        } else if (isDate(input)) {
            config._d = input;
        } else if (format) {
            configFromStringAndFormat(config);
        }  else {
            configFromInput(config);
        }

        if (!valid__isValid(config)) {
            config._d = null;
        }

        return config;
    }

    function configFromInput(config) {
        var input = config._i;
        if (input === undefined) {
            config._d = new Date(utils_hooks__hooks.now());
        } else if (isDate(input)) {
            config._d = new Date(input.valueOf());
        } else if (typeof input === 'string') {
            configFromString(config);
        } else if (isArray(input)) {
            config._a = map(input.slice(0), function (obj) {
                return parseInt(obj, 10);
            });
            configFromArray(config);
        } else if (typeof(input) === 'object') {
            configFromObject(config);
        } else if (typeof(input) === 'number') {
            // from milliseconds
            config._d = new Date(input);
        } else {
            utils_hooks__hooks.createFromInputFallback(config);
        }
    }

    function createLocalOrUTC (input, format, locale, strict, isUTC) {
        var c = {};

        if (typeof(locale) === 'boolean') {
            strict = locale;
            locale = undefined;
        }

        if ((isObject(input) && isObjectEmpty(input)) ||
                (isArray(input) && input.length === 0)) {
            input = undefined;
        }
        // object construction must be done this way.
        // https://github.com/moment/moment/issues/1423
        c._isAMomentObject = true;
        c._useUTC = c._isUTC = isUTC;
        c._l = locale;
        c._i = input;
        c._f = format;
        c._strict = strict;

        return createFromConfig(c);
    }

    function local__createLocal (input, format, locale, strict) {
        return createLocalOrUTC(input, format, locale, strict, false);
    }

    var prototypeMin = deprecate(
        'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',
        function () {
            var other = local__createLocal.apply(null, arguments);
            if (this.isValid() && other.isValid()) {
                return other < this ? this : other;
            } else {
                return valid__createInvalid();
            }
        }
    );

    var prototypeMax = deprecate(
        'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',
        function () {
            var other = local__createLocal.apply(null, arguments);
            if (this.isValid() && other.isValid()) {
                return other > this ? this : other;
            } else {
                return valid__createInvalid();
            }
        }
    );

    // Pick a moment m from moments so that m[fn](other) is true for all
    // other. This relies on the function fn to be transitive.
    //
    // moments should either be an array of moment objects or an array, whose
    // first element is an array of moment objects.
    function pickBy(fn, moments) {
        var res, i;
        if (moments.length === 1 && isArray(moments[0])) {
            moments = moments[0];
        }
        if (!moments.length) {
            return local__createLocal();
        }
        res = moments[0];
        for (i = 1; i < moments.length; ++i) {
            if (!moments[i].isValid() || moments[i][fn](res)) {
                res = moments[i];
            }
        }
        return res;
    }

    // TODO: Use [].sort instead?
    function min () {
        var args = [].slice.call(arguments, 0);

        return pickBy('isBefore', args);
    }

    function max () {
        var args = [].slice.call(arguments, 0);

        return pickBy('isAfter', args);
    }

    var now = function () {
        return Date.now ? Date.now() : +(new Date());
    };

    function Duration (duration) {
        var normalizedInput = normalizeObjectUnits(duration),
            years = normalizedInput.year || 0,
            quarters = normalizedInput.quarter || 0,
            months = normalizedInput.month || 0,
            weeks = normalizedInput.week || 0,
            days = normalizedInput.day || 0,
            hours = normalizedInput.hour || 0,
            minutes = normalizedInput.minute || 0,
            seconds = normalizedInput.second || 0,
            milliseconds = normalizedInput.millisecond || 0;

        // representation for dateAddRemove
        this._milliseconds = +milliseconds +
            seconds * 1e3 + // 1000
            minutes * 6e4 + // 1000 * 60
            hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978
        // Because of dateAddRemove treats 24 hours as different from a
        // day when working around DST, we need to store them separately
        this._days = +days +
            weeks * 7;
        // It is impossible translate months into days without knowing
        // which months you are are talking about, so we have to store
        // it separately.
        this._months = +months +
            quarters * 3 +
            years * 12;

        this._data = {};

        this._locale = locale_locales__getLocale();

        this._bubble();
    }

    function isDuration (obj) {
        return obj instanceof Duration;
    }

    function absRound (number) {
        if (number < 0) {
            return Math.round(-1 * number) * -1;
        } else {
            return Math.round(number);
        }
    }

    // FORMATTING

    function offset (token, separator) {
        addFormatToken(token, 0, 0, function () {
            var offset = this.utcOffset();
            var sign = '+';
            if (offset < 0) {
                offset = -offset;
                sign = '-';
            }
            return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);
        });
    }

    offset('Z', ':');
    offset('ZZ', '');

    // PARSING

    addRegexToken('Z',  matchShortOffset);
    addRegexToken('ZZ', matchShortOffset);
    addParseToken(['Z', 'ZZ'], function (input, array, config) {
        config._useUTC = true;
        config._tzm = offsetFromString(matchShortOffset, input);
    });

    // HELPERS

    // timezone chunker
    // '+10:00' > ['10',  '00']
    // '-1530'  > ['-15', '30']
    var chunkOffset = /([\+\-]|\d\d)/gi;

    function offsetFromString(matcher, string) {
        var matches = ((string || '').match(matcher) || []);
        var chunk   = matches[matches.length - 1] || [];
        var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];
        var minutes = +(parts[1] * 60) + toInt(parts[2]);

        return parts[0] === '+' ? minutes : -minutes;
    }

    // Return a moment from input, that is local/utc/zone equivalent to model.
    function cloneWithOffset(input, model) {
        var res, diff;
        if (model._isUTC) {
            res = model.clone();
            diff = (isMoment(input) || isDate(input) ? input.valueOf() : local__createLocal(input).valueOf()) - res.valueOf();
            // Use low-level api, because this fn is low-level api.
            res._d.setTime(res._d.valueOf() + diff);
            utils_hooks__hooks.updateOffset(res, false);
            return res;
        } else {
            return local__createLocal(input).local();
        }
    }

    function getDateOffset (m) {
        // On Firefox.24 Date#getTimezoneOffset returns a floating point.
        // https://github.com/moment/moment/pull/1871
        return -Math.round(m._d.getTimezoneOffset() / 15) * 15;
    }

    // HOOKS

    // This function will be called whenever a moment is mutated.
    // It is intended to keep the offset in sync with the timezone.
    utils_hooks__hooks.updateOffset = function () {};

    // MOMENTS

    // keepLocalTime = true means only change the timezone, without
    // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->
    // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset
    // +0200, so we adjust the time as needed, to be valid.
    //
    // Keeping the time actually adds/subtracts (one hour)
    // from the actual represented time. That is why we call updateOffset
    // a second time. In case it wants us to change the offset again
    // _changeInProgress == true case, then we have to adjust, because
    // there is no such time in the given timezone.
    function getSetOffset (input, keepLocalTime) {
        var offset = this._offset || 0,
            localAdjust;
        if (!this.isValid()) {
            return input != null ? this : NaN;
        }
        if (input != null) {
            if (typeof input === 'string') {
                input = offsetFromString(matchShortOffset, input);
            } else if (Math.abs(input) < 16) {
                input = input * 60;
            }
            if (!this._isUTC && keepLocalTime) {
                localAdjust = getDateOffset(this);
            }
            this._offset = input;
            this._isUTC = true;
            if (localAdjust != null) {
                this.add(localAdjust, 'm');
            }
            if (offset !== input) {
                if (!keepLocalTime || this._changeInProgress) {
                    add_subtract__addSubtract(this, create__createDuration(input - offset, 'm'), 1, false);
                } else if (!this._changeInProgress) {
                    this._changeInProgress = true;
                    utils_hooks__hooks.updateOffset(this, true);
                    this._changeInProgress = null;
                }
            }
            return this;
        } else {
            return this._isUTC ? offset : getDateOffset(this);
        }
    }

    function getSetZone (input, keepLocalTime) {
        if (input != null) {
            if (typeof input !== 'string') {
                input = -input;
            }

            this.utcOffset(input, keepLocalTime);

            return this;
        } else {
            return -this.utcOffset();
        }
    }

    function setOffsetToUTC (keepLocalTime) {
        return this.utcOffset(0, keepLocalTime);
    }

    function setOffsetToLocal (keepLocalTime) {
        if (this._isUTC) {
            this.utcOffset(0, keepLocalTime);
            this._isUTC = false;

            if (keepLocalTime) {
                this.subtract(getDateOffset(this), 'm');
            }
        }
        return this;
    }

    function setOffsetToParsedOffset () {
        if (this._tzm) {
            this.utcOffset(this._tzm);
        } else if (typeof this._i === 'string') {
            var tZone = offsetFromString(matchOffset, this._i);

            if (tZone === 0) {
                this.utcOffset(0, true);
            } else {
                this.utcOffset(offsetFromString(matchOffset, this._i));
            }
        }
        return this;
    }

    function hasAlignedHourOffset (input) {
        if (!this.isValid()) {
            return false;
        }
        input = input ? local__createLocal(input).utcOffset() : 0;

        return (this.utcOffset() - input) % 60 === 0;
    }

    function isDaylightSavingTime () {
        return (
            this.utcOffset() > this.clone().month(0).utcOffset() ||
            this.utcOffset() > this.clone().month(5).utcOffset()
        );
    }

    function isDaylightSavingTimeShifted () {
        if (!isUndefined(this._isDSTShifted)) {
            return this._isDSTShifted;
        }

        var c = {};

        copyConfig(c, this);
        c = prepareConfig(c);

        if (c._a) {
            var other = c._isUTC ? create_utc__createUTC(c._a) : local__createLocal(c._a);
            this._isDSTShifted = this.isValid() &&
                compareArrays(c._a, other.toArray()) > 0;
        } else {
            this._isDSTShifted = false;
        }

        return this._isDSTShifted;
    }

    function isLocal () {
        return this.isValid() ? !this._isUTC : false;
    }

    function isUtcOffset () {
        return this.isValid() ? this._isUTC : false;
    }

    function isUtc () {
        return this.isValid() ? this._isUTC && this._offset === 0 : false;
    }

    // ASP.NET json date format regex
    var aspNetRegex = /^(\-)?(?:(\d*)[. ])?(\d+)\:(\d+)(?:\:(\d+)(\.\d*)?)?$/;

    // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html
    // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere
    // and further modified to allow for strings containing both week and day
    var isoRegex = /^(-)?P(?:(-?[0-9,.]*)Y)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)W)?(?:(-?[0-9,.]*)D)?(?:T(?:(-?[0-9,.]*)H)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)S)?)?$/;

    function create__createDuration (input, key) {
        var duration = input,
            // matching against regexp is expensive, do it on demand
            match = null,
            sign,
            ret,
            diffRes;

        if (isDuration(input)) {
            duration = {
                ms : input._milliseconds,
                d  : input._days,
                M  : input._months
            };
        } else if (typeof input === 'number') {
            duration = {};
            if (key) {
                duration[key] = input;
            } else {
                duration.milliseconds = input;
            }
        } else if (!!(match = aspNetRegex.exec(input))) {
            sign = (match[1] === '-') ? -1 : 1;
            duration = {
                y  : 0,
                d  : toInt(match[DATE])                         * sign,
                h  : toInt(match[HOUR])                         * sign,
                m  : toInt(match[MINUTE])                       * sign,
                s  : toInt(match[SECOND])                       * sign,
                ms : toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match
            };
        } else if (!!(match = isoRegex.exec(input))) {
            sign = (match[1] === '-') ? -1 : 1;
            duration = {
                y : parseIso(match[2], sign),
                M : parseIso(match[3], sign),
                w : parseIso(match[4], sign),
                d : parseIso(match[5], sign),
                h : parseIso(match[6], sign),
                m : parseIso(match[7], sign),
                s : parseIso(match[8], sign)
            };
        } else if (duration == null) {// checks for null or undefined
            duration = {};
        } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {
            diffRes = momentsDifference(local__createLocal(duration.from), local__createLocal(duration.to));

            duration = {};
            duration.ms = diffRes.milliseconds;
            duration.M = diffRes.months;
        }

        ret = new Duration(duration);

        if (isDuration(input) && hasOwnProp(input, '_locale')) {
            ret._locale = input._locale;
        }

        return ret;
    }

    create__createDuration.fn = Duration.prototype;

    function parseIso (inp, sign) {
        // We'd normally use ~~inp for this, but unfortunately it also
        // converts floats to ints.
        // inp may be undefined, so careful calling replace on it.
        var res = inp && parseFloat(inp.replace(',', '.'));
        // apply sign while we're at it
        return (isNaN(res) ? 0 : res) * sign;
    }

    function positiveMomentsDifference(base, other) {
        var res = {milliseconds: 0, months: 0};

        res.months = other.month() - base.month() +
            (other.year() - base.year()) * 12;
        if (base.clone().add(res.months, 'M').isAfter(other)) {
            --res.months;
        }

        res.milliseconds = +other - +(base.clone().add(res.months, 'M'));

        return res;
    }

    function momentsDifference(base, other) {
        var res;
        if (!(base.isValid() && other.isValid())) {
            return {milliseconds: 0, months: 0};
        }

        other = cloneWithOffset(other, base);
        if (base.isBefore(other)) {
            res = positiveMomentsDifference(base, other);
        } else {
            res = positiveMomentsDifference(other, base);
            res.milliseconds = -res.milliseconds;
            res.months = -res.months;
        }

        return res;
    }

    // TODO: remove 'name' arg after deprecation is removed
    function createAdder(direction, name) {
        return function (val, period) {
            var dur, tmp;
            //invert the arguments, but complain about it
            if (period !== null && !isNaN(+period)) {
                deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' +
                'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');
                tmp = val; val = period; period = tmp;
            }

            val = typeof val === 'string' ? +val : val;
            dur = create__createDuration(val, period);
            add_subtract__addSubtract(this, dur, direction);
            return this;
        };
    }

    function add_subtract__addSubtract (mom, duration, isAdding, updateOffset) {
        var milliseconds = duration._milliseconds,
            days = absRound(duration._days),
            months = absRound(duration._months);

        if (!mom.isValid()) {
            // No op
            return;
        }

        updateOffset = updateOffset == null ? true : updateOffset;

        if (milliseconds) {
            mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);
        }
        if (days) {
            get_set__set(mom, 'Date', get_set__get(mom, 'Date') + days * isAdding);
        }
        if (months) {
            setMonth(mom, get_set__get(mom, 'Month') + months * isAdding);
        }
        if (updateOffset) {
            utils_hooks__hooks.updateOffset(mom, days || months);
        }
    }

    var add_subtract__add      = createAdder(1, 'add');
    var add_subtract__subtract = createAdder(-1, 'subtract');

    function getCalendarFormat(myMoment, now) {
        var diff = myMoment.diff(now, 'days', true);
        return diff < -6 ? 'sameElse' :
                diff < -1 ? 'lastWeek' :
                diff < 0 ? 'lastDay' :
                diff < 1 ? 'sameDay' :
                diff < 2 ? 'nextDay' :
                diff < 7 ? 'nextWeek' : 'sameElse';
    }

    function moment_calendar__calendar (time, formats) {
        // We want to compare the start of today, vs this.
        // Getting start-of-today depends on whether we're local/utc/offset or not.
        var now = time || local__createLocal(),
            sod = cloneWithOffset(now, this).startOf('day'),
            format = utils_hooks__hooks.calendarFormat(this, sod) || 'sameElse';

        var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);

        return this.format(output || this.localeData().calendar(format, this, local__createLocal(now)));
    }

    function clone () {
        return new Moment(this);
    }

    function isAfter (input, units) {
        var localInput = isMoment(input) ? input : local__createLocal(input);
        if (!(this.isValid() && localInput.isValid())) {
            return false;
        }
        units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');
        if (units === 'millisecond') {
            return this.valueOf() > localInput.valueOf();
        } else {
            return localInput.valueOf() < this.clone().startOf(units).valueOf();
        }
    }

    function isBefore (input, units) {
        var localInput = isMoment(input) ? input : local__createLocal(input);
        if (!(this.isValid() && localInput.isValid())) {
            return false;
        }
        units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');
        if (units === 'millisecond') {
            return this.valueOf() < localInput.valueOf();
        } else {
            return this.clone().endOf(units).valueOf() < localInput.valueOf();
        }
    }

    function isBetween (from, to, units, inclusivity) {
        inclusivity = inclusivity || '()';
        return (inclusivity[0] === '(' ? this.isAfter(from, units) : !this.isBefore(from, units)) &&
            (inclusivity[1] === ')' ? this.isBefore(to, units) : !this.isAfter(to, units));
    }

    function isSame (input, units) {
        var localInput = isMoment(input) ? input : local__createLocal(input),
            inputMs;
        if (!(this.isValid() && localInput.isValid())) {
            return false;
        }
        units = normalizeUnits(units || 'millisecond');
        if (units === 'millisecond') {
            return this.valueOf() === localInput.valueOf();
        } else {
            inputMs = localInput.valueOf();
            return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();
        }
    }

    function isSameOrAfter (input, units) {
        return this.isSame(input, units) || this.isAfter(input,units);
    }

    function isSameOrBefore (input, units) {
        return this.isSame(input, units) || this.isBefore(input,units);
    }

    function diff (input, units, asFloat) {
        var that,
            zoneDelta,
            delta, output;

        if (!this.isValid()) {
            return NaN;
        }

        that = cloneWithOffset(input, this);

        if (!that.isValid()) {
            return NaN;
        }

        zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;

        units = normalizeUnits(units);

        if (units === 'year' || units === 'month' || units === 'quarter') {
            output = monthDiff(this, that);
            if (units === 'quarter') {
                output = output / 3;
            } else if (units === 'year') {
                output = output / 12;
            }
        } else {
            delta = this - that;
            output = units === 'second' ? delta / 1e3 : // 1000
                units === 'minute' ? delta / 6e4 : // 1000 * 60
                units === 'hour' ? delta / 36e5 : // 1000 * 60 * 60
                units === 'day' ? (delta - zoneDelta) / 864e5 : // 1000 * 60 * 60 * 24, negate dst
                units === 'week' ? (delta - zoneDelta) / 6048e5 : // 1000 * 60 * 60 * 24 * 7, negate dst
                delta;
        }
        return asFloat ? output : absFloor(output);
    }

    function monthDiff (a, b) {
        // difference in months
        var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),
            // b is in (anchor - 1 month, anchor + 1 month)
            anchor = a.clone().add(wholeMonthDiff, 'months'),
            anchor2, adjust;

        if (b - anchor < 0) {
            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');
            // linear across the month
            adjust = (b - anchor) / (anchor - anchor2);
        } else {
            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');
            // linear across the month
            adjust = (b - anchor) / (anchor2 - anchor);
        }

        //check for negative zero, return zero if negative zero
        return -(wholeMonthDiff + adjust) || 0;
    }

    utils_hooks__hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';
    utils_hooks__hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';

    function toString () {
        return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');
    }

    function moment_format__toISOString () {
        var m = this.clone().utc();
        if (0 < m.year() && m.year() <= 9999) {
            if (isFunction(Date.prototype.toISOString)) {
                // native implementation is ~50x faster, use it when we can
                return this.toDate().toISOString();
            } else {
                return formatMoment(m, 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]');
            }
        } else {
            return formatMoment(m, 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]');
        }
    }

    function format (inputString) {
        if (!inputString) {
            inputString = this.isUtc() ? utils_hooks__hooks.defaultFormatUtc : utils_hooks__hooks.defaultFormat;
        }
        var output = formatMoment(this, inputString);
        return this.localeData().postformat(output);
    }

    function from (time, withoutSuffix) {
        if (this.isValid() &&
                ((isMoment(time) && time.isValid()) ||
                 local__createLocal(time).isValid())) {
            return create__createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);
        } else {
            return this.localeData().invalidDate();
        }
    }

    function fromNow (withoutSuffix) {
        return this.from(local__createLocal(), withoutSuffix);
    }

    function to (time, withoutSuffix) {
        if (this.isValid() &&
                ((isMoment(time) && time.isValid()) ||
                 local__createLocal(time).isValid())) {
            return create__createDuration({from: this, to: time}).locale(this.locale()).humanize(!withoutSuffix);
        } else {
            return this.localeData().invalidDate();
        }
    }

    function toNow (withoutSuffix) {
        return this.to(local__createLocal(), withoutSuffix);
    }

    // If passed a locale key, it will set the locale for this
    // instance.  Otherwise, it will return the locale configuration
    // variables for this instance.
    function locale (key) {
        var newLocaleData;

        if (key === undefined) {
            return this._locale._abbr;
        } else {
            newLocaleData = locale_locales__getLocale(key);
            if (newLocaleData != null) {
                this._locale = newLocaleData;
            }
            return this;
        }
    }

    var lang = deprecate(
        'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',
        function (key) {
            if (key === undefined) {
                return this.localeData();
            } else {
                return this.locale(key);
            }
        }
    );

    function localeData () {
        return this._locale;
    }

    function startOf (units) {
        units = normalizeUnits(units);
        // the following switch intentionally omits break keywords
        // to utilize falling through the cases.
        switch (units) {
            case 'year':
                this.month(0);
                /* falls through */
            case 'quarter':
            case 'month':
                this.date(1);
                /* falls through */
            case 'week':
            case 'isoWeek':
            case 'day':
            case 'date':
                this.hours(0);
                /* falls through */
            case 'hour':
                this.minutes(0);
                /* falls through */
            case 'minute':
                this.seconds(0);
                /* falls through */
            case 'second':
                this.milliseconds(0);
        }

        // weeks are a special case
        if (units === 'week') {
            this.weekday(0);
        }
        if (units === 'isoWeek') {
            this.isoWeekday(1);
        }

        // quarters are also special
        if (units === 'quarter') {
            this.month(Math.floor(this.month() / 3) * 3);
        }

        return this;
    }

    function endOf (units) {
        units = normalizeUnits(units);
        if (units === undefined || units === 'millisecond') {
            return this;
        }

        // 'date' is an alias for 'day', so it should be considered as such.
        if (units === 'date') {
            units = 'day';
        }

        return this.startOf(units).add(1, (units === 'isoWeek' ? 'week' : units)).subtract(1, 'ms');
    }

    function to_type__valueOf () {
        return this._d.valueOf() - ((this._offset || 0) * 60000);
    }

    function unix () {
        return Math.floor(this.valueOf() / 1000);
    }

    function toDate () {
        return new Date(this.valueOf());
    }

    function toArray () {
        var m = this;
        return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];
    }

    function toObject () {
        var m = this;
        return {
            years: m.year(),
            months: m.month(),
            date: m.date(),
            hours: m.hours(),
            minutes: m.minutes(),
            seconds: m.seconds(),
            milliseconds: m.milliseconds()
        };
    }

    function toJSON () {
        // new Date(NaN).toJSON() === null
        return this.isValid() ? this.toISOString() : null;
    }

    function moment_valid__isValid () {
        return valid__isValid(this);
    }

    function parsingFlags () {
        return extend({}, getParsingFlags(this));
    }

    function invalidAt () {
        return getParsingFlags(this).overflow;
    }

    function creationData() {
        return {
            input: this._i,
            format: this._f,
            locale: this._locale,
            isUTC: this._isUTC,
            strict: this._strict
        };
    }

    // FORMATTING

    addFormatToken(0, ['gg', 2], 0, function () {
        return this.weekYear() % 100;
    });

    addFormatToken(0, ['GG', 2], 0, function () {
        return this.isoWeekYear() % 100;
    });

    function addWeekYearFormatToken (token, getter) {
        addFormatToken(0, [token, token.length], 0, getter);
    }

    addWeekYearFormatToken('gggg',     'weekYear');
    addWeekYearFormatToken('ggggg',    'weekYear');
    addWeekYearFormatToken('GGGG',  'isoWeekYear');
    addWeekYearFormatToken('GGGGG', 'isoWeekYear');

    // ALIASES

    addUnitAlias('weekYear', 'gg');
    addUnitAlias('isoWeekYear', 'GG');

    // PRIORITY

    addUnitPriority('weekYear', 1);
    addUnitPriority('isoWeekYear', 1);


    // PARSING

    addRegexToken('G',      matchSigned);
    addRegexToken('g',      matchSigned);
    addRegexToken('GG',     match1to2, match2);
    addRegexToken('gg',     match1to2, match2);
    addRegexToken('GGGG',   match1to4, match4);
    addRegexToken('gggg',   match1to4, match4);
    addRegexToken('GGGGG',  match1to6, match6);
    addRegexToken('ggggg',  match1to6, match6);

    addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {
        week[token.substr(0, 2)] = toInt(input);
    });

    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {
        week[token] = utils_hooks__hooks.parseTwoDigitYear(input);
    });

    // MOMENTS

    function getSetWeekYear (input) {
        return getSetWeekYearHelper.call(this,
                input,
                this.week(),
                this.weekday(),
                this.localeData()._week.dow,
                this.localeData()._week.doy);
    }

    function getSetISOWeekYear (input) {
        return getSetWeekYearHelper.call(this,
                input, this.isoWeek(), this.isoWeekday(), 1, 4);
    }

    function getISOWeeksInYear () {
        return weeksInYear(this.year(), 1, 4);
    }

    function getWeeksInYear () {
        var weekInfo = this.localeData()._week;
        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);
    }

    function getSetWeekYearHelper(input, week, weekday, dow, doy) {
        var weeksTarget;
        if (input == null) {
            return weekOfYear(this, dow, doy).year;
        } else {
            weeksTarget = weeksInYear(input, dow, doy);
            if (week > weeksTarget) {
                week = weeksTarget;
            }
            return setWeekAll.call(this, input, week, weekday, dow, doy);
        }
    }

    function setWeekAll(weekYear, week, weekday, dow, doy) {
        var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),
            date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);

        this.year(date.getUTCFullYear());
        this.month(date.getUTCMonth());
        this.date(date.getUTCDate());
        return this;
    }

    // FORMATTING

    addFormatToken('Q', 0, 'Qo', 'quarter');

    // ALIASES

    addUnitAlias('quarter', 'Q');

    // PRIORITY

    addUnitPriority('quarter', 7);

    // PARSING

    addRegexToken('Q', match1);
    addParseToken('Q', function (input, array) {
        array[MONTH] = (toInt(input) - 1) * 3;
    });

    // MOMENTS

    function getSetQuarter (input) {
        return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);
    }

    // FORMATTING

    addFormatToken('D', ['DD', 2], 'Do', 'date');

    // ALIASES

    addUnitAlias('date', 'D');

    // PRIOROITY
    addUnitPriority('date', 9);

    // PARSING

    addRegexToken('D',  match1to2);
    addRegexToken('DD', match1to2, match2);
    addRegexToken('Do', function (isStrict, locale) {
        return isStrict ? locale._ordinalParse : locale._ordinalParseLenient;
    });

    addParseToken(['D', 'DD'], DATE);
    addParseToken('Do', function (input, array) {
        array[DATE] = toInt(input.match(match1to2)[0], 10);
    });

    // MOMENTS

    var getSetDayOfMonth = makeGetSet('Date', true);

    // FORMATTING

    addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');

    // ALIASES

    addUnitAlias('dayOfYear', 'DDD');

    // PRIORITY
    addUnitPriority('dayOfYear', 4);

    // PARSING

    addRegexToken('DDD',  match1to3);
    addRegexToken('DDDD', match3);
    addParseToken(['DDD', 'DDDD'], function (input, array, config) {
        config._dayOfYear = toInt(input);
    });

    // HELPERS

    // MOMENTS

    function getSetDayOfYear (input) {
        var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;
        return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');
    }

    // FORMATTING

    addFormatToken('m', ['mm', 2], 0, 'minute');

    // ALIASES

    addUnitAlias('minute', 'm');

    // PRIORITY

    addUnitPriority('minute', 14);

    // PARSING

    addRegexToken('m',  match1to2);
    addRegexToken('mm', match1to2, match2);
    addParseToken(['m', 'mm'], MINUTE);

    // MOMENTS

    var getSetMinute = makeGetSet('Minutes', false);

    // FORMATTING

    addFormatToken('s', ['ss', 2], 0, 'second');

    // ALIASES

    addUnitAlias('second', 's');

    // PRIORITY

    addUnitPriority('second', 15);

    // PARSING

    addRegexToken('s',  match1to2);
    addRegexToken('ss', match1to2, match2);
    addParseToken(['s', 'ss'], SECOND);

    // MOMENTS

    var getSetSecond = makeGetSet('Seconds', false);

    // FORMATTING

    addFormatToken('S', 0, 0, function () {
        return ~~(this.millisecond() / 100);
    });

    addFormatToken(0, ['SS', 2], 0, function () {
        return ~~(this.millisecond() / 10);
    });

    addFormatToken(0, ['SSS', 3], 0, 'millisecond');
    addFormatToken(0, ['SSSS', 4], 0, function () {
        return this.millisecond() * 10;
    });
    addFormatToken(0, ['SSSSS', 5], 0, function () {
        return this.millisecond() * 100;
    });
    addFormatToken(0, ['SSSSSS', 6], 0, function () {
        return this.millisecond() * 1000;
    });
    addFormatToken(0, ['SSSSSSS', 7], 0, function () {
        return this.millisecond() * 10000;
    });
    addFormatToken(0, ['SSSSSSSS', 8], 0, function () {
        return this.millisecond() * 100000;
    });
    addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {
        return this.millisecond() * 1000000;
    });


    // ALIASES

    addUnitAlias('millisecond', 'ms');

    // PRIORITY

    addUnitPriority('millisecond', 16);

    // PARSING

    addRegexToken('S',    match1to3, match1);
    addRegexToken('SS',   match1to3, match2);
    addRegexToken('SSS',  match1to3, match3);

    var token;
    for (token = 'SSSS'; token.length <= 9; token += 'S') {
        addRegexToken(token, matchUnsigned);
    }

    function parseMs(input, array) {
        array[MILLISECOND] = toInt(('0.' + input) * 1000);
    }

    for (token = 'S'; token.length <= 9; token += 'S') {
        addParseToken(token, parseMs);
    }
    // MOMENTS

    var getSetMillisecond = makeGetSet('Milliseconds', false);

    // FORMATTING

    addFormatToken('z',  0, 0, 'zoneAbbr');
    addFormatToken('zz', 0, 0, 'zoneName');

    // MOMENTS

    function getZoneAbbr () {
        return this._isUTC ? 'UTC' : '';
    }

    function getZoneName () {
        return this._isUTC ? 'Coordinated Universal Time' : '';
    }

    var momentPrototype__proto = Moment.prototype;

    momentPrototype__proto.add               = add_subtract__add;
    momentPrototype__proto.calendar          = moment_calendar__calendar;
    momentPrototype__proto.clone             = clone;
    momentPrototype__proto.diff              = diff;
    momentPrototype__proto.endOf             = endOf;
    momentPrototype__proto.format            = format;
    momentPrototype__proto.from              = from;
    momentPrototype__proto.fromNow           = fromNow;
    momentPrototype__proto.to                = to;
    momentPrototype__proto.toNow             = toNow;
    momentPrototype__proto.get               = stringGet;
    momentPrototype__proto.invalidAt         = invalidAt;
    momentPrototype__proto.isAfter           = isAfter;
    momentPrototype__proto.isBefore          = isBefore;
    momentPrototype__proto.isBetween         = isBetween;
    momentPrototype__proto.isSame            = isSame;
    momentPrototype__proto.isSameOrAfter     = isSameOrAfter;
    momentPrototype__proto.isSameOrBefore    = isSameOrBefore;
    momentPrototype__proto.isValid           = moment_valid__isValid;
    momentPrototype__proto.lang              = lang;
    momentPrototype__proto.locale            = locale;
    momentPrototype__proto.localeData        = localeData;
    momentPrototype__proto.max               = prototypeMax;
    momentPrototype__proto.min               = prototypeMin;
    momentPrototype__proto.parsingFlags      = parsingFlags;
    momentPrototype__proto.set               = stringSet;
    momentPrototype__proto.startOf           = startOf;
    momentPrototype__proto.subtract          = add_subtract__subtract;
    momentPrototype__proto.toArray           = toArray;
    momentPrototype__proto.toObject          = toObject;
    momentPrototype__proto.toDate            = toDate;
    momentPrototype__proto.toISOString       = moment_format__toISOString;
    momentPrototype__proto.toJSON            = toJSON;
    momentPrototype__proto.toString          = toString;
    momentPrototype__proto.unix              = unix;
    momentPrototype__proto.valueOf           = to_type__valueOf;
    momentPrototype__proto.creationData      = creationData;

    // Year
    momentPrototype__proto.year       = getSetYear;
    momentPrototype__proto.isLeapYear = getIsLeapYear;

    // Week Year
    momentPrototype__proto.weekYear    = getSetWeekYear;
    momentPrototype__proto.isoWeekYear = getSetISOWeekYear;

    // Quarter
    momentPrototype__proto.quarter = momentPrototype__proto.quarters = getSetQuarter;

    // Month
    momentPrototype__proto.month       = getSetMonth;
    momentPrototype__proto.daysInMonth = getDaysInMonth;

    // Week
    momentPrototype__proto.week           = momentPrototype__proto.weeks        = getSetWeek;
    momentPrototype__proto.isoWeek        = momentPrototype__proto.isoWeeks     = getSetISOWeek;
    momentPrototype__proto.weeksInYear    = getWeeksInYear;
    momentPrototype__proto.isoWeeksInYear = getISOWeeksInYear;

    // Day
    momentPrototype__proto.date       = getSetDayOfMonth;
    momentPrototype__proto.day        = momentPrototype__proto.days             = getSetDayOfWeek;
    momentPrototype__proto.weekday    = getSetLocaleDayOfWeek;
    momentPrototype__proto.isoWeekday = getSetISODayOfWeek;
    momentPrototype__proto.dayOfYear  = getSetDayOfYear;

    // Hour
    momentPrototype__proto.hour = momentPrototype__proto.hours = getSetHour;

    // Minute
    momentPrototype__proto.minute = momentPrototype__proto.minutes = getSetMinute;

    // Second
    momentPrototype__proto.second = momentPrototype__proto.seconds = getSetSecond;

    // Millisecond
    momentPrototype__proto.millisecond = momentPrototype__proto.milliseconds = getSetMillisecond;

    // Offset
    momentPrototype__proto.utcOffset            = getSetOffset;
    momentPrototype__proto.utc                  = setOffsetToUTC;
    momentPrototype__proto.local                = setOffsetToLocal;
    momentPrototype__proto.parseZone            = setOffsetToParsedOffset;
    momentPrototype__proto.hasAlignedHourOffset = hasAlignedHourOffset;
    momentPrototype__proto.isDST                = isDaylightSavingTime;
    momentPrototype__proto.isLocal              = isLocal;
    momentPrototype__proto.isUtcOffset          = isUtcOffset;
    momentPrototype__proto.isUtc                = isUtc;
    momentPrototype__proto.isUTC                = isUtc;

    // Timezone
    momentPrototype__proto.zoneAbbr = getZoneAbbr;
    momentPrototype__proto.zoneName = getZoneName;

    // Deprecations
    momentPrototype__proto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);
    momentPrototype__proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);
    momentPrototype__proto.years  = deprecate('years accessor is deprecated. Use year instead', getSetYear);
    momentPrototype__proto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);
    momentPrototype__proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);

    var momentPrototype = momentPrototype__proto;

    function moment__createUnix (input) {
        return local__createLocal(input * 1000);
    }

    function moment__createInZone () {
        return local__createLocal.apply(null, arguments).parseZone();
    }

    function preParsePostFormat (string) {
        return string;
    }

    var prototype__proto = Locale.prototype;

    prototype__proto.calendar        = locale_calendar__calendar;
    prototype__proto.longDateFormat  = longDateFormat;
    prototype__proto.invalidDate     = invalidDate;
    prototype__proto.ordinal         = ordinal;
    prototype__proto.preparse        = preParsePostFormat;
    prototype__proto.postformat      = preParsePostFormat;
    prototype__proto.relativeTime    = relative__relativeTime;
    prototype__proto.pastFuture      = pastFuture;
    prototype__proto.set             = locale_set__set;

    // Month
    prototype__proto.months            =        localeMonths;
    prototype__proto.monthsShort       =        localeMonthsShort;
    prototype__proto.monthsParse       =        localeMonthsParse;
    prototype__proto.monthsRegex       = monthsRegex;
    prototype__proto.monthsShortRegex  = monthsShortRegex;

    // Week
    prototype__proto.week = localeWeek;
    prototype__proto.firstDayOfYear = localeFirstDayOfYear;
    prototype__proto.firstDayOfWeek = localeFirstDayOfWeek;

    // Day of Week
    prototype__proto.weekdays       =        localeWeekdays;
    prototype__proto.weekdaysMin    =        localeWeekdaysMin;
    prototype__proto.weekdaysShort  =        localeWeekdaysShort;
    prototype__proto.weekdaysParse  =        localeWeekdaysParse;

    prototype__proto.weekdaysRegex       =        weekdaysRegex;
    prototype__proto.weekdaysShortRegex  =        weekdaysShortRegex;
    prototype__proto.weekdaysMinRegex    =        weekdaysMinRegex;

    // Hours
    prototype__proto.isPM = localeIsPM;
    prototype__proto.meridiem = localeMeridiem;

    function lists__get (format, index, field, setter) {
        var locale = locale_locales__getLocale();
        var utc = create_utc__createUTC().set(setter, index);
        return locale[field](utc, format);
    }

    function listMonthsImpl (format, index, field) {
        if (typeof format === 'number') {
            index = format;
            format = undefined;
        }

        format = format || '';

        if (index != null) {
            return lists__get(format, index, field, 'month');
        }

        var i;
        var out = [];
        for (i = 0; i < 12; i++) {
            out[i] = lists__get(format, i, field, 'month');
        }
        return out;
    }

    // ()
    // (5)
    // (fmt, 5)
    // (fmt)
    // (true)
    // (true, 5)
    // (true, fmt, 5)
    // (true, fmt)
    function listWeekdaysImpl (localeSorted, format, index, field) {
        if (typeof localeSorted === 'boolean') {
            if (typeof format === 'number') {
                index = format;
                format = undefined;
            }

            format = format || '';
        } else {
            format = localeSorted;
            index = format;
            localeSorted = false;

            if (typeof format === 'number') {
                index = format;
                format = undefined;
            }

            format = format || '';
        }

        var locale = locale_locales__getLocale(),
            shift = localeSorted ? locale._week.dow : 0;

        if (index != null) {
            return lists__get(format, (index + shift) % 7, field, 'day');
        }

        var i;
        var out = [];
        for (i = 0; i < 7; i++) {
            out[i] = lists__get(format, (i + shift) % 7, field, 'day');
        }
        return out;
    }

    function lists__listMonths (format, index) {
        return listMonthsImpl(format, index, 'months');
    }

    function lists__listMonthsShort (format, index) {
        return listMonthsImpl(format, index, 'monthsShort');
    }

    function lists__listWeekdays (localeSorted, format, index) {
        return listWeekdaysImpl(localeSorted, format, index, 'weekdays');
    }

    function lists__listWeekdaysShort (localeSorted, format, index) {
        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');
    }

    function lists__listWeekdaysMin (localeSorted, format, index) {
        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');
    }

    locale_locales__getSetGlobalLocale('en', {
        ordinalParse: /\d{1,2}(th|st|nd|rd)/,
        ordinal : function (number) {
            var b = number % 10,
                output = (toInt(number % 100 / 10) === 1) ? 'th' :
                (b === 1) ? 'st' :
                (b === 2) ? 'nd' :
                (b === 3) ? 'rd' : 'th';
            return number + output;
        }
    });

    // Side effect imports
    utils_hooks__hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', locale_locales__getSetGlobalLocale);
    utils_hooks__hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', locale_locales__getLocale);

    var mathAbs = Math.abs;

    function duration_abs__abs () {
        var data           = this._data;

        this._milliseconds = mathAbs(this._milliseconds);
        this._days         = mathAbs(this._days);
        this._months       = mathAbs(this._months);

        data.milliseconds  = mathAbs(data.milliseconds);
        data.seconds       = mathAbs(data.seconds);
        data.minutes       = mathAbs(data.minutes);
        data.hours         = mathAbs(data.hours);
        data.months        = mathAbs(data.months);
        data.years         = mathAbs(data.years);

        return this;
    }

    function duration_add_subtract__addSubtract (duration, input, value, direction) {
        var other = create__createDuration(input, value);

        duration._milliseconds += direction * other._milliseconds;
        duration._days         += direction * other._days;
        duration._months       += direction * other._months;

        return duration._bubble();
    }

    // supports only 2.0-style add(1, 's') or add(duration)
    function duration_add_subtract__add (input, value) {
        return duration_add_subtract__addSubtract(this, input, value, 1);
    }

    // supports only 2.0-style subtract(1, 's') or subtract(duration)
    function duration_add_subtract__subtract (input, value) {
        return duration_add_subtract__addSubtract(this, input, value, -1);
    }

    function absCeil (number) {
        if (number < 0) {
            return Math.floor(number);
        } else {
            return Math.ceil(number);
        }
    }

    function bubble () {
        var milliseconds = this._milliseconds;
        var days         = this._days;
        var months       = this._months;
        var data         = this._data;
        var seconds, minutes, hours, years, monthsFromDays;

        // if we have a mix of positive and negative values, bubble down first
        // check: https://github.com/moment/moment/issues/2166
        if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||
                (milliseconds <= 0 && days <= 0 && months <= 0))) {
            milliseconds += absCeil(monthsToDays(months) + days) * 864e5;
            days = 0;
            months = 0;
        }

        // The following code bubbles up values, see the tests for
        // examples of what that means.
        data.milliseconds = milliseconds % 1000;

        seconds           = absFloor(milliseconds / 1000);
        data.seconds      = seconds % 60;

        minutes           = absFloor(seconds / 60);
        data.minutes      = minutes % 60;

        hours             = absFloor(minutes / 60);
        data.hours        = hours % 24;

        days += absFloor(hours / 24);

        // convert days to months
        monthsFromDays = absFloor(daysToMonths(days));
        months += monthsFromDays;
        days -= absCeil(monthsToDays(monthsFromDays));

        // 12 months -> 1 year
        years = absFloor(months / 12);
        months %= 12;

        data.days   = days;
        data.months = months;
        data.years  = years;

        return this;
    }

    function daysToMonths (days) {
        // 400 years have 146097 days (taking into account leap year rules)
        // 400 years have 12 months === 4800
        return days * 4800 / 146097;
    }

    function monthsToDays (months) {
        // the reverse of daysToMonths
        return months * 146097 / 4800;
    }

    function as (units) {
        var days;
        var months;
        var milliseconds = this._milliseconds;

        units = normalizeUnits(units);

        if (units === 'month' || units === 'year') {
            days   = this._days   + milliseconds / 864e5;
            months = this._months + daysToMonths(days);
            return units === 'month' ? months : months / 12;
        } else {
            // handle milliseconds separately because of floating point math errors (issue #1867)
            days = this._days + Math.round(monthsToDays(this._months));
            switch (units) {
                case 'week'   : return days / 7     + milliseconds / 6048e5;
                case 'day'    : return days         + milliseconds / 864e5;
                case 'hour'   : return days * 24    + milliseconds / 36e5;
                case 'minute' : return days * 1440  + milliseconds / 6e4;
                case 'second' : return days * 86400 + milliseconds / 1000;
                // Math.floor prevents floating point math errors here
                case 'millisecond': return Math.floor(days * 864e5) + milliseconds;
                default: throw new Error('Unknown unit ' + units);
            }
        }
    }

    // TODO: Use this.as('ms')?
    function duration_as__valueOf () {
        return (
            this._milliseconds +
            this._days * 864e5 +
            (this._months % 12) * 2592e6 +
            toInt(this._months / 12) * 31536e6
        );
    }

    function makeAs (alias) {
        return function () {
            return this.as(alias);
        };
    }

    var asMilliseconds = makeAs('ms');
    var asSeconds      = makeAs('s');
    var asMinutes      = makeAs('m');
    var asHours        = makeAs('h');
    var asDays         = makeAs('d');
    var asWeeks        = makeAs('w');
    var asMonths       = makeAs('M');
    var asYears        = makeAs('y');

    function duration_get__get (units) {
        units = normalizeUnits(units);
        return this[units + 's']();
    }

    function makeGetter(name) {
        return function () {
            return this._data[name];
        };
    }

    var milliseconds = makeGetter('milliseconds');
    var seconds      = makeGetter('seconds');
    var minutes      = makeGetter('minutes');
    var hours        = makeGetter('hours');
    var days         = makeGetter('days');
    var months       = makeGetter('months');
    var years        = makeGetter('years');

    function weeks () {
        return absFloor(this.days() / 7);
    }

    var round = Math.round;
    var thresholds = {
        s: 45,  // seconds to minute
        m: 45,  // minutes to hour
        h: 22,  // hours to day
        d: 26,  // days to month
        M: 11   // months to year
    };

    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize
    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {
        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);
    }

    function duration_humanize__relativeTime (posNegDuration, withoutSuffix, locale) {
        var duration = create__createDuration(posNegDuration).abs();
        var seconds  = round(duration.as('s'));
        var minutes  = round(duration.as('m'));
        var hours    = round(duration.as('h'));
        var days     = round(duration.as('d'));
        var months   = round(duration.as('M'));
        var years    = round(duration.as('y'));

        var a = seconds < thresholds.s && ['s', seconds]  ||
                minutes <= 1           && ['m']           ||
                minutes < thresholds.m && ['mm', minutes] ||
                hours   <= 1           && ['h']           ||
                hours   < thresholds.h && ['hh', hours]   ||
                days    <= 1           && ['d']           ||
                days    < thresholds.d && ['dd', days]    ||
                months  <= 1           && ['M']           ||
                months  < thresholds.M && ['MM', months]  ||
                years   <= 1           && ['y']           || ['yy', years];

        a[2] = withoutSuffix;
        a[3] = +posNegDuration > 0;
        a[4] = locale;
        return substituteTimeAgo.apply(null, a);
    }

    // This function allows you to set the rounding function for relative time strings
    function duration_humanize__getSetRelativeTimeRounding (roundingFunction) {
        if (roundingFunction === undefined) {
            return round;
        }
        if (typeof(roundingFunction) === 'function') {
            round = roundingFunction;
            return true;
        }
        return false;
    }

    // This function allows you to set a threshold for relative time strings
    function duration_humanize__getSetRelativeTimeThreshold (threshold, limit) {
        if (thresholds[threshold] === undefined) {
            return false;
        }
        if (limit === undefined) {
            return thresholds[threshold];
        }
        thresholds[threshold] = limit;
        return true;
    }

    function humanize (withSuffix) {
        var locale = this.localeData();
        var output = duration_humanize__relativeTime(this, !withSuffix, locale);

        if (withSuffix) {
            output = locale.pastFuture(+this, output);
        }

        return locale.postformat(output);
    }

    var iso_string__abs = Math.abs;

    function iso_string__toISOString() {
        // for ISO strings we do not use the normal bubbling rules:
        //  * milliseconds bubble up until they become hours
        //  * days do not bubble at all
        //  * months bubble up until they become years
        // This is because there is no context-free conversion between hours and days
        // (think of clock changes)
        // and also not between days and months (28-31 days per month)
        var seconds = iso_string__abs(this._milliseconds) / 1000;
        var days         = iso_string__abs(this._days);
        var months       = iso_string__abs(this._months);
        var minutes, hours, years;

        // 3600 seconds -> 60 minutes -> 1 hour
        minutes           = absFloor(seconds / 60);
        hours             = absFloor(minutes / 60);
        seconds %= 60;
        minutes %= 60;

        // 12 months -> 1 year
        years  = absFloor(months / 12);
        months %= 12;


        // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js
        var Y = years;
        var M = months;
        var D = days;
        var h = hours;
        var m = minutes;
        var s = seconds;
        var total = this.asSeconds();

        if (!total) {
            // this is the same as C#'s (Noda) and python (isodate)...
            // but not other JS (goog.date)
            return 'P0D';
        }

        return (total < 0 ? '-' : '') +
            'P' +
            (Y ? Y + 'Y' : '') +
            (M ? M + 'M' : '') +
            (D ? D + 'D' : '') +
            ((h || m || s) ? 'T' : '') +
            (h ? h + 'H' : '') +
            (m ? m + 'M' : '') +
            (s ? s + 'S' : '');
    }

    var duration_prototype__proto = Duration.prototype;

    duration_prototype__proto.abs            = duration_abs__abs;
    duration_prototype__proto.add            = duration_add_subtract__add;
    duration_prototype__proto.subtract       = duration_add_subtract__subtract;
    duration_prototype__proto.as             = as;
    duration_prototype__proto.asMilliseconds = asMilliseconds;
    duration_prototype__proto.asSeconds      = asSeconds;
    duration_prototype__proto.asMinutes      = asMinutes;
    duration_prototype__proto.asHours        = asHours;
    duration_prototype__proto.asDays         = asDays;
    duration_prototype__proto.asWeeks        = asWeeks;
    duration_prototype__proto.asMonths       = asMonths;
    duration_prototype__proto.asYears        = asYears;
    duration_prototype__proto.valueOf        = duration_as__valueOf;
    duration_prototype__proto._bubble        = bubble;
    duration_prototype__proto.get            = duration_get__get;
    duration_prototype__proto.milliseconds   = milliseconds;
    duration_prototype__proto.seconds        = seconds;
    duration_prototype__proto.minutes        = minutes;
    duration_prototype__proto.hours          = hours;
    duration_prototype__proto.days           = days;
    duration_prototype__proto.weeks          = weeks;
    duration_prototype__proto.months         = months;
    duration_prototype__proto.years          = years;
    duration_prototype__proto.humanize       = humanize;
    duration_prototype__proto.toISOString    = iso_string__toISOString;
    duration_prototype__proto.toString       = iso_string__toISOString;
    duration_prototype__proto.toJSON         = iso_string__toISOString;
    duration_prototype__proto.locale         = locale;
    duration_prototype__proto.localeData     = localeData;

    // Deprecations
    duration_prototype__proto.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', iso_string__toISOString);
    duration_prototype__proto.lang = lang;

    // Side effect imports

    // FORMATTING

    addFormatToken('X', 0, 0, 'unix');
    addFormatToken('x', 0, 0, 'valueOf');

    // PARSING

    addRegexToken('x', matchSigned);
    addRegexToken('X', matchTimestamp);
    addParseToken('X', function (input, array, config) {
        config._d = new Date(parseFloat(input, 10) * 1000);
    });
    addParseToken('x', function (input, array, config) {
        config._d = new Date(toInt(input));
    });

    // Side effect imports


    utils_hooks__hooks.version = '2.15.2';

    setHookCallback(local__createLocal);

    utils_hooks__hooks.fn                    = momentPrototype;
    utils_hooks__hooks.min                   = min;
    utils_hooks__hooks.max                   = max;
    utils_hooks__hooks.now                   = now;
    utils_hooks__hooks.utc                   = create_utc__createUTC;
    utils_hooks__hooks.unix                  = moment__createUnix;
    utils_hooks__hooks.months                = lists__listMonths;
    utils_hooks__hooks.isDate                = isDate;
    utils_hooks__hooks.locale                = locale_locales__getSetGlobalLocale;
    utils_hooks__hooks.invalid               = valid__createInvalid;
    utils_hooks__hooks.duration              = create__createDuration;
    utils_hooks__hooks.isMoment              = isMoment;
    utils_hooks__hooks.weekdays              = lists__listWeekdays;
    utils_hooks__hooks.parseZone             = moment__createInZone;
    utils_hooks__hooks.localeData            = locale_locales__getLocale;
    utils_hooks__hooks.isDuration            = isDuration;
    utils_hooks__hooks.monthsShort           = lists__listMonthsShort;
    utils_hooks__hooks.weekdaysMin           = lists__listWeekdaysMin;
    utils_hooks__hooks.defineLocale          = defineLocale;
    utils_hooks__hooks.updateLocale          = updateLocale;
    utils_hooks__hooks.locales               = locale_locales__listLocales;
    utils_hooks__hooks.weekdaysShort         = lists__listWeekdaysShort;
    utils_hooks__hooks.normalizeUnits        = normalizeUnits;
    utils_hooks__hooks.relativeTimeRounding = duration_humanize__getSetRelativeTimeRounding;
    utils_hooks__hooks.relativeTimeThreshold = duration_humanize__getSetRelativeTimeThreshold;
    utils_hooks__hooks.calendarFormat        = getCalendarFormat;
    utils_hooks__hooks.prototype             = momentPrototype;

    var _moment = utils_hooks__hooks;

    return _moment;

}));
},{}],15:[function(_dereq_,module,exports){
/**
 * pad-number
 * @version 0.0.1
 * @author Jonathan Puckey
 * @license MIT
 */

'use strict';

/**
 * @description Converts a number to a string with
 * a given amount of leading characters.
 * @param {number} number Number to convert.
 * @param {number} width Amount of leading characters to prepend.
 * @param {string} [padding = '0'] leading character.
 * @throws Error
 * @returns {string}
 */
function pad(number, width, padding) {
  // Convert number to string.
  var string = number.toString();

  // Return either the original number as string,
  // or the number with leading padding characters.
  if (!width || string.length >= width) {
    return string;
  }

  var leadingCharacters = new Array(width - string.length + 1).join(padding || '0');
  return leadingCharacters + string;
}

module.exports = pad;

},{}],16:[function(_dereq_,module,exports){
// 3er Parties
'use strict';

var _interopRequireDefault = _dereq_('babel-runtime/helpers/interop-require-default')['default'];

var _vendorStarjsMinJs = _dereq_('./vendor/starjs.min.js');

var _glslCanvas = _dereq_('glslCanvas');

var _glslCanvas2 = _interopRequireDefault(_glslCanvas);

var _astroJs = _dereq_('./astro.js');

var _anytime = _dereq_('anytime');

var _anytime2 = _interopRequireDefault(_anytime);

L.UxDaylight = L.Control.extend({
    options: {
        position: 'topleft',
        icon: 'https://tangrams.github.io/ux_daylight/ux_daylight.png',
        icon_stars: 'https://tangrams.github.io/ux_daylight/ux_stars.png',
        icon_const: 'https://tangrams.github.io/ux_daylight/ux_const.png',
        scene: null,
        time: "now",
        sun_size: 20,
        moon: true,
        stars: true,
        constellations: false
    },

    initialize: function initialize(options) {
        L.Util.setOptions(this, options);
    },

    onAdd: function onAdd(map) {
        // GLOBAL VARIABLES
        // -------------------------------------------------------------
        var icon_size = 26;
        var toolbar_size = 30;
        var size = 260;
        var halfsize = Math.floor(size / 2);

        var time = this.options.time;
        var scene = this.options.scene;
        var state_open = false;
        var state_moon = this.options.moon;
        var state_stars = this.options.stars;
        var state_constellations = this.options.constellations;

        var bodies = {
            sun: _vendorStarjsMinJs.StarJs.Solar.BODIES.Sun,
            moon: {
                name: 'Moon',
                getCoord: function getCoord(jct, earthPos, equ2ecl) {
                    // earthPos and equ2ecl are ignored
                    var pos = _vendorStarjsMinJs.StarJs.Solar.approxMoon(jct);
                    return { 'phi': pos.ra, 'theta': pos.dec };
                }
            }
        };
        bodies.sun.getCoord = function (jct, earthPos, equ2ecl) {
            var pos = this.keplerCoord(jct);
            return new _vendorStarjsMinJs.StarJs.Vector.Polar3(equ2ecl.apply(pos.sub(earthPos)));
        };

        // CONTAINER
        // -------------------------------------------------------------
        var container = L.DomUtil.create('div', 'leaflet-bar leaflet-control leaflet-control-custom ux_daylight-container');
        container.addEventListener('mousedown', function () {
            map.dragging.disable();
        });

        container.addEventListener('mouseup', function () {
            map.dragging.enable();
        });

        // ICON
        // -------------------------------------------------------------
        var constellations_icon = this.options.icon_const;
        var stars_icon = this.options.icon_stars;
        var icon_sc = L.DomUtil.create('img', 'ux_daylight-icon-sc', container);
        icon_sc.src = constellations_icon;
        icon_sc.addEventListener('click', function () {
            if (!state_stars) {
                state_stars = true;
                state_constellations = false;
                icon_sc.style.opacity = 1.;
                icon_sc.src = constellations_icon;
            } else if (!state_constellations) {
                state_stars = true;
                state_constellations = true;
                icon_sc.src = stars_icon;
                icon_sc.style.opacity = .5;
            } else {

                state_stars = false;
                state_constellations = false;
                icon_sc.src = stars_icon;
                icon_sc.style.opacity = 1.;
                console.log('no stars no const');
            }
        });

        var icon = L.DomUtil.create('img', 'ux_daylight-icon', container);
        icon.src = this.options.icon;
        icon.addEventListener('click', function () {
            if (state_open) {
                container.style.width = icon_size + 'px';
                container.style.height = icon_size + 'px';
                icon_sc.style.visibility = 'hidden';
            } else {
                container.style.width = size + 20 + 'px';
                container.style.height = size + 20 + toolbar_size + 'px';
                icon_sc.style.visibility = 'visible';
            }
            state_open = !state_open;
        });

        // TOOLBAR
        // -------------------------------------------------------------
        var toolbar = L.DomUtil.create('div', 'ux_daylight-toolbar', container);
        toolbar.style.height = toolbar_size + 'px';

        // Date/time selection
        var date = L.DomUtil.create('input', 'ux_daylight-date', toolbar);
        var date_picker = L.DomUtil.create('button', 'ux_daylight-date_picker', toolbar);
        date_picker.appendChild(document.createTextNode("choose"));
        var p = new _anytime2['default']({ input: date, button: date_picker, anchor: date, initialValue: new Date(), format: 'hh:mm DD/MM/YY' });
        p.render();
        p.on('change', function (d) {
            time = d;
            console.log('The new date/time is…', time);
        });
        var date_now = L.DomUtil.create('button', 'ux_daylight-date_now', toolbar);
        date_now.appendChild(document.createTextNode("now"));
        date_now.onclick = function () {
            p.update(new Date());
            date.value = p.value;
            time = 'now';
        };

        // CANVAS
        // -------------------------------------------------------------
        var canvas = L.DomUtil.create('canvas', 'ux_daylight-spheremap', container);
        canvas.setAttribute('id', 'ux_daylight');
        canvas.style.width = size + 'px';
        canvas.style.height = size + 'px';
        // canvas.setAttribute('data-fragment-url', 'shader.frag');

        var shader = new _glslCanvas2['default'](canvas);
        shader.load('\n// Atmosphere scattering + Moon phase\n// Patricio Gonzalez Vivo @patriciogv 2016\n\n#ifdef GL_ES\nprecision mediump float;\n#endif\n\n// GLOBALs\n#define TAU 6.283185307179586\n#define ONE_OVER_TAU .159154943\n#define PI 3.1415926535\n#define HALF_PI 1.57079632679\n\nuniform sampler2D u_stars;\nuniform vec4 u_date;\nuniform vec2 u_resolution;\n\nuniform vec2 u_sun;\nuniform float u_sun_size;\nuniform vec2 u_moon;\n\nuniform vec2 u_mouse;\nuniform float u_time;\n\n#define MOON_RAD 25.\n#define SUN_BRIG 100.\n#define SUN_RAD 20.\n#define SUN_COLOR vec3(0.7031,0.4687,0.1055)\n#define SKY_COLOR vec3(0.3984,0.5117,0.7305)\n\n// http://quasar.as.utexas.edu/BillInfo/JulianDatesG.html\n#define SOLAR_YEAR 365.25\n#define SOLAR_MONTH 30.6001\n#define JULIAN_EPOCH 4712.\n#define SYNODIC_MONTH 29.5305\n\nfloat JulianDate() { \n    float yy = u_date.x - floor((10.-u_date.y)*.1);\n    float mm = mod(u_date.y + 9.,12.);\n    // int k1 = int(SOLAR_YEAR * (yy + JULIAN_EPOCH)); // 2457365.475 TO BIG\n    int k1 = int(SOLAR_YEAR * (yy - 2003.)) - 4665;\n    int k2 = int(SOLAR_MONTH * mm + 0.5);\n    int k3 = int(floor((yy*.01) + 49.) * 0.75) - 38;\n    return float(k1 + k2 - k3 + 59) + u_date.z;\n}\n\nvoid main() {\n    vec2 st = gl_FragCoord.xy/u_resolution.xy;\n    vec3 stars = texture2D(u_stars,st).rgb;\n    st -= .5;\n    \n    // // LIGHT\n    float moon_rotation = u_time*.05;\n    vec2 moon_st = st-(u_moon-.5);\n    moon_st *= 25.;\n    float moon_phase = fract(((JulianDate()) + 2.944) / SYNODIC_MONTH)*TAU; // Moon fase to radiant\n    vec3 l = normalize(vec3(-cos(moon_phase),0.,sin(moon_phase)));\n    vec3 moon_norm = normalize(vec3(moon_st.x, moon_st.y, sqrt(.25 - moon_st.x*moon_st.x - moon_st.y*moon_st.y)));\n    vec3 moon = vec3(1.)*clamp(dot(moon_norm, l),0.0, 1.);\n    stars += moon;\n\n    // ATMOSPHERE NORMALS\n    float z = sqrt(.25 - dot(st,st));\n    vec3 norm = normalize(vec3(st.x, st.y, z)); // normals from sphere\n    \n    // animation\n    vec2 sunVec = u_sun-.5;\n    // sunVec = u_mouse.xy/u_resolution.y-.5;\n\n    float radius = dot(sunVec,sunVec)*2.;\n    stars *= smoothstep(0.,.5,z);\n\n    float azimur = 1.-radius;\n    float sun = max(1.0 - (1. + 10.0 * azimur + z) * dot(st - sunVec,st - sunVec)*(SUN_RAD-u_sun_size),0.0) + 0.3 * pow(1.0-z,12.0) * (1.6*azimur);\n    vec3 color = mix(SKY_COLOR, SUN_COLOR, sun) *  ((0.5 + 2.0 * azimur) * azimur + (sun*sun*sun*sun*sun*sun*sun*sun) * azimur * azimur * (1.0 + SUN_BRIG * azimur * azimur))*(1.-z);\n\n    gl_FragColor = vec4(mix(stars, color,clamp(azimur,0.,1.)),step(0.,z));\n}\n        ');
        var prev_sun_pos = [0, 0];
        shader.on("render", function () {
            if (scene && scene.lights) {
                if (scene.lights.default_light && scene.lights.default_light.diffuse && shader.uniforms && shader.uniforms.u_sun) {
                    var pos = [shader.uniforms.u_sun.value[0][0], shader.uniforms.u_sun.value[0][1]];
                    // If the position of the sun had change...
                    if (prev_sun_pos[0] !== pos[0] || prev_sun_pos[1] !== pos[1]) {
                        // Reload spheretexture from the shader for ambient
                        scene.loadTextures();

                        // UPDATE default_light LIGHT COLOR
                        prev_sun_pos = pos;
                        // Prevent the vector for going under the horizon
                        var vec = [pos[0] - .5, pos[1] - .5];
                        var angle = Math.atan2(vec[1], vec[0]);
                        var radius = Math.sqrt(vec[0] * vec[0] + vec[1] * vec[1]);
                        radius = Math.min(radius, .48);
                        pos = [Math.cos(angle) * radius + .5, Math.sin(angle) * radius + .5];
                        // Extract the pixel of where the sun is
                        var pixel = new Uint8Array(4);
                        var gl = shader.gl;
                        gl.readPixels(pos[0] * gl.drawingBufferWidth, pos[1] * gl.drawingBufferHeight, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, pixel);
                        // Actually update the color of the light
                        scene.lights.default_light.diffuse = [pixel[0] / 255, pixel[1] / 255, pixel[2] / 255];
                        // console.log("light color changed to ", pixel);
                    }
                }
                // else {
                //     console.log("uxDaylight: leave deafult lights on tangram");
                // }
            }
        });

        var stars_canvas = L.DomUtil.create('canvas', 'ux_daylight-starmap', container);
        stars_canvas.style.width = size + 'px';
        stars_canvas.style.height = size + 'px';
        stars_canvas.setAttribute('width', size + 'px');
        stars_canvas.setAttribute('height', size + 'px');
        var ctx = stars_canvas.getContext("2d");

        // Sun Slider
        var sun_range = L.DomUtil.create('input', 'ux_daylight-sun-slider', toolbar);
        sun_range.setAttribute('type', 'range');
        sun_range.setAttribute('min', '1');
        sun_range.setAttribute('max', '19.5');
        sun_range.setAttribute('value', '18');
        sun_range.setAttribute('step', '.1');
        sun_range.addEventListener('input', function (e) {
            shader.setUniform('u_sun_size', parseFloat(e.target.value));
        });

        function updateLight() {
            if (scene && scene.lights && scene.lights.default_light) {
                var t = time === "now" || time === "" ? new Date() : p.value;
                var loc = map.getCenter();

                var sun = (0, _astroJs.stereoProject)(bodies.sun, size, loc.lng, loc.lat, t);
                shader.setUniform('u_sun', sun.x, sun.y);
                shader.setUniform('u_sun_size', parseFloat(sun_range.value));

                // If the SUN is visible...
                if (scene.lights.default_light._direction && sun.visible) {
                    sun.x = sun.x - .5;sun.y = sun.y - .5;
                    var vector = new _vendorStarjsMinJs.StarJs.Vector.Vector3(sun.x, sun.y, Math.sqrt(Math.abs(1.0 - (sun.x * sun.x + sun.y * sun.y))));
                    var normal = vector.scale(-1. / vector.len());
                    scene.lights.default_light._direction = [normal.x, normal.y, normal.z];
                }

                if (state_moon) {
                    var moon = (0, _astroJs.stereoProject)(bodies.moon, size, loc.lng, loc.lat, t);
                    shader.setUniform('u_moon', moon.x, moon.y);
                }

                // Draw Background
                ctx.clearRect(0, 0, size, size);
                ctx.fillStyle = 'rgba(0,0,0,0)';
                ctx.fillRect(0, 0, size, size);
                ctx.beginPath();
                ctx.fillStyle = "#000010";
                ctx.arc(halfsize, halfsize, halfsize, 0, 2 * Math.PI, true);
                ctx.fill();

                if (state_stars) {
                    // Draw stars in other canvas
                    var stars = (0, _astroJs.stereoProjectStars)(size, loc.lng, loc.lat, t);
                    var starsTotal = stars.length;

                    // Draw stars
                    ctx.fillStyle = '#FFF';
                    for (var i = 0; i < starsTotal; ++i) {
                        var s = stars[i];
                        if (s[3]) {
                            ctx.beginPath();
                            ctx.fillStyle = 'rgba(255,255,255,' + Math.abs(s[0] * .1) + ')';
                            ctx.arc(halfsize - s[1], halfsize - s[2], Math.abs(s[0] * .1), 0, 2 * Math.PI, true);
                            ctx.fill();
                        }
                    }

                    if (state_constellations && _astroJs.constellations) {
                        var constellationsTotal = _astroJs.constellations.length;
                        ctx.beginPath();
                        ctx.strokeStyle = 'rgba(255,255,255,0.6)';
                        // Draw Constelations
                        for (var j = constellationsTotal; j--;) {
                            var s = _astroJs.constellations[j][0];
                            var e = _astroJs.constellations[j][1];
                            var so = stars[s],
                                eo = stars[e];
                            if (so[3] || eo[3]) {
                                ctx.moveTo(halfsize - so[1], halfsize - so[2]);
                                ctx.lineTo(halfsize - eo[1], halfsize - eo[2]);
                            }
                        }
                        ctx.stroke();
                    }
                }

                shader.loadTexture('loadTexture', stars_canvas);
                shader.render();
            } else {
                console.log('Tangram is loading...');
            }
        };

        function tick() {
            updateLight();
            setTimeout(tick, 1000);
        }

        // this.starmap = new StarMap("starmap", 500, REY_STARS60, [], {});

        map.on('move', updateLight);

        tick();
        return container;
    },

    onRemove: function onRemove(map) {
        // when removed
    }
});

L.uxDaylight = function (options) {
    return new L.UxDaylight(options);
};

},{"./astro.js":17,"./vendor/starjs.min.js":18,"anytime":1,"babel-runtime/helpers/interop-require-default":8,"glslCanvas":11}],17:[function(_dereq_,module,exports){
// 3er Parties
'use strict';Object.defineProperty(exports,'__esModule',{value:true});exports.stereographicProjectStars = stereographicProjectStars;exports.stereoProject = stereoProject;exports.stereoProjectStars = stereoProjectStars;var _vendorStarjsMinJs=_dereq_('./vendor/starjs.min.js');var stars=[[2,0.153315,0.321262],[4,0.214373,0.377923],[2,0.277089,0.387169],[3,0.124453,0.349210],[4,0.109105,0.374669],[4,0.152805,0.437325],[3,0.217106,0.451814],[2,0.018302,0.259460],[3,0.086012,0.276017],[4,0.080637,0.303055],[4,0.084312,0.261521],[4,0.103644,0.214995],[4,0.125457,0.207249],[4,-0.047734,0.396615],[3,-0.127389,0.387132],[4,-0.042768,0.407419],[3,-0.048984,0.429200],[5,3.695634,-0.323869],[4,4.869013,-0.277961],[5,3.104510,-0.288432],[5,3.111642,-0.325844],[5,3.624042,-0.300191],[5,2.943970,-0.236295],[5,4.678938,-0.344425],[4,7.197191,-0.335932],[5,6.492389,-0.306284],[5,5.874931,-0.293518],[5,4.425046,-0.258542],[5,-2.446127,-0.790642],[4,-1.567068,-0.819888],[3,-1.472491,-0.822831],[4,-1.407938,-0.802835],[5,-1.917372,-0.746010],[5,-2.011034,-0.745233],[5,-2.518833,-0.742530],[5,-3.565675,-0.792542],[4,-3.214828,-0.854198],[5,-3.115140,-0.840720],[3,-2.607468,-0.824992],[4,-0.768633,0.132259],[2,-0.748742,0.121574],[4,-0.761520,-0.050123],[3,-0.745891,-0.042633],[3,-0.682478,0.027187],[4,-0.655348,0.064482],[2,-0.618034,0.092884],[0,-0.604478,0.077545],[3,-0.591064,0.055967],[3,-0.599455,0.008775],[3,-0.544920,-0.007168],[3,-0.446074,-0.083056],[4,-0.389896,-0.099563],[2,-0.335667,-0.048655],[4,-0.186791,-0.001025],[4,-0.209647,0.012021],[4,-0.228953,-0.068027],[2,-0.254470,-0.002790],[4,-0.252953,-0.121630],[3,-0.217905,-0.012106],[3,-0.148079,-0.066242],[4,-0.154826,-0.119176],[3,-0.143545,-0.138946],[4,-0.096527,-0.079472],[3,-0.110739,-0.186896],[4,-0.109709,-0.198526],[4,-0.116850,-0.210214],[4,-0.099982,-0.052835],[4,-0.074210,-0.182108],[3,-0.080963,-0.177231],[3,-0.971474,-0.467281],[4,-1.112270,-0.429691],[4,-1.089430,-0.460113],[2,-1.131081,-0.464992],[5,-1.071688,-0.485942],[4,-1.305671,-0.500332],[2,-1.164147,-0.526459],[3,-1.311381,-0.531600],[3,-1.163668,-0.535942],[3,-1.365170,-0.566249],[3,-1.134784,-0.585335],[4,0.252876,0.169977],[5,0.298116,0.187242],[2,0.284794,0.207658],[4,0.412200,0.188412],[3,0.388836,0.242484],[4,0.372521,0.246615],[4,0.383634,0.260920],[4,0.444261,0.173868],[2,0.255454,0.183606],[4,0.263110,0.208875],[2,0.756957,0.297790],[3,0.790159,0.376218],[0,0.826867,0.424454],[3,0.997936,0.512659],[2,0.998786,0.336658],[1,0.997944,0.413676],[4,0.999716,0.423825],[2,0.774172,0.402233],[3,0.775953,0.374639],[2,-3.912991,0.161944],[4,-4.106968,0.138741],[-1,-3.279509,0.168980],[2,-2.657170,0.240763],[3,-2.907714,0.271425],[4,-2.726207,0.120378],[4,-3.050561,0.486122],[4,-3.336258,0.485469],[4,-3.261096,0.425384],[4,-4.195054,0.153527],[3,-2.902598,0.347340],[3,-2.385507,0.367834],[3,-2.200616,0.299203],[4,-2.090789,0.338259],[5,0.670816,-0.413742],[4,0.702035,-0.382501],[5,0.706920,-0.335997],[4,0.782715,-0.319942],[4,1.303617,0.795115],[4,0.746905,0.653668],[4,1.085810,0.691396],[4,0.547257,0.643543],[4,0.549636,0.717676],[4,0.779244,0.582507],[4,0.490621,0.576655],[4,0.757964,0.506804],[4,-0.527105,-0.109591],[3,-0.517764,-0.129712],[4,-0.496240,-0.156717],[4,-0.450217,-0.224175],[4,-0.435275,-0.239332],[4,-0.399094,-0.151528],[4,-0.358429,-0.147974],[3,-0.315078,-0.146438],[3,-0.347585,-0.198108],[4,-0.342563,-0.192635],[4,-0.402998,-0.175022],[4,-0.396108,-0.221748],[2,-0.298492,-0.141673],[3,4.235937,-0.700702],[1,2.625613,-0.696536],[4,5.938745,-0.583962],[3,5.145955,-0.597128],[2,5.893326,-0.629665],[3,1.704274,-0.498387],[1,1.946973,-0.571659],[3,2.587637,-0.565392],[2,2.694135,-0.568948],[3,4.378664,-0.592956],[-1,1.110376,-0.495271],[3,1.180002,-0.395888],[2,1.409371,-0.335541],[1,1.818366,-0.438310],[3,4.908485,-0.562775],[4,5.368602,-0.549274],[3,6.843602,-0.564084],[3,8.878472,-0.565484],[2,0.189441,0.580091],[3,0.254885,0.620872],[2,0.020026,0.567498],[2,0.088606,0.537738],[2,0.124353,0.585719],[3,11.726633,-0.514935],[2,-54.833725,-0.474006],[3,18.907471,-0.613037],[3,-39.330620,-0.491720],[3,-16.326486,-0.468759],[2,-11.010328,-0.455301],[2,-4.515992,-0.503673],[0,-3.611286,-0.581699],[2,-3.882782,-0.437807],[-1,-2.754986,-0.587110],[4,-3.676701,-0.420398],[3,-3.775508,-0.412207],[3,-3.789143,-0.384873],[3,-4.101517,-0.388616],[3,-4.105862,-0.380741],[3,-4.968118,-0.358125],[2,-5.628427,-0.331805],[4,-4.259899,-0.296630],[4,-4.017252,-0.296160],[4,-3.966210,-0.286063],[4,-4.108201,-0.310037],[2,-3.525604,-0.328493],[4,-3.158216,-0.343208],[4,-3.099835,-0.359157],[4,-3.544350,-0.375673],[2,-2.833601,-0.385444],[3,-2.426757,-0.384907],[4,-2.711347,-0.342314],[4,-2.680742,-0.316965],[2,-0.367482,0.607836],[4,-0.306907,0.563241],[4,-0.233090,0.543448],[3,-0.242722,0.556605],[3,-0.200791,0.559056],[3,-0.342717,0.707526],[3,-0.154629,0.651898],[4,-0.302278,0.590466],[3,-0.045089,0.804487],[3,-0.452331,0.598948],[4,-0.494280,0.612730],[3,0.042411,-0.077155],[3,0.185391,-0.071534],[3,0.248077,-0.090435],[4,0.362694,0.002867],[4,0.267960,-0.186041],[2,0.095386,-0.158265],[3,0.231025,-0.139984],[3,0.313728,-0.025989],[4,0.334979,0.073961],[3,0.372145,0.028245],[2,0.420053,0.035704],[4,0.376228,0.088492],[4,0.413485,0.077889],[5,-95.990192,-0.788607],[4,1211.464866,-0.812996],[4,5.360806,-0.818603],[4,6.121706,-0.847166],[4,-24.972592,-0.828922],[5,3.030077,-0.853196],[5,2.826885,-0.850870],[5,2.160792,-0.823799],[5,20.140295,-0.779834],[5,3.331676,-0.792250],[4,1.927565,-0.802361],[4,1.905998,-0.794292],[3,-2.701419,-0.636767],[4,-2.175238,-0.563483],[4,-2.103881,-0.569474],[-2,1.219308,-0.146919],[3,1.174390,-0.169638],[1,1.104297,-0.157989],[3,1.269243,-0.214234],[1,1.295162,-0.258358],[4,1.149633,-0.207256],[3,1.245092,-0.291554],[3,1.321188,-0.211036],[3,1.092807,-0.268541],[3,1.313391,-0.248723],[1,1.353840,-0.234486],[4,1.325590,-0.137279],[4,1.280728,-0.149934],[4,1.269576,-0.105444],[3,1.394287,-0.237982],[2,1.455655,-0.261441],[0,1.564420,0.045628],[2,1.476646,0.072465],[4,2.185259,0.189572],[4,2.228958,0.256384],[3,2.203018,0.159763],[3,1.885834,0.080331],[4,2.391846,0.103849],[5,1.843800,0.155235],[4,0.989308,-0.318019],[3,0.996283,-0.392049],[4,1.074959,-0.316647],[3,1.101461,-0.300360],[3,0.881663,-0.319819],[2,0.914920,-0.306438],[3,0.961313,-0.322686],[5,-6.498209,0.154177],[4,-6.325061,0.248197],[4,-16.995781,0.251816],[5,-16.964229,0.238469],[4,-17.342053,0.242556],[5,-18.838648,0.231774],[4,7.567052,-0.161059],[3,6.461938,-0.142264],[3,11.244030,-0.129687],[4,9.446621,-0.201869],[4,13.026495,-0.155557],[4,12.926105,-0.095051],[4,19.639972,-0.085749],[5,115.020419,-0.150796],[4,30.071968,-0.161524],[5,-0.806748,-0.400781],[4,-0.756585,-0.384818],[5,-0.825136,-0.347489],[4,-0.771761,-0.335638],[4,-0.738785,-0.368886],[4,-0.745314,-0.335209],[4,-0.733135,-0.357469],[4,-0.735004,-0.343395],[1,-14.685035,-0.544236],[1,-17.213510,-0.613991],[1,-9.570593,-0.573732],[2,-30.254132,-0.562883],[4,-54.474833,-0.219213],[3,-45.263103,-0.199998],[5,-22.701074,-0.195970],[2,-13.304753,-0.207059],[5,-22.277338,-0.196335],[2,-28.986725,-0.154289],[2,-15.326220,-0.145131],[4,-14.269346,-0.142286],[2,-8.140188,0.347437],[4,-13.560016,0.377444],[3,-0.588144,0.316098],[4,-0.638983,0.269383],[3,-0.665903,0.248954],[2,-0.514403,0.366508],[2,-0.621915,0.415551],[3,-0.709667,0.502604],[3,-0.669110,0.484816],[3,-0.538355,0.432131],[1,-0.462510,0.417082],[2,-0.449911,0.305447],[3,-0.381521,0.270072],[3,-0.421456,0.375548],[3,-0.376892,0.344772],[4,-0.370366,0.357999],[3,-0.401663,0.403293],[5,-0.472115,0.099617],[4,-0.484460,0.098961],[5,-0.469681,0.116721],[5,-0.468620,0.088245],[3,-0.472831,0.128061],[4,-0.478829,0.128760],[3,-0.467268,0.139757],[4,-0.448740,0.141645],[4,-0.457154,0.132313],[3,0.680865,-0.521066],[4,0.624950,-0.482199],[4,0.935674,-0.646131],[5,1.050332,-0.644325],[3,0.891065,-0.606692],[4,0.786604,-0.548309],[3,-13.665024,0.697458],[3,16.007850,0.691543],[3,-3.594055,0.629439],[3,-2.085642,0.565382],[4,-1.715688,0.560775],[2,-1.539926,0.595104],[3,-1.252753,0.645873],[4,-0.913292,0.717749],[2,-1.138109,0.490992],[4,-1.128970,0.522488],[3,-1.028644,0.541519],[2,-1.014917,0.482223],[3,-0.724694,0.670221],[3,-0.912099,0.736358],[3,-0.612280,0.703695],[4,-0.377664,0.087549],[4,-0.388020,0.088646],[3,-0.374324,0.045827],[0,0.216470,-0.545632],[3,0.258520,-0.483514],[3,0.306947,-0.482474],[4,0.332134,-0.442135],[4,0.363476,-0.392818],[4,0.365618,-0.362543],[3,0.409777,-0.366984],[4,0.374191,-0.121532],[3,0.405113,-0.077806],[4,0.376630,-0.163509],[4,0.420339,-0.209133],[4,0.455287,-0.077118],[4,0.528453,-0.337641],[3,0.465024,-0.192187],[3,0.501117,-0.082727],[2,0.794901,-0.044416],[3,0.694306,-0.125477],[4,0.503462,-0.191056],[3,0.529607,-0.085407],[4,0.539706,-0.205722],[4,0.537717,-0.106001],[2,0.571633,-0.118433],[4,0.559196,-0.218149],[4,0.544647,-0.340627],[4,0.577132,-0.212706],[4,0.622662,-0.066882],[4,0.612395,-0.059739],[4,0.679312,-0.265767],[3,0.688303,-0.029264],[3,0.630632,-0.303807],[3,0.649521,-0.305892],[3,0.685836,-0.273214],[4,0.718247,-0.028410],[5,0.390570,-0.321797],[5,0.334664,-0.303929],[5,0.270862,-0.267964],[5,0.486535,-0.321848],[3,0.445416,-0.258496],[5,0.388635,-0.248787],[4,0.386594,-0.290582],[4,0.278476,-0.261384],[3,1.067113,0.198972],[4,1.018140,0.205846],[2,1.105557,0.199035],[1,1.179742,0.144094],[3,1.327697,0.181462],[2,1.212728,0.222895],[3,1.428966,0.194219],[4,1.539289,0.239117],[1,1.610597,0.249570],[3,1.603810,0.216189],[3,1.466815,0.247456],[3,1.415578,0.145351],[3,1.220076,0.113012],[1,1.529616,0.285691],[4,1.490344,0.284710],[4,1.370965,0.270244],[4,1.135092,0.178237],[3,1.261620,0.305359],[3,-0.282197,-0.338140],[4,-0.253700,-0.359463],[2,-0.170330,-0.433616],[1,-0.248787,-0.434408],[3,-0.157143,-0.480375],[3,-0.108723,-0.416737],[4,-0.129699,-0.495905],[4,-0.116411,-0.399167],[3,-0.200568,-0.398914],[4,-1.657964,0.413549],[4,-1.467984,0.388245],[3,-1.571651,0.427705],[2,-1.495052,0.189763],[3,-1.555270,0.168715],[3,-1.301519,0.276632],[2,-1.419649,0.283000],[3,-1.409110,0.353354],[3,-1.093869,0.424540],[3,-1.218250,0.332744],[3,-1.220411,0.126243],[3,-1.218331,0.220222],[3,-1.060903,0.246739],[3,-1.009799,0.260925],[4,-1.136582,0.231884],[4,-0.813324,0.160007],[4,-0.818265,0.181247],[3,-0.901596,0.192295],[4,-0.962496,0.183664],[4,-0.993447,0.190720],[3,-0.967616,0.256407],[4,-1.172488,0.336011],[3,-1.016483,0.337028],[4,0.411141,-0.625735],[5,0.423479,-0.574303],[5,0.327087,-0.580985],[5,0.377515,-0.621288],[3,0.618823,-0.386815],[3,4.109504,-0.108230],[1,2.895725,-0.075704],[3,4.812426,-0.147991],[3,16.957925,-0.285402],[4,64.644279,-0.304853],[3,-5.750358,-0.205012],[3,-3.534759,-0.237150],[4,2.116193,0.049814],[4,2.129407,0.029167],[4,2.184503,0.029667],[3,2.347210,0.051931],[3,2.229999,0.056074],[3,2.645813,0.020197],[3,3.168139,-0.009972],[2,0.056240,-0.799063],[3,0.540806,-0.756827],[4,0.362957,-0.677903],[4,0.319497,-0.682914],[4,0.256140,-0.670038],[2,0.265075,-0.595761],[3,-0.472786,-0.437839],[3,-0.427542,-0.559501],[4,-0.272822,-0.520483],[4,-0.364299,-0.503491],[4,-0.219345,0.430013],[4,-0.197805,0.395154],[4,-0.213560,0.490210],[3,-0.195984,0.469312],[4,-0.211378,0.460756],[4,-0.199978,0.442167],[4,-0.175168,0.406834],[4,-0.235748,0.361156],[4,-0.230937,0.341878],[3,3.986073,0.147335],[2,4.509389,0.174902],[1,4.024679,0.104815],[3,4.361419,0.207246],[3,3.509460,0.230932],[4,7.906107,0.177944],[3,9.983442,0.135466],[2,41.890227,0.127854],[2,9.954611,0.181042],[2,3.318744,0.210497],[3,3.199562,0.086541],[4,2.982628,0.203162],[4,2.836788,0.232543],[3,12.679696,0.092143],[4,11.766032,0.052665],[3,5.193640,0.081395],[2,0.870225,-0.183168],[3,0.786433,-0.197743],[3,0.934406,-0.198443],[2,0.887568,-0.156794],[3,0.813154,-0.142370],[3,0.962832,-0.184248],[3,0.944640,-0.130072],[4,1.021991,-0.144854],[3,0.984435,-0.124271],[5,0.839043,-0.107889],[4,0.837520,-0.115497],[4,0.810862,-0.103950],[4,0.814242,-0.113417],[2,-2.556980,-0.140911],[2,-2.181589,-0.082066],[3,-2.354853,-0.224277],[3,-1.967631,-0.129783],[3,-1.951807,-0.250579],[3,-1.934805,-0.265871],[4,4.908759,0.331756],[4,3.989638,0.317648],[3,6.824691,0.307783],[4,4.803219,0.303786],[4,3.037570,0.328759],[2,-2.711894,-0.438847],[4,-2.544506,-0.399724],[2,-2.436258,-0.395260],[3,-2.122623,-0.327443],[4,-3.028596,-0.418098],[4,-3.029558,-0.416478],[3,-3.186050,-0.425069],[4,-2.787396,-0.460221],[4,-2.891600,-0.471171],[4,-2.339939,-0.435342],[3,-2.246894,-0.452965],[3,-2.242283,-0.488804],[4,-2.288319,-0.417076],[4,-2.162545,-0.443922],[3,-2.112155,-0.411042],[3,-2.127859,-0.370382],[5,-2.087765,-0.361109],[2,-1.971729,-0.375546],[4,-1.941064,-0.389556],[4,-2.106508,-0.333223],[3,-1.730989,-0.348206],[4,-1.923372,-0.309665],[3,-1.813756,-0.302177],[5,-1.759498,-0.305409],[4,-1.893830,-0.312524],[4,1.089509,0.565897],[4,1.287306,0.559138],[4,1.473621,0.457955],[4,1.950340,0.395807],[3,2.726083,0.332679],[3,2.423780,0.381690],[3,2.767278,0.309480],[0,-0.850546,0.351994],[5,-0.823091,0.360712],[4,-0.821506,0.340476],[3,-0.802297,0.299660],[3,-0.770996,0.293267],[4,-0.786557,0.333614],[4,-0.712081,0.345632],[4,-0.916886,0.325541],[4,-0.783624,0.403479],[4,-0.720697,0.355554],[5,0.750775,-0.766453],[5,0.776786,-0.717441],[5,1.045709,-0.763908],[5,0.884265,-0.786090],[5,-0.437378,-0.343481],[6,-0.449653,-0.326080],[5,-0.449588,-0.356075],[5,-0.443957,-0.403910],[5,-0.430486,-0.362093],[5,-0.406650,-0.350505],[5,-0.397885,-0.377730],[5,-0.397918,-0.289974],[6,-0.434864,-0.297896],[4,-0.410915,-0.289181],[5,-0.465431,-0.300318],[4,-0.440092,-0.303629],[5,-0.398908,-0.269118],[5,-0.462607,-0.282955],[4,1.134360,-0.061449],[3,1.067012,-0.054812],[4,1.375529,-0.004300],[4,1.809567,-0.026045],[4,1.729740,-0.032122],[3,1.579147,-0.083542],[4,1.234126,0.021053],[4,1.154957,0.064080],[4,1.109484,0.040101],[4,1.196932,0.086570],[5,12.484482,-0.636518],[5,16.546329,-0.661411],[5,22.333432,-0.641961],[3,31.835179,-0.658485],[4,56.258337,-0.639601],[6,-71.783224,-0.645805],[5,-98.676994,-0.678695],[5,-174.390778,-0.689753],[4,45.571150,-0.703148],[5,20.637220,-0.669697],[4,-26.077663,-0.674011],[5,-9.177490,-0.726360],[2,-12.300138,-0.689024],[3,-14.094408,-0.728318],[5,-5.323003,-0.765772],[3,-7.315605,-0.720544],[5,-5.277516,-0.708399],[3,-9.870171,-0.675881],[4,-6.036558,-0.673169],[4,-5.879839,-0.659173],[4,-1.704331,-0.458149],[4,-1.570895,-0.467961],[4,-1.676766,-0.415986],[4,-1.516686,-0.440583],[4,-3.012362,-0.895168],[3,-0.311764,-0.801007],[4,-0.162737,-0.859857],[2,-1.447160,-0.092478],[4,-1.488589,-0.145998],[4,-1.517851,-0.162469],[4,-1.539105,-0.176664],[4,-1.481608,-0.189552],[2,-1.613266,-0.032251],[3,-1.582442,-0.040972],[4,-1.512256,-0.073186],[3,-1.490169,0.017314],[2,-1.243869,-0.138091],[3,-1.317043,0.081995],[2,-1.074841,0.039877],[4,-1.186469,-0.186357],[4,-1.158665,-0.214155],[3,-1.181195,-0.221689],[5,-1.216625,-0.236402],[4,-1.153643,-0.266705],[2,-1.115815,0.110047],[3,-1.054271,0.023629],[3,-0.997189,0.025589],[4,-0.976476,0.021815],[3,0.732693,0.060824],[4,0.735284,0.077826],[5,0.749395,0.100043],[4,0.754826,0.118485],[3,0.737286,0.048951],[3,0.747590,0.021301],[4,0.762307,0.014960],[2,0.919379,-0.016955],[1,0.901247,-0.010489],[6,0.911466,-0.022642],[6,0.897938,-0.038637],[4,0.897984,-0.042247],[5,0.897544,-0.047068],[2,0.898168,-0.051620],[2,0.884751,-0.002610],[3,0.830240,-0.059800],[0,0.818994,-0.071695],[1,0.858359,0.055468],[0,0.979151,0.064727],[2,0.947956,-0.084585],[4,0.880010,0.051953],[4,1.017252,0.177571],[4,0.975780,0.178812],[4,0.895753,0.083000],[4,1.010453,0.084389],[4,1.033595,0.129596],[4,1.053503,0.124635],[4,-0.827878,-0.718944],[3,-0.575630,-0.738753],[3,-0.552238,-0.651667],[4,-0.777953,-0.664821],[4,-0.794664,-0.603089],[4,-0.903463,-0.594865],[4,-0.963246,-0.620852],[3,-1.064270,-0.633688],[1,-0.505004,-0.539965],[4,-0.348131,-0.641571],[3,-0.453203,-0.651929],[2,0.028885,0.133282],[2,-0.121098,0.133475],[3,-0.251619,0.224855],[4,-0.304192,0.227607],[4,-0.304510,0.152574],[4,-0.358823,0.174567],[4,-0.116135,0.082297],[5,-0.105685,0.076243],[3,-0.161669,0.208597],[2,-0.123283,0.250095],[4,-0.161308,0.106628],[3,-0.173041,0.094804],[2,-0.305285,0.086389],[3,-0.244236,0.054138],[2,-0.169582,0.270020],[4,-0.244729,0.297907],[3,-0.153907,0.218050],[3,0.390629,0.530540],[3,0.399613,0.495996],[2,0.426527,0.504111],[4,0.437582,0.462206],[1,0.477841,0.464832],[2,0.435249,0.373442],[3,0.427507,0.352550],[3,0.438700,0.412754],[4,0.510872,0.447246],[3,0.528704,0.443008],[4,0.494705,0.445179],[3,0.535053,0.389668],[4,0.602827,0.442225],[2,0.571122,0.364071],[2,0.560404,0.285646],[3,0.532600,0.289470],[4,0.574343,0.322905],[4,0.621532,0.449516],[4,0.596661,0.470046],[5,0.567526,0.473715],[4,0.374382,0.458134],[4,0.230087,0.473644],[4,0.390348,0.347440],[3,0.145178,-0.431895],[3,0.201752,-0.456493],[4,0.090405,-0.425350],[3,0.057229,-0.400781],[2,0.057404,-0.386932],[3,0.195206,-0.397123],[3,0.150309,-0.523296],[4,0.253147,-0.427593],[3,0.020535,-0.421876],[3,1.235944,-0.600164],[3,0.946004,-0.477686],[5,1.031274,-0.602699],[5,0.836753,-0.472763],[5,1.137650,-0.541293],[5,0.942585,-0.430639],[5,0.877587,-0.435619],[4,-0.303473,-0.296458],[4,-0.248439,-0.296105],[4,-0.174850,-0.240481],[5,-0.296838,-0.276369],[4,-0.195501,-0.290016],[4,-0.148276,-0.295032],[4,-0.140655,-0.291849],[1,-0.136868,-0.264418],[4,0.138190,0.068962],[4,0.106611,0.066288],[4,0.157624,0.268788],[4,0.162296,0.217885],[4,0.175127,0.242518],[3,0.202278,0.134723],[4,0.224973,0.047924],[4,0.234072,0.080087],[4,0.272740,0.024121],[3,-0.093724,0.028650],[5,-0.086733,0.046996],[4,-0.069996,0.055723],[4,-0.072265,0.010957],[4,-0.043770,0.049139],[4,-0.039187,0.015534],[4,-0.001501,0.059965],[2,1.763766,-0.364003],[3,1.598846,-0.258196],[3,1.642248,-0.220410],[4,1.556912,-0.225036],[4,1.535314,-0.252755],[2,1.799816,-0.215332],[4,1.632544,-0.230291],[3,2.145769,-0.318259],[3,2.189128,-0.297983],[4,2.279842,-0.246641],[3,0.532269,-0.634704],[3,0.620101,-0.606503],[4,0.573705,-0.593759],[4,0.626331,-0.569256],[4,-0.024163,-0.250535],[4,0.128561,-0.261948],[2,-1.729145,-0.200016],[2,-1.685559,-0.174577],[4,-1.631892,-0.171477],[2,-1.560741,-0.227128],[4,-1.629429,-0.248645],[3,-1.759558,-0.260612],[2,-1.742115,-0.231917],[0,-1.500807,-0.234842],[2,-1.455802,-0.251332],[2,-1.362809,-0.308531],[3,-1.352224,-0.344791],[3,-1.335614,-0.387486],[3,-1.234052,-0.396323],[1,-1.104201,-0.393888],[1,-1.122334,-0.335603],[2,-1.136458,-0.337468],[3,-1.045259,-0.335015],[3,-1.055692,-0.365225],[2,-1.079484,-0.354413],[4,-1.107951,-0.350540],[4,-0.880075,-0.127799],[3,-0.857078,-0.072068],[4,-0.812768,-0.041455],[4,-0.830682,-0.079162],[3,-1.975360,0.092231],[2,-1.878073,0.056132],[3,-1.815083,0.039095],[3,-1.859258,0.135400],[3,-1.763422,0.137531],[4,-1.834701,0.159651],[4,-1.905207,0.173361],[3,-1.826348,-0.029943],[3,-1.102910,-0.135192],[4,-1.187389,-0.112582],[4,-1.084567,-0.112833],[3,-1.004255,-0.085498],[3,-0.911086,-0.025302],[3,-0.968433,0.083655],[4,-0.780513,0.036699],[4,4.008484,-0.003243],[5,5.044109,-0.005558],[5,4.793957,-0.061685],[5,3.502021,-0.070847],[5,4.997606,-0.023908],[3,-0.614637,0.163166],[4,-0.636773,0.158508],[4,-0.633859,0.153701],[3,-0.580972,0.171761],[3,-0.925901,-0.332284],[1,-0.899726,-0.309405],[2,-0.912345,-0.266341],[2,-0.974972,-0.271920],[2,-0.884841,-0.225558],[3,-0.818284,-0.239994],[2,-0.783871,-0.233596],[2,-0.758313,-0.266829],[3,-0.743545,-0.246276],[2,-0.734024,-0.185552],[3,-0.694780,-0.157018],[4,-0.691663,-0.408692],[3,-0.687644,-0.370071],[4,-0.694608,-0.140140],[4,-0.591216,-0.382546],[4,-0.578116,-0.317952],[3,-0.941679,-0.185870],[3,-0.775224,-0.186302],[3,0.485493,0.085139],[3,0.479155,0.078955],[3,0.579330,0.109431],[3,0.636436,0.137227],[4,0.694236,0.109613],[4,0.623459,0.077755],[4,0.495516,0.113375],[3,0.586569,0.052312],[4,0.511927,0.003505],[4,0.686173,0.088903],[3,0.646109,0.154294],[4,0.654038,0.157740],[3,0.663691,0.140204],[3,0.663822,0.168960],[0,0.687024,0.145074],[4,0.707531,0.203061],[3,0.906923,0.186625],[5,0.659665,0.203419],[4,0.656591,0.201758],[2,0.541501,0.213514],[1,0.862764,0.254966],[5,-0.712103,-0.418989],[5,-0.745608,-0.491419],[4,-0.651839,-0.446266],[3,-0.888726,-0.424148],[4,-0.952162,-0.424005],[4,-0.881495,-0.456472],[5,-0.793087,-0.488894],[4,-0.772672,-0.497912],[5,-0.612740,-0.535774],[2,-2.157889,-0.683170],[1,-1.372191,-0.687637],[4,-1.955012,-0.653346],[2,-1.775241,-0.617981],[3,0.251836,0.264014],[3,0.290392,0.315176],[4,0.308870,0.304273],[3,-0.093141,-0.557002],[2,-0.225126,-0.580376],[4,0.068929,-0.612297],[4,-1.816275e-4,-0.644174],[4,0.043817,-0.635534],[2,7.839004,0.535998],[1,8.104641,0.597905],[3,-29.701313,0.543322],[3,2.978495,0.613544],[4,10.930906,0.282303],[3,4.621686,0.378860],[3,4.379252,0.393048],[3,2.469268,0.436439],[3,11.008993,0.297107],[3,32.847620,0.442924],[3,9.069375,0.409096],[2,74.284487,0.506174],[1,-4.183790,0.459032],[1,-8.444487,0.531258],[2,-5.400445,0.519738],[3,3.007352,0.484250],[3,2.402444,0.445664],[3,2.030758,0.585735],[4,3.490480,0.510234],[3,3.458632,0.566217],[2,-2.559832,0.755684],[3,-2.135640,0.724330],[4,-1.588703,0.777852],[4,-1.880149,0.806818],[4,-1.389290,0.869857],[4,-1.129226,0.942128],[2,0.343868,0.987239],[2,6.205925,-0.460160],[3,3.632437,-0.515782],[2,2.538594,-0.398276],[1,2.203253,-0.517336],[3,2.960751,-0.368589],[3,4.277652,-0.385085],[3,5.482360,-0.447592],[2,2.787397,-0.520687],[3,-23.011274,-0.005820],[3,49.253479,0.015401],[3,-10.972244,-0.012649],[4,-6.501826,-0.048373],[0,-5.318207,-0.097710],[3,-8.203027,0.029657],[2,-7.326729,0.095929],[4,-3.351852,-0.089895],[4,-3.270471,-0.052412],[3,-4.771472,-0.005199],[4,-3.679132,0.013478],[3,-2.691434,-0.049418],[3,-2.635145,0.016519],[3,-2.052254,0.259603],[2,-1.976573,0.237447],[4,-1.995539,0.280702],[3,-1.893229,0.233586],[4,-1.826584,0.231496],[4,-1.753290,0.238950],[4,-1.719523,0.266557],[4,32.406105,0.057041],[4,-88.002873,0.076358],[3,1.356046,-0.706715],[4,1.803398,-0.682374],[3,1.407331,-0.673965],[4,2.451139,-0.654333],[5,1.919107,-0.720095],[3,1.583525,-0.734655],[3,1.981131,-0.651107],[4,-0.672273,0.218629],[4,-0.596528,0.213283],[4,0.011639,-0.049848],[5,0.012436,0.117438],[5,0.013672,0.559301],[5,0.013781,-0.456516],[5,0.014054,0.627251],[5,0.016974,-0.198993],[5,0.017582,-0.301246],[5,0.018087,-0.077155],[5,0.019724,0.160280],[5,0.020401,-0.249214],[5,0.021903,0.097571],[5,0.022522,0.425218],[5,0.022504,-0.045834],[5,0.021896,-0.872722],[5,0.023377,-0.110224],[4,0.024581,-0.135810],[5,0.025254,-0.247472],[5,0.025603,-0.316575],[5,0.026549,-0.157832],[5,0.029490,0.374235],[5,0.029901,-0.231069],[4,0.031870,0.178187],[5,0.031557,-0.068002],[5,0.029075,-0.916237],[4,0.031950,-0.166739],[5,0.032692,0.077128],[5,0.032536,-0.083706],[5,0.035244,-0.281524],[5,0.036999,0.595331],[5,0.037436,0.444679],[4,0.037305,0.350995],[4,0.040007,0.332513],[5,0.040684,0.282191],[5,0.044549,0.276721],[5,0.045318,0.295372],[5,0.044968,0.071595],[5,0.046112,0.344021],[5,0.045081,-0.695341],[5,0.046983,-0.258446],[5,0.047534,-0.176846],[5,0.046889,-0.801537],[5,0.052976,0.487948],[5,0.054139,0.598856],[5,0.054829,0.499093],[5,0.055478,0.016928],[5,0.059509,-0.226710],[5,0.061268,0.157427],[5,0.061662,0.408035],[4,0.061005,-0.296282],[5,0.062126,-0.363130],[5,0.066270,0.577085],[5,0.065810,0.265627],[5,0.065631,-0.034547],[5,0.066372,-0.210621],[5,0.066496,-0.447478],[5,0.068669,0.301743],[4,0.069429,0.515279],[5,0.069239,0.496833],[4,0.068648,-0.453658],[4,0.068962,-0.612390],[4,0.072119,0.611980],[5,0.071224,0.178977],[5,0.070796,0.060773],[5,0.072499,0.519403],[5,0.071527,-0.613174],[5,0.073621,-0.263822],[5,0.075329,-0.491768],[5,0.077051,-0.031363],[5,0.077706,-0.004411],[5,0.079005,0.511380],[5,0.079700,0.581150],[5,0.078010,-0.445237],[5,0.080406,0.408994],[3,0.080835,0.508393],[5,0.080432,0.133709],[5,0.081669,0.319135],[5,0.081654,-0.219564],[5,0.085653,0.459467],[5,0.086089,0.187601],[5,0.087327,0.189298],[5,0.089042,-0.037996],[5,0.089951,0.358628],[5,0.088456,-0.571019],[5,0.092011,0.651239],[4,0.092030,0.471763],[5,0.091388,-0.537338],[4,0.095118,0.435068],[5,0.093420,-0.580408],[5,0.092928,-0.642827],[5,0.097257,0.443809],[4,0.094865,-0.548199],[5,0.099923,0.767161],[4,0.097885,0.448206],[4,0.096707,-0.092850],[5,0.096733,-0.348448],[5,0.099122,0.523028],[5,0.097918,-0.194435],[5,0.098384,-0.390654],[5,0.104593,0.765214],[5,0.100165,-0.440548],[5,0.101128,-0.199111],[5,0.101906,0.135876],[5,0.105438,0.735581],[5,0.102954,0.104873],[5,0.103766,0.058892],[5,0.104490,-0.158933],[3,0.107531,0.552209],[5,0.105144,-0.191868],[5,0.105743,0.063790],[5,0.105949,0.046114],[4,0.106946,0.476636],[5,0.107262,0.148920],[5,0.108252,-0.118901],[5,0.107821,-0.213800],[5,0.111122,0.627876],[5,0.109797,-0.093158],[5,0.106405,-0.766264],[5,0.120316,0.895788],[5,0.111034,-0.476835],[4,0.116297,0.590505],[5,0.115431,-0.212609],[4,0.116164,-0.009985],[4,0.120574,0.565459],[5,0.119655,0.169032],[5,0.117543,-0.611258],[5,0.120496,0.209168],[5,0.122135,-0.064204],[4,0.124253,0.567861],[5,0.124523,0.581579],[5,0.122839,-0.098638],[5,0.120581,-0.694073],[5,0.128365,0.653786],[5,0.126853,0.258545],[5,0.127740,0.305261],[5,0.128838,-0.099637],[4,0.151113,0.936715],[5,0.134550,-0.353300],[5,0.138105,0.377320],[5,0.137912,0.284899],[5,0.139688,0.589926],[5,0.137071,-0.282518],[5,0.138413,-0.042232],[5,0.141267,0.595886],[5,0.140629,0.493169],[5,0.137916,-0.428574],[6,0.142491,0.049401],[5,0.142966,0.131174],[5,0.144284,0.189614],[5,0.144313,0.189542],[5,0.145182,-0.086076],[5,0.150060,0.519683],[5,0.149484,0.403437],[5,0.150689,0.557320],[5,0.149346,0.182985],[5,0.148938,-0.085603],[5,0.150276,0.049343],[5,0.149001,-0.378735],[5,0.147916,-0.598194],[5,0.159006,0.834261],[3,0.150767,-0.089091],[5,0.155377,0.684440],[5,0.153512,0.173256],[5,0.154614,0.384679],[5,0.154636,0.225889],[5,0.157102,0.627332],[4,0.156379,0.522228],[5,0.157691,0.637302],[5,0.155165,0.021344],[5,0.156532,0.341637],[5,0.156402,0.281320],[4,0.157162,0.185652],[5,0.157769,-0.019647],[5,0.160077,-0.342926],[5,0.162259,0.066203],[5,0.163144,0.141730],[5,0.163756,-0.069252],[5,0.164697,-0.008498],[4,0.165515,-0.419656],[5,0.168699,-0.021822],[4,0.166823,-0.685690],[5,0.171382,0.031552],[4,0.176510,0.556954],[5,0.175888,-0.004440],[5,0.178855,0.256180],[4,0.181595,0.419631],[5,0.184609,0.341548],[5,0.184019,0.180549],[4,0.189705,0.676160],[5,0.184248,-0.276812],[5,0.186113,-0.060415],[5,0.186873,-0.378791],[5,0.190556,0.398532],[4,0.188997,-0.128093],[5,0.190432,0.168888],[5,0.191427,0.169498],[4,0.193603,0.418377],[5,0.187796,-0.629361],[5,0.191800,-0.114436],[5,0.192045,-0.291881],[5,0.201703,0.703655],[5,0.199146,0.434887],[5,0.198009,-0.191026],[4,0.199331,0.053666],[5,0.199778,-0.232778],[5,0.206703,0.558051],[5,0.202820,-0.270601],[4,0.207844,0.568447],[5,0.205573,-0.333288],[5,0.208630,0.336898],[5,0.207351,-0.061384],[5,0.209863,0.162507],[5,0.209434,-0.137659],[5,0.213590,0.452807],[5,0.218298,0.740501],[5,0.212358,0.153321],[5,0.212518,-0.135207],[5,0.217410,0.554052],[5,0.212875,-0.267084],[5,0.215062,0.106354],[4,0.220207,0.407951],[5,0.218164,-0.330024],[5,0.219094,-0.187824],[5,0.220962,0.144154],[5,0.223213,0.396915],[4,0.223022,0.369682],[5,0.227060,0.675055],[5,0.228414,0.708334],[4,0.225787,0.390020],[5,0.225482,0.268390],[5,0.221214,-0.533928],[5,0.221229,-0.533891],[5,0.226410,0.317656],[5,0.229325,0.583780],[5,0.225692,-0.099149],[5,0.227416,0.178744],[5,0.226605,-0.289835],[5,0.226391,-0.332970],[4,0.227940,-0.032214],[5,0.225818,-0.586572],[5,0.227397,-0.506676],[5,0.239494,0.623077],[5,0.216953,-0.884336],[5,0.235441,-0.050074],[5,0.234655,-0.222175],[5,0.235691,-0.475010],[5,0.235710,-0.504281],[5,0.241575,0.343866],[5,0.240497,0.149054],[5,0.241679,0.293275],[5,0.215903,-0.912641],[5,0.242991,0.444151],[5,0.241078,0.032173],[5,0.246900,0.487012],[5,0.245026,0.196874],[4,0.243739,-0.093527],[5,0.249300,0.522204],[5,0.246703,0.096670],[5,0.249691,0.474757],[5,0.246799,-0.468499],[5,0.252315,0.371198],[4,0.252876,0.169997],[5,0.251341,-0.148819],[4,0.258617,0.683244],[4,0.252934,0.027823],[5,0.258400,0.337292],[5,0.258978,0.337039],[5,0.254819,-0.388848],[5,0.258268,0.208703],[5,0.261766,0.156752],[5,0.262648,0.247516],[4,0.260177,-0.199156],[5,0.267091,0.632435],[5,0.264584,0.457879],[4,0.261334,-0.438813],[4,0.272529,0.712068],[5,0.267002,0.185865],[3,0.275997,0.732176],[5,0.279965,0.799453],[5,0.268307,0.027034],[5,0.267407,-0.183754],[6,0.274691,0.635861],[5,0.268997,-0.074520],[5,0.267123,-0.384170],[5,0.274988,0.629611],[5,0.273338,0.514895],[5,0.280899,0.782903],[5,0.272740,0.024121],[5,0.274898,0.298910],[5,0.274006,0.118151],[5,0.271943,-0.411288],[4,0.277117,0.387180],[5,0.276514,0.230275],[5,0.275434,0.001119],[5,0.274921,-0.134368],[5,0.276862,-0.002969],[5,0.276561,-0.035826],[5,0.283360,0.200258],[5,0.288339,0.559151],[4,0.287898,0.342953],[4,0.290105,0.230314],[5,0.293557,0.354505],[5,0.292957,0.171833],[5,0.289474,-0.399128],[5,0.294675,0.074924],[5,0.295256,-0.015929],[4,0.297095,0.270785],[4,0.299114,0.406379],[5,0.297697,0.214087],[5,0.300026,0.477680],[5,0.298718,0.134136],[4,0.298588,0.077355],[5,0.298093,-0.020891],[5,0.298623,-0.185341],[5,0.298370,-0.274731],[5,0.305579,0.299623],[5,0.305174,0.228874],[5,0.305046,0.222088],[5,0.302235,-0.375543],[4,0.308245,0.307871],[5,0.310504,0.553165],[5,0.310687,0.548808],[5,0.308078,-0.056103],[5,0.301548,-0.672500],[5,0.310807,0.175437],[5,0.313572,0.438761],[5,0.310564,0.015340],[5,0.312782,0.255291],[5,0.304478,-0.671293],[5,0.317626,0.467917],[5,0.320960,0.529981],[5,0.322120,0.377832],[5,0.315070,-0.531090],[5,0.319966,0.003454],[5,0.320599,-0.007723],[5,0.320158,-0.094332],[5,0.320302,-0.155364],[5,0.325920,0.466378],[5,0.321409,-0.210882],[4,0.328839,0.469271],[5,0.322292,-0.477963],[5,0.326890,0.092860],[4,0.337184,0.666948],[4,0.329629,-0.107668],[5,0.329762,-0.134682],[5,0.333289,0.284870],[5,0.331170,-0.176711],[5,0.322200,-0.748719],[5,0.334999,0.264859],[5,0.336557,0.267312],[5,0.340768,0.223847],[6,0.341288,0.002227],[5,0.344579,0.326340],[5,0.343111,0.019787],[5,0.346464,0.310914],[5,0.344709,-0.009032],[4,0.344539,-0.133825],[5,0.359118,0.737510],[5,0.347054,-0.311944],[5,0.358055,0.646255],[5,0.353251,0.337627],[4,0.348836,-0.251484],[5,0.353578,0.312303],[5,0.350958,-0.068694],[5,0.354319,0.060172],[4,0.353811,0.048849],[5,0.356460,0.351496],[5,0.356678,0.308250],[5,0.354118,-0.068450],[5,0.355670,0.109054],[5,0.355555,0.067557],[5,0.354499,-0.268367],[5,0.358289,-0.029645],[5,0.356518,-0.311257],[5,0.361049,0.194030],[5,0.383346,0.860869],[5,0.343534,-0.825941],[5,0.359804,-0.269766],[5,0.357576,-0.493612],[4,0.362891,-0.103976],[5,0.365663,0.240640],[5,0.364476,-0.082681],[5,0.371515,0.521741],[5,0.371387,0.504327],[4,0.369535,0.365887],[5,0.367016,-0.006072],[5,0.375945,0.672285],[5,0.369828,0.176431],[5,0.367845,-0.127654],[5,0.374100,0.407043],[5,0.365601,-0.515586],[5,0.375248,0.134420],[5,0.370303,-0.474837],[5,0.376273,0.109039],[5,0.385203,0.160922],[5,0.393855,0.685850],[5,0.385780,0.223417],[5,0.387100,0.153594],[4,0.377727,-0.669652],[5,0.393142,0.433173],[4,0.392684,0.315871],[5,0.392634,0.132380],[5,0.389498,-0.323411],[4,0.391488,-0.185376],[5,0.386431,-0.610482],[5,0.398226,0.347625],[5,0.403895,0.595186],[5,0.397918,-0.197791],[5,0.397880,-0.348598],[5,0.403539,0.161352],[4,0.398660,-0.465142],[5,0.405130,0.158590],[5,0.404610,0.073274],[4,0.390072,-0.768255],[5,0.407299,0.286123],[5,0.405608,-0.032406],[5,0.409331,0.182349],[4,0.411051,0.360641],[5,0.429969,0.830490],[4,0.411817,0.317055],[5,0.407570,-0.211297],[5,0.413783,0.437105],[5,0.413357,0.374213],[4,0.412200,0.188412],[5,0.409352,-0.208966],[5,0.416439,0.491537],[5,0.410894,-0.024286],[4,0.409802,-0.366981],[5,0.413412,-0.021514],[5,0.413195,-0.224206],[5,0.416093,0.095146],[5,0.419082,0.235120],[5,0.444479,0.861207],[5,0.417198,-0.066970],[5,0.420297,0.038003],[5,0.419168,-0.087149],[5,0.418381,-0.250177],[5,0.421144,-0.067167],[4,0.428445,0.539636],[5,0.433040,0.625570],[5,0.425178,-0.066427],[5,0.421726,-0.434553],[5,0.430655,0.115590],[4,0.445067,0.758953],[5,0.431077,-0.053183],[5,0.419993,-0.725243],[5,0.438999,0.259334],[4,0.443373,0.360137],[5,0.441699,0.103979],[5,0.445847,0.242451],[5,0.448893,0.447080],[5,0.446379,0.058192],[5,0.467179,0.805958],[5,0.447251,-0.010438],[5,0.455199,0.544548],[5,0.499494,0.914905],[5,0.446353,-0.408293],[5,0.456262,0.476309],[5,0.453992,0.273162],[4,0.452835,0.185740],[5,0.446675,-0.546595],[5,0.433602,-0.824181],[5,0.460450,0.404280],[4,0.466281,0.645101],[5,0.460380,0.356903],[5,0.462673,0.468670],[5,0.463990,0.467317],[4,0.462938,0.307857],[5,0.461994,-0.008118],[5,0.461129,-0.256727],[4,0.461981,-0.199015],[5,0.466121,0.240735],[4,0.464613,0.029419],[5,0.462824,-0.163395],[5,0.459534,-0.442634],[4,0.467211,0.259067],[5,0.471301,0.456472],[4,0.470142,0.397235],[5,0.465192,-0.213679],[5,0.469569,0.186665],[5,0.460398,-0.607714],[5,0.469268,0.032086],[4,0.466117,-0.394613],[5,0.478784,0.632004],[5,0.461575,-0.606891],[5,0.474888,0.457976],[5,0.472159,0.245692],[5,0.473641,0.183010],[5,0.470031,-0.209232],[5,0.478301,0.301306],[5,0.477801,0.219170],[5,0.455620,-0.800983],[4,0.487872,0.456388],[5,0.490093,0.464697],[4,0.492914,0.564375],[5,0.488669,0.303894],[4,0.491433,0.461100],[5,0.483351,-0.243011],[5,0.493154,0.525590],[5,0.487777,-0.098814],[5,0.494819,0.446312],[5,0.492201,-0.059454],[5,0.494253,0.099252],[5,0.492061,-0.111061],[5,0.498972,0.445475],[5,0.481276,-0.691611],[5,0.496803,0.245363],[5,0.495199,0.054058],[5,0.499776,0.425061],[4,0.494823,-0.044319],[5,0.503084,0.520286],[5,0.500398,0.319733],[5,0.492919,-0.390227],[5,0.502906,0.362976],[5,0.500217,0.081983],[5,0.494819,-0.438711],[4,0.491460,-0.612050],[5,0.505255,0.216796],[5,0.500162,-0.470336],[5,0.495480,-0.655500],[5,0.509420,-0.097994],[5,0.511693,0.005129],[5,0.510322,-0.153619],[5,0.526557,0.615404],[4,0.512538,-0.366687],[5,0.606889,0.942782],[5,0.516377,-0.064594],[5,0.493091,-0.814882],[5,0.517848,-0.049136],[5,0.528109,0.576994],[5,0.523709,0.340233],[5,0.520155,0.026683],[5,0.522338,-0.045502],[4,0.527170,0.305396],[5,0.537361,0.664419],[5,0.527003,0.173631],[4,0.537427,0.616949],[5,0.533174,0.329363],[5,0.526817,-0.286163],[5,0.546435,0.711597],[5,0.530488,-0.091759],[5,0.533959,0.215197],[5,0.537286,0.421203],[3,0.534160,0.213590],[5,0.534964,0.220222],[4,0.535095,0.216821],[5,0.533132,-0.010149],[3,0.536832,0.215913],[5,0.534347,-0.002588],[5,0.537057,0.217621],[5,0.536401,0.052845],[4,0.538238,0.212085],[5,0.547517,0.616374],[5,0.537764,0.059437],[5,0.535250,-0.438550],[5,0.538603,-0.261767],[5,0.543940,0.207282],[5,0.543723,0.097551],[5,0.548831,0.413884],[5,0.547323,0.297081],[3,0.546241,0.213043],[5,0.546312,0.213803],[5,0.541995,-0.211414],[5,0.544788,0.001987],[5,0.542767,-0.269519],[5,0.544642,-0.184464],[5,0.549513,0.227005],[5,0.544623,-0.340644],[5,0.554009,0.309161],[5,0.559229,0.554023],[4,0.547072,-0.326853],[5,0.559009,0.452048],[5,0.554318,0.057088],[5,0.557641,0.152369],[5,0.556288,-0.046821],[5,0.569884,0.613668],[5,0.569055,0.590325],[5,0.565686,0.443884],[4,0.560863,-0.025790],[5,0.559019,-0.312731],[5,0.567151,0.316077],[5,0.558752,-0.433708],[6,0.563677,-0.105979],[5,0.568276,0.198713],[5,0.561135,-0.367504],[5,0.606954,0.849542],[5,0.574072,-0.047771],[5,0.575901,-0.110172],[5,0.579718,0.160119],[5,0.595090,0.683177],[5,0.590377,0.567566],[5,0.582505,0.087469],[5,0.581819,-0.013524],[5,0.579325,-0.272545],[5,0.584972,-0.002346],[5,0.590108,0.213522],[5,0.588291,0.047469],[5,0.588878,0.071656],[4,0.591089,0.195122],[5,0.589529,0.024674],[5,0.592979,0.194460],[4,0.579961,-0.602755],[5,0.590157,-0.112101],[4,0.581147,-0.589972],[5,0.596730,0.245623],[5,0.597919,0.258630],[5,0.593825,-0.246101],[5,0.602673,0.344715],[5,0.600830,0.152483],[5,0.604330,0.172812],[5,0.603913,0.117458],[5,0.609753,0.301790],[5,0.609300,0.235292],[5,0.604717,-0.143976],[5,0.662565,0.897371],[5,0.607934,-0.060495],[5,0.610816,0.048235],[5,0.609190,-0.077118],[5,0.611611,-0.179533],[4,0.609335,-0.383800],[5,0.668183,0.890037],[5,0.627582,0.599083],[4,0.621502,0.368757],[5,0.617466,0.067437],[4,0.618637,0.081016],[5,0.628322,0.552719],[5,0.627050,0.505267],[5,0.620645,0.087586],[5,0.658898,0.851430],[4,0.620011,-0.089743],[4,0.631695,0.469451],[5,0.639132,0.638796],[4,0.628698,0.181537],[5,0.634685,0.466827],[5,0.632133,0.190571],[5,0.628880,-0.056538],[5,0.637658,0.476127],[5,0.642584,0.585940],[5,0.637806,0.381943],[5,0.635338,0.186623],[5,0.621270,-0.603142],[5,0.635879,0.192330],[5,0.642800,0.537394],[4,0.638328,0.311146],[6,0.631761,-0.182772],[4,0.638159,0.243319],[4,0.641844,0.429622],[5,0.636952,0.123097],[5,0.638927,0.132498],[5,0.639178,0.053552],[5,0.639260,-0.066354],[5,0.634853,-0.406749],[5,0.641531,-8.556963e-4],[5,0.639065,-0.182088],[5,0.643401,0.123468],[5,0.645017,0.227462],[5,0.644394,0.183727],[5,0.629946,-0.615872],[5,0.647981,0.185178],[5,0.647599,0.147464],[5,0.650918,0.306976],[5,0.651342,0.305346],[4,0.649707,0.153413],[5,0.648988,0.082749],[5,0.648415,-0.032697],[5,0.646604,-0.220708],[5,0.652363,0.167716],[4,0.653660,0.197043],[5,0.653810,0.196189],[5,0.655956,0.281453],[4,0.656710,0.137145],[5,0.642877,-0.617448],[4,0.657522,0.129110],[5,0.679317,0.733614],[5,0.660255,0.098160],[5,0.661927,0.190941],[4,0.663266,0.143743],[5,0.663109,0.129352],[3,0.663963,0.139391],[5,0.664513,0.114355],[5,0.663565,0.012050],[5,0.652788,-0.591849],[5,0.674603,0.508545],[5,0.663926,-0.171457],[5,0.668631,0.137321],[5,0.665389,-0.114362],[5,0.630907,-0.842285],[4,0.669952,0.142266],[5,0.670226,0.137800],[5,0.670142,0.120344],[5,0.661148,-0.607063],[4,0.674122,-3.830028e-4],[5,0.670300,-0.321581],[5,0.688577,0.628048],[5,0.676488,-0.028012],[4,0.680391,0.130271],[5,0.682899,0.258255],[5,0.681317,0.048633],[5,0.680599,-0.058875],[5,0.681493,-0.071956],[5,0.681498,-0.078440],[4,0.689499,0.376520],[5,0.640033,-0.862872],[5,0.700104,0.503746],[5,0.699920,0.499450],[5,0.691233,0.008712],[5,0.694575,0.182494],[5,0.694231,0.140837],[5,0.692438,-0.021587],[5,0.679492,-0.610685],[5,0.697458,0.138759],[4,0.697852,0.139811],[5,0.697296,0.068794],[5,0.704774,0.448378],[5,0.696615,-0.106190],[5,0.700391,0.106849],[5,0.698025,-0.125967],[5,0.706201,0.347065],[5,0.704540,0.255036],[5,0.689725,-0.601781],[5,0.711188,0.466030],[5,0.709694,0.397594],[5,0.700576,-0.216961],[4,0.701644,-0.173374],[5,0.714709,0.097576],[5,0.713583,-0.074344],[5,0.710515,-0.275122],[5,0.726559,0.540215],[5,0.713732,-0.164353],[5,0.722350,0.367064],[5,0.709262,-0.471432],[5,0.719990,0.102507],[5,0.716821,-0.187900],[5,0.768523,0.857011],[5,0.740253,0.618882],[5,0.730940,0.292309],[5,0.730594,0.281437],[5,0.714451,-0.574245],[5,0.725226,-0.148866],[4,0.732928,0.339340],[5,0.737112,0.452997],[5,0.728561,-0.049554],[5,0.728349,-0.143473],[5,0.710219,-0.712386],[5,0.737853,0.165905],[5,0.733879,-0.142474],[5,0.742654,0.389749],[4,0.742101,0.331716],[5,0.742614,0.248378],[5,0.750315,0.523444],[4,0.741763,0.125004],[5,0.738173,-0.314400],[4,0.742987,-0.047620],[5,0.753958,0.497159],[5,0.744630,0.021890],[5,0.736321,-0.503619],[4,0.749786,0.088815],[5,0.749446,0.067990],[5,0.749610,0.004079],[5,0.753001,0.132007],[5,0.750525,-0.147137],[5,0.751196,-0.144260],[5,0.754934,-0.045159],[5,0.758256,0.150821],[5,0.759769,0.212087],[5,0.783618,0.754470],[5,0.760957,0.222155],[4,0.764753,0.343256],[5,0.768384,0.357999],[5,0.763941,-0.143886],[5,0.766772,-0.089804],[4,0.767084,-0.109849],[4,0.772324,-0.062685],[5,0.773718,0.006302],[4,0.778110,0.190669],[4,0.772283,-0.176794],[5,0.788837,0.565456],[5,0.776932,-0.036753],[5,0.774852,-0.233397],[5,0.776897,-0.201589],[5,0.775609,-0.284587],[5,0.790732,0.483394],[4,0.783284,0.135242],[5,0.811133,0.752824],[5,0.780893,-0.216096],[5,0.777113,-0.457322],[5,0.785757,-0.232270],[5,0.793478,0.164159],[5,0.791034,-0.040644],[5,0.794747,0.180093],[5,0.795827,0.214977],[5,0.795168,0.191707],[5,0.784687,-0.461829],[5,0.795014,0.074298],[5,0.793360,-0.109434],[5,0.805152,0.434420],[5,0.796635,-0.075760],[5,0.800172,0.085989],[5,0.798027,-0.038906],[4,0.801509,0.136958],[4,0.799528,-0.076543],[5,0.832509,0.743587],[5,0.808676,0.140946],[5,0.848655,0.827729],[5,0.807330,-0.021740],[4,0.814956,0.349063],[5,0.808899,0.009049],[5,0.807546,-0.103773],[5,0.793893,-0.617609],[5,0.812690,-0.052908],[4,0.814460,0.024973],[5,0.822164,0.293252],[5,0.819711,0.045025],[5,0.825448,0.308709],[5,0.763342,-0.876522],[5,0.824586,0.099296],[5,0.840500,0.608650],[5,0.818781,-0.324699],[5,0.832669,0.391817],[5,0.822158,-0.239555],[4,0.832349,0.299744],[4,0.835913,0.364950],[5,0.835388,0.303330],[5,0.830473,-0.118532],[5,0.840017,0.374741],[4,0.836414,0.195253],[5,0.839155,0.305330],[4,0.829792,-0.314294],[4,0.816149,-0.664213],[5,0.836080,0.022656],[5,0.834796,-0.159547],[5,0.845838,0.381907],[5,0.852057,0.549123],[5,0.843614,0.263931],[5,0.836852,-0.243486],[5,0.849707,0.374177],[4,0.840767,-0.187501],[5,0.845539,0.073686],[5,0.844803,-0.003633],[4,0.845670,-0.003337],[5,0.849688,0.030940],[5,0.845701,-0.219617],[4,0.856548,0.338340],[5,0.856504,0.278669],[5,0.851474,-0.073574],[4,0.855679,0.152872],[5,0.852968,-0.001393],[5,0.852208,-0.122139],[4,0.853879,-0.068243],[5,0.855899,-0.007778],[3,0.855880,-0.020920],[4,0.856901,0.016114],[5,0.855868,-0.149237],[5,0.851819,-0.360797],[5,0.864758,0.309472],[5,0.857961,-0.090383],[5,0.877632,0.613607],[5,0.865991,0.269901],[5,0.867940,0.310277],[5,0.866106,0.158046],[4,0.867889,0.193809],[4,0.864840,0.027020],[5,0.861642,-0.173588],[5,0.868367,0.139421],[5,0.869388,0.151582],[5,0.874182,0.223073],[6,0.880107,0.378486],[5,0.865800,-0.373323],[5,0.874637,-0.030084],[5,0.878656,0.134852],[5,0.876641,0.015614],[4,0.875947,-0.009531],[5,0.870263,-0.336834],[5,0.862878,-0.564765],[5,0.881780,0.028737],[4,0.887561,0.288559],[4,0.885555,0.163706],[5,0.885646,0.149968],[5,0.881334,-0.184108],[4,0.884453,-0.063803],[5,0.890680,0.163221],[5,0.887405,-0.013893],[5,0.892161,0.125492],[5,0.902724,0.514248],[5,0.890667,-0.010089],[5,0.883177,-0.423705],[5,0.893625,0.032884],[5,0.892795,-0.012833],[5,0.898240,0.212916],[5,0.888056,-0.349343],[3,0.897005,0.086909],[5,0.897019,0.086917],[5,0.889103,-0.316639],[5,0.897340,0.089599],[5,0.896520,-0.052487],[4,0.896638,-0.052424],[5,0.897964,-0.047299],[5,0.899055,-0.042400],[5,0.904944,0.239378],[5,0.904613,0.149810],[4,0.903985,0.081253],[5,0.904653,0.096597],[5,0.897471,-0.296973],[5,0.902757,-0.052976],[5,0.910867,0.272560],[5,0.926172,0.645664],[5,0.888596,-0.627633],[5,0.908409,0.065906],[5,0.913552,0.260622],[5,0.915274,0.229921],[3,0.911313,-0.022693],[5,0.910847,-0.057431],[4,0.913065,0.035981],[5,0.907314,-0.255728],[4,0.911865,-0.063029],[6,0.914406,-0.031118],[4,0.921542,0.145295],[5,0.911233,-0.370978],[4,0.919386,-0.016955],[4,0.919721,-0.009851],[5,0.920728,0.002947],[5,0.915649,-0.292696],[4,0.926320,0.012870],[5,0.895458,-0.750021],[5,0.925328,-0.197766],[5,0.942791,0.533003],[5,0.940294,0.464464],[5,0.925409,-0.312114],[5,0.929908,-0.163375],[6,0.943829,0.138961],[5,0.944283,0.083288],[5,0.943107,0.010193],[5,0.945735,0.127112],[5,0.946631,0.155962],[5,0.947783,0.121896],[4,0.953848,0.355898],[5,0.940699,-0.289641],[5,0.948978,0.056382],[4,0.953188,0.217738],[5,0.951379,-0.035748],[4,0.955405,0.110852],[4,0.961649,0.337562],[3,0.963540,0.355578],[5,0.961348,0.249029],[5,0.957473,0.086355],[5,0.959307,0.125492],[5,0.958204,0.038620],[5,0.955655,-0.127070],[5,0.905010,-0.846100],[5,0.959384,0.017668],[5,0.956838,-0.203194],[5,0.978261,0.576051],[5,0.968510,0.304943],[4,0.977763,0.528433],[5,0.963022,-0.065701],[5,0.967257,0.124305],[4,0.971297,0.245736],[4,0.967545,0.016189],[5,0.966223,-0.079065],[4,0.956574,-0.533576],[5,0.978346,0.283929],[5,0.961005,-0.488909],[5,0.978183,0.174075],[5,0.968024,-0.340730],[4,0.970400,-0.303836],[6,0.977287,0.008450],[5,0.981932,0.177902],[5,0.956845,-0.660645],[5,0.977251,-0.103109],[5,0.980576,-0.040307],[5,0.967116,-0.544720],[5,0.984700,0.083179],[5,0.986241,0.100880],[5,0.997225,0.465505],[5,0.977884,-0.363555],[4,0.991289,0.230444],[5,0.983719,-0.202001],[4,0.980548,-0.335768],[5,0.984192,-0.280922],[5,0.977720,-0.494613],[5,0.995153,0.112244],[5,0.993071,0.016031],[5,1.004270,0.444203],[4,0.974589,-0.613881],[5,0.994893,0.004826],[5,1.007525,0.455298],[5,0.995957,-0.083606],[5,1.005118,0.277650],[4,1.000247,-0.026833],[5,0.994025,-0.404375],[5,0.958456,-0.829646],[4,1.008060,-0.092750],[5,1.015190,0.173543],[5,1.005571,-0.304887],[5,1.022311,0.393725],[5,1.003584,-0.479295],[5,1.014319,-0.233484],[5,1.018606,-0.058615],[5,1.029153,0.349047],[5,1.021924,0.047333],[5,1.021939,0.036306],[5,1.019111,-0.288375],[5,1.024067,-0.089623],[5,1.044545,0.565033],[5,1.029422,-0.036614],[4,1.027223,-0.131077],[5,1.020587,-0.415020],[5,1.024074,-0.320233],[5,1.028921,-0.204457],[5,1.026939,-0.265692],[5,1.057709,0.645918],[5,1.030839,-0.192685],[5,1.034144,-0.168830],[5,1.042517,0.196101],[5,1.031297,-0.308709],[5,1.043397,0.204482],[5,1.039902,0.021815],[5,1.033392,-0.337052],[5,1.039902,-0.198254],[5,1.034995,-0.385405],[5,1.042661,-0.127962],[5,1.051656,0.216392],[5,1.043694,-0.201400],[5,1.055323,0.293304],[5,1.053879,0.174443],[5,1.027230,-0.649900],[4,1.054033,0.141702],[5,1.047248,-0.241502],[5,1.070853,0.577340],[5,1.045397,-0.367468],[5,1.053151,-0.057224],[4,1.045975,-0.520218],[5,1.065248,0.157547],[4,1.081383,0.595118],[5,1.062589,-0.032661],[4,1.069457,0.263259],[5,1.066981,0.168745],[5,1.038866,-0.685269],[5,1.068350,0.121465],[5,1.069644,0.141814],[5,1.065877,-0.039887],[5,1.071196,0.109969],[5,1.070361,-0.004470],[5,1.070002,-0.042920],[5,1.074450,0.107506],[5,1.068342,-0.178777],[5,1.069051,-0.162651],[5,1.071188,-0.120290],[5,1.077588,0.086983],[5,1.072970,-0.146042],[5,1.078335,0.044537],[5,1.101203,0.570068],[5,1.080350,-0.147808],[6,1.075155,-0.356717],[5,1.077164,-0.341767],[5,1.099796,0.503518],[5,1.077816,-0.337052],[5,1.082875,-0.176029],[5,1.085794,-0.082129],[5,1.091643,0.128556],[5,1.086460,-0.184672],[5,1.089939,-0.068375],[4,1.091276,-0.025700],[5,1.089795,-0.309519],[5,1.098079,-0.103104],[5,1.131504,0.707195],[6,1.103854,0.110136],[5,1.094204,-0.307104],[4,1.114999,0.458765],[5,1.122523,0.534903],[5,1.124423,0.559078],[5,1.111449,-0.100961],[5,1.116566,0.061914],[5,1.110279,-0.226990],[5,1.116836,-0.008256],[5,1.110693,-0.331762],[5,1.105412,-0.535858],[5,1.108803,-0.489690],[5,1.123658,-0.013153],[5,1.144237,0.556167],[5,1.133122,0.272566],[5,1.127020,0.025383],[5,1.126475,0.002610],[5,1.126624,-0.002409],[5,1.140532,0.431553],[5,1.130095,-0.041582],[5,1.111725,-0.580625],[5,1.119061,-0.447083],[5,1.103991,-0.700001],[5,1.134402,-0.061464],[5,1.134402,-0.061464],[5,1.133388,-0.153612],[4,1.131131,-0.292230],[5,1.194291,0.809723],[5,1.133546,-0.290253],[5,1.141227,-0.088204],[5,1.125667,-0.554334],[5,1.152668,0.291044],[5,1.149380,0.101086],[5,1.117833,-0.696187],[5,1.147247,-0.108561],[5,1.144161,-0.247192],[5,1.149532,-0.071312],[5,1.151991,0.042400],[5,1.139370,-0.468851],[5,1.152321,-0.051260],[5,1.146405,-0.317787],[5,1.158519,0.124160],[5,1.179629,0.594714],[5,1.158672,-0.010649],[5,1.194591,0.723199],[5,1.153668,-0.287033],[5,1.166728,0.249533],[5,1.152169,-0.341369],[5,1.146851,-0.485855],[5,1.225220,0.832647],[5,1.179376,0.541346],[5,1.173689,0.348679],[5,1.167200,0.087386],[5,1.167046,0.007766],[5,1.159661,-0.327161],[5,1.150233,-0.562944],[4,1.165982,-0.203131],[5,1.163574,-0.293523],[5,1.173897,-0.045506],[5,1.184693,0.357961],[5,1.185541,0.363006],[5,1.172817,-0.164293],[5,1.167759,-0.332461],[5,1.183252,0.258470],[4,1.188230,0.388767],[5,1.174883,-0.116772],[4,1.165570,-0.498315],[4,1.180673,-0.160509],[5,1.177231,-0.334503],[5,1.180168,-0.289956],[5,1.190662,0.113785],[4,1.187950,-0.124076],[5,1.208166,0.409359],[5,1.190232,-0.272352],[5,1.197525,0.004322],[4,1.184527,-0.447534],[5,1.204532,0.155212],[5,1.202049,-0.080170],[4,1.225220,0.570871],[5,1.228444,0.544868],[4,1.213034,0.115949],[5,1.211184,0.034328],[5,1.217194,0.258346],[5,1.227970,0.399743],[5,1.233025,0.453509],[5,1.251287,0.669087],[5,1.215652,-0.277987],[5,1.226885,0.075078],[5,1.223875,-0.129842],[5,1.220565,-0.284797],[5,1.221335,-0.276844],[5,1.227487,-0.088431],[4,1.231212,0.070253],[5,1.228590,-0.126558],[5,1.232796,-0.078687],[5,1.266806,0.685847],[5,1.244240,0.292483],[5,1.236643,-0.011512],[5,1.223366,-0.492169],[5,1.250243,0.381676],[5,1.231359,-0.343641],[5,1.245028,0.142345],[5,1.263298,0.570952],[5,1.241935,-0.019829],[5,1.240217,-0.132937],[5,1.228745,-0.479826],[5,1.248343,0.117590],[5,1.231112,-0.526571],[5,1.254641,0.192217],[5,1.250615,-0.004719],[5,1.257172,0.208926],[5,1.248008,-0.150199],[5,1.248138,-0.283971],[5,1.245473,-0.430820],[4,1.250849,-0.309238],[5,1.261818,0.073262],[2,1.245621,-0.472854],[4,1.245166,-0.505379],[5,1.255512,-0.327142],[5,1.191991,-0.851271],[4,1.272171,0.115507],[5,1.264592,-0.167636],[5,1.283044,0.427301],[5,1.275977,0.225135],[4,1.265926,-0.178344],[5,1.270830,-0.009834],[5,1.285327,0.431754],[5,1.311253,0.710768],[4,1.289298,0.415176],[5,1.285761,0.302690],[5,1.274459,-0.179970],[5,1.282419,0.087105],[4,1.277775,-0.177554],[5,1.280575,-0.123170],[5,1.278676,-0.202919],[6,1.297628,0.344837],[5,1.254080,-0.712810],[5,1.288988,-0.218314],[4,1.281477,-0.452790],[5,1.573533,0.949296],[5,1.297062,0.031445],[5,1.304776,0.141242],[5,1.295006,-0.225487],[5,1.293955,-0.306796],[5,1.305553,-0.073496],[5,1.317530,0.214520],[5,1.317600,0.156198],[5,1.316794,0.134637],[5,1.318396,0.146545],[5,1.314709,-0.049977],[5,1.309711,-0.223666],[5,1.324077,0.261759],[5,1.322826,0.079916],[4,1.320519,-0.037010],[5,1.324838,0.095863],[5,1.326201,0.110351],[5,1.308290,-0.481294],[5,1.327567,-0.046490],[5,1.340341,0.310258],[5,1.302293,-0.673443],[5,1.337041,0.080333],[5,1.347555,0.305820],[5,1.327325,-0.387244],[5,1.326773,-0.400053],[4,1.326412,-0.461894],[5,1.322596,-0.567825],[5,1.343304,-0.098880],[5,1.350343,0.065290],[5,1.328883,-0.540131],[5,1.353685,0.139925],[5,1.283246,-0.830514],[5,1.347585,-0.211100],[5,1.346000,-0.372824],[4,1.374205,0.357269],[5,1.346634,-0.487384],[5,1.372505,0.238756],[4,1.365253,-0.036993],[4,1.356687,-0.360572],[5,1.385196,0.481578],[5,1.362051,-0.223811],[5,1.379163,0.213727],[5,1.372558,-0.002634],[5,1.365847,-0.244618],[5,1.401398,0.573140],[5,1.374447,-0.184283],[5,1.385079,0.141955],[5,1.377666,-0.230339],[5,1.368779,-0.455012],[5,1.400881,0.437305],[5,1.383478,-0.098503],[5,1.393560,0.220642],[5,1.379090,-0.330180],[5,1.378045,-0.368908],[5,1.392565,0.106126],[5,1.391220,0.027158],[5,1.390259,-0.034059],[5,1.390739,-0.087027],[5,1.355768,-0.706693],[5,1.412100,0.489146],[5,1.401635,0.248378],[4,1.379923,-0.432318],[4,1.504218,0.875609],[4,1.390707,-0.234110],[4,1.384135,-0.416086],[5,1.399729,0.069731],[5,1.386151,-0.410534],[5,1.394544,-0.240430],[5,1.418455,0.460636],[5,1.400127,-0.092625],[5,1.415207,0.372724],[5,1.397751,-0.274379],[5,1.403513,-0.136857],[5,1.395187,-0.378126],[5,1.393988,-0.433253],[4,1.393164,-0.448072],[4,1.405924,-0.206321],[4,1.405729,-0.248226],[5,1.397751,-0.493142],[5,1.405382,-0.347443],[5,1.407299,-0.330648],[5,1.403620,-0.432473],[5,1.436748,0.416547],[5,1.424000,0.023920],[5,1.426778,0.062413],[4,1.419375,-0.217659],[4,1.419605,-0.221275],[5,1.447340,0.523692],[5,1.420571,-0.236259],[4,1.416977,-0.332017],[5,1.424628,-0.144057],[5,1.415425,-0.403890],[5,1.419145,-0.332101],[5,1.418641,-0.356185],[5,1.441785,0.332273],[5,1.441135,0.180321],[5,1.434599,-0.125974],[5,1.441885,0.001546],[5,1.435278,-0.229870],[5,1.461511,0.486514],[5,1.455973,0.370627],[5,1.451444,0.222157],[5,1.444340,-0.052257],[4,1.443006,-0.167492],[5,1.432433,-0.488663],[5,1.458801,0.245975],[5,1.448297,-0.286026],[5,1.461625,0.102191],[5,1.451512,-0.247791],[5,1.451828,-0.288656],[5,1.459563,-0.142330],[4,1.466277,0.081126],[5,1.502831,0.680435],[5,1.462777,-0.120587],[5,1.467664,-0.050439],[5,1.459984,-0.284941],[5,1.475179,0.178642],[5,1.464720,-0.223689],[5,1.488577,0.447152],[5,1.480748,0.189358],[5,1.496134,0.462832],[5,1.482805,0.060654],[5,1.476530,-0.157172],[4,1.483701,0.078048],[5,1.475537,-0.204234],[5,1.473563,-0.307075],[5,1.491950,0.250422],[5,1.481596,-0.101196],[5,1.480574,-0.202177],[5,1.495275,0.248550],[5,1.471213,-0.477171],[5,1.482467,-0.260068],[4,1.495169,0.105163],[5,1.491751,-0.016628],[5,1.492572,-0.065991],[5,1.492150,-0.090361],[5,1.490133,-0.281618],[4,1.495593,-0.203674],[5,1.490227,-0.352275],[5,1.509451,0.150219],[3,1.491176,-0.396951],[5,1.511539,0.016708],[4,1.501624,-0.276969],[5,1.511527,-0.077655],[5,1.496558,-0.494785],[5,1.522414,0.138998],[5,1.519415,0.028720],[2,1.529616,0.285693],[5,1.500252,-0.513924],[5,1.545641,0.528973],[5,1.533594,0.276959],[5,1.520366,-0.171045],[5,1.519186,-0.219048],[5,1.527166,0.029429],[4,1.523790,-0.127427],[5,1.543745,0.426332],[4,1.525640,-0.197063],[5,1.527505,-0.207760],[5,1.527566,-0.207770],[5,1.524165,-0.328187],[5,1.553916,0.453342],[5,1.529482,-0.240188],[5,1.544126,0.051197],[5,1.466174,-0.825717],[5,1.540343,-0.127152],[5,1.558756,0.315765],[5,1.549307,-0.035891],[5,1.544902,-0.173648],[4,1.563393,0.311313],[4,1.537379,-0.493513],[5,1.571525,0.347693],[4,1.549975,-0.314997],[5,1.565737,0.155475],[5,1.578842,0.446606],[5,1.545259,-0.453938],[4,1.592643,0.562439],[4,1.560816,-0.238248],[4,1.560879,-0.238266],[5,1.577078,0.203621],[5,1.560142,-0.329720],[5,1.556937,-0.451528],[4,1.572611,-0.133993],[5,1.571399,-0.173276],[4,1.565587,-0.347340],[5,1.567646,-0.345689],[5,1.568150,-0.346875],[5,1.583857,0.118185],[5,1.581741,0.031642],[5,1.585312,0.124630],[6,1.569433,-0.340227],[5,1.600878,0.470925],[4,1.594999,0.257534],[5,1.621260,0.642676],[5,1.579274,-0.349544],[5,1.601228,0.228885],[5,1.591063,-0.234097],[4,1.596766,-0.253142],[5,1.594136,-0.325404],[5,1.592232,-0.415986],[5,1.621154,0.339624],[5,1.597993,-0.373227],[4,1.616954,0.162949],[5,1.604745,-0.218710],[5,1.601578,-0.325525],[5,1.618111,0.094249],[5,1.604771,-0.343771],[5,1.627902,0.300162],[5,1.616270,-0.059170],[5,1.615574,-0.127782],[3,1.610127,-0.344021],[5,1.612704,-0.307382],[5,1.617348,-0.343682],[5,1.625543,-0.199091],[5,1.631412,-0.106807],[5,1.627199,-0.349324],[5,1.628062,-0.430757],[5,1.640099,-0.220891],[5,1.645411,-0.151488],[4,1.634558,-0.435619],[5,1.649382,-0.080311],[5,1.641845,-0.317634],[5,1.644630,-0.298957],[5,1.663827,0.170262],[4,1.641791,-0.428325],[5,1.641603,-0.433337],[5,1.661814,0.015420],[5,1.640770,-0.536313],[5,1.662403,-0.121881],[5,1.686803,0.440684],[4,1.676656,0.237918],[5,1.661937,-0.186909],[5,1.641603,-0.580654],[5,1.651182,-0.471734],[5,1.670864,-0.047404],[5,1.666873,-0.130288],[5,1.733753,0.752433],[5,1.666433,-0.312473],[3,1.666062,-0.369671],[5,1.645384,-0.651839],[5,1.774578,0.831391],[4,1.669596,-0.352774],[5,1.673017,-0.328434],[5,1.694829,0.175282],[5,1.693633,0.077496],[5,1.668358,-0.513568],[4,1.673044,-0.462203],[4,1.675049,-0.446306],[5,1.682380,-0.323738],[5,1.706078,0.138674],[4,1.704955,-0.202361],[5,1.719250,0.145158],[5,1.688272,-0.546384],[5,1.743847,0.566320],[5,1.717683,0.019416],[4,1.711880,-0.271082],[5,1.705865,-0.398962],[5,1.708783,-0.405140],[5,1.700291,-0.583491],[5,1.713554,-0.420133],[5,1.724180,-0.206276],[5,1.740209,0.225293],[5,1.738950,0.152205],[4,1.716793,-0.458310],[4,1.730887,-0.161957],[5,1.745259,0.144594],[5,1.742834,0.042609],[5,1.723617,-0.416424],[5,1.712852,-0.580885],[5,1.727463,-0.357040],[4,1.742761,-0.012152],[4,1.751987,0.020374],[5,1.721986,-0.586983],[4,1.763168,0.247420],[5,1.728797,-0.584199],[5,1.746304,-0.337349],[5,1.739331,-0.511190],[4,1.734963,-0.619633],[5,1.759141,-0.291131],[5,1.756272,-0.376971],[5,1.777206,0.114979],[5,1.788434,0.200142],[5,1.769925,-0.293131],[4,1.808294,0.482414],[5,1.823356,0.557142],[5,1.801853,0.190594],[5,1.773869,-0.472596],[5,1.777130,-0.499759],[5,1.849589,0.680545],[5,1.797568,-0.181322],[5,1.791797,-0.416939],[5,1.827042,0.226343],[4,1.813615,-0.169541],[5,1.817818,-0.142756],[5,1.859500,0.536782],[5,1.829031,-0.121005],[5,1.814864,-0.452404],[5,1.818977,-0.405273],[4,1.817943,-0.438405],[4,1.834812,-0.113289],[5,1.837466,-0.067932],[5,1.820121,-0.444575],[5,1.852824,0.264740],[5,1.916250,0.777875],[5,1.818617,-0.532667],[4,1.813475,-0.592606],[4,1.835637,-0.360205],[4,1.836337,-0.393781],[5,1.833986,-0.450067],[4,1.854615,-0.138657],[5,1.841770,-0.431125],[5,1.899078,0.572370],[5,1.927873,0.731986],[4,1.856166,-0.323952],[5,1.860830,-0.328033],[5,1.863235,-0.320011],[4,1.861561,-0.367413],[5,1.857233,-0.434728],[5,1.913721,0.606901],[5,1.856893,-0.468392],[5,1.864975,-0.422770],[5,1.925440,0.551384],[5,1.904702,-0.110683],[5,1.873472,-0.611790],[5,1.921647,0.242089],[5,1.924568,0.183063],[5,1.903609,-0.319637],[5,1.926468,0.212759],[4,1.906285,-0.331293],[5,1.960583,0.500977],[5,1.934909,-0.177039],[5,1.903861,-0.644620],[5,1.940683,-0.154686],[4,1.935219,-0.296730],[5,1.934874,-0.329600],[5,1.955889,0.161357],[5,1.951021,-0.065923],[5,1.950305,-0.234069],[5,1.933323,-0.554001],[4,1.947112,-0.450365],[5,1.968800,-0.032746],[5,1.951231,-0.489071],[5,1.921101,-0.719966],[5,2.025237,0.665625],[5,1.988945,0.248342],[5,1.979574,0.018347],[5,1.983030,0.066108],[5,1.972369,-0.204848],[3,1.980307,-0.034102],[5,1.973900,-0.212977],[5,1.991868,0.110881],[5,1.983174,-0.131028],[5,1.988855,-0.034811],[5,1.972743,-0.391588],[5,1.991506,-0.109822],[5,1.982510,-0.385400],[5,1.978769,-0.484798],[5,2.012519,0.124652],[5,1.942383,-0.745377],[6,2.015020,-0.085276],[5,2.005561,-0.316391],[5,1.982457,-0.632183],[5,2.001404,-0.499547],[5,2.080207,0.638850],[5,2.044734,0.213296],[5,2.018097,-0.405656],[5,2.045713,0.159229],[5,2.017562,-0.444488],[4,2.021791,-0.411404],[5,2.060753,0.344487],[5,2.033126,-0.288251],[5,2.025125,-0.427897],[5,2.058371,0.180298],[5,2.044809,-0.172527],[5,1.997842,-0.701422],[5,2.081681,0.328971],[5,2.070039,0.041533],[5,2.073522,-0.018779],[5,2.051212,-0.500896],[5,2.069041,-0.352635],[5,2.134710,0.637325],[5,1.966108,-0.852786],[5,2.094778,0.057834],[5,2.090319,-0.069770],[5,2.124747,0.502962],[5,2.090436,-0.238635],[4,2.147115,0.628853],[5,2.109517,0.084460],[5,2.081641,-0.465714],[5,2.135902,0.495443],[5,2.124105,0.294334],[5,2.094994,-0.476654],[4,2.088641,-0.554413],[5,2.087823,-0.556878],[5,2.118745,-0.233213],[5,2.157005,0.422765],[4,2.116054,-0.393801],[5,2.133962,-0.200381],[4,2.144812,-0.109299],[5,2.112096,-0.611044],[4,2.140948,-0.263848],[5,2.148442,-0.366583],[5,2.137157,-0.503382],[4,2.165707,-0.140036],[5,2.144017,-0.499181],[5,2.151713,-0.416171],[3,2.152184,-0.431173],[3,2.148094,-0.497731],[5,2.148054,-0.498748],[5,2.184252,0.111115],[4,2.159474,-0.438105],[5,2.157869,-0.454909],[5,2.168524,-0.418420],[4,2.152061,-0.574574],[4,2.190161,-0.063209],[5,2.133398,-0.705251],[5,2.172491,-0.446266],[5,2.203848,0.088206],[5,2.173094,-0.499671],[4,2.174468,-0.499823],[5,2.190140,-0.464426],[4,2.199384,-0.390378],[5,2.220456,-0.017881],[5,2.205318,-0.336024],[5,2.232042,0.106074],[4,2.224776,-0.118780],[5,2.236182,-0.016557],[3,2.220283,-0.424904],[4,2.251763,0.050988],[5,2.226529,-0.423576],[5,2.237033,-0.426077],[4,2.229109,-0.540356],[5,2.264114,-0.030055],[5,2.318863,0.600412],[5,2.299110,0.401254],[5,2.302498,0.417412],[5,2.302131,0.383889],[5,2.270768,-0.294131],[5,2.273166,-0.262933],[5,2.268018,-0.367141],[5,2.307777,0.291228],[4,2.269919,-0.417366],[5,2.308054,0.252396],[5,2.294023,-0.062715],[6,2.277388,-0.384765],[5,2.280203,-0.429935],[5,2.364812,0.632221],[5,2.330997,0.273376],[5,2.310863,-0.351411],[5,2.294502,-0.550136],[5,2.280495,-0.659291],[6,2.331746,-0.047460],[5,2.308698,-0.448989],[5,2.351026,0.248656],[5,2.218883,-0.831756],[5,2.367812,0.420689],[5,2.363135,0.365964],[5,2.354805,0.101806],[5,2.325394,-0.440227],[5,2.344562,-0.160544],[5,2.369398,0.295362],[4,2.349081,-0.246381],[5,2.324928,-0.581478],[5,2.373806,0.134519],[5,2.363997,-0.146859],[5,2.378712,0.136817],[5,2.344444,-0.520185],[3,2.342296,-0.584876],[4,2.360480,-0.495573],[5,2.407426,0.290703],[4,2.452643,0.669817],[5,2.395443,-0.141722],[4,2.369831,-0.568419],[5,2.383708,-0.451237],[5,2.435250,0.289131],[5,2.397502,-0.437250],[4,2.415555,-0.376412],[5,2.475191,0.512649],[5,2.455604,0.216689],[5,2.443818,-0.004213],[5,2.405328,-0.566736],[5,2.455733,0.063773],[5,2.434417,-0.382507],[5,2.497044,0.450785],[5,2.425605,-0.588620],[5,2.440425,-0.489768],[5,2.545049,0.660297],[5,2.431324,-0.683227],[4,2.514965,0.348747],[4,2.506096,0.044467],[3,2.477499,-0.435827],[4,2.577931,0.663577],[4,2.552873,0.483469],[5,2.538674,0.264717],[5,2.534539,0.093366],[4,2.586826,0.618983],[5,2.552546,0.304607],[5,2.551508,0.236658],[5,2.560876,0.194792],[4,2.539433,-0.229566],[5,2.550116,-0.075097],[5,2.558131,-0.108261],[5,2.556156,-0.161325],[5,2.582247,0.276977],[5,2.564728,-0.076838],[4,2.500784,-0.707239],[4,2.493023,-0.734610],[5,2.570499,-0.271368],[5,2.672428,0.739233],[5,2.645433,0.594032],[5,2.636039,0.396107],[5,2.604721,-0.174058],[5,2.589430,-0.412865],[6,2.599719,-0.356663],[5,2.597520,-0.430501],[5,2.671630,0.540037],[5,2.613778,-0.400109],[4,2.677974,0.509766],[3,2.592851,-0.604634],[5,2.661132,0.311787],[5,2.660986,0.131132],[5,2.632085,-0.438330],[5,2.641831,-0.405507],[5,2.620914,-0.570557],[5,2.646568,-0.396205],[5,2.701902,0.432917],[5,2.656116,-0.340452],[5,2.365675,-0.927032],[5,2.644678,-0.526902],[5,2.687034,-0.055497],[4,2.667729,-0.349901],[5,2.686914,-0.076460],[4,2.670210,-0.338611],[5,2.718530,0.318796],[5,2.694766,-0.127868],[5,2.681484,-0.406727],[5,2.691674,-0.358065],[4,2.678243,-0.549088],[5,2.779922,0.539561],[5,2.712380,-0.477523],[5,2.739169,-0.139067],[4,2.743255,-0.104883],[5,2.723481,-0.482994],[4,2.756517,-0.083584],[5,2.697682,-0.683298],[4,2.775581,-0.230551],[5,2.700152,-0.765864],[5,2.700756,-0.763655],[5,2.782336,-0.385817],[4,2.765233,-0.605677],[5,2.792892,-0.424964],[5,2.782050,-0.526292],[4,2.808423,-0.257071],[5,2.851562,-0.044688],[5,2.825773,-0.596698],[5,2.917990,0.420375],[4,2.890002,-0.197496],[5,2.899688,-0.053030],[4,3.102692,0.859018],[5,2.852591,-0.600270],[5,2.869627,-0.502719],[5,2.913671,0.079199],[5,2.914258,0.071578],[4,2.928019,-0.024167],[5,2.929308,-0.183070],[5,2.961179,0.302446],[4,2.930041,-0.324450],[5,3.052585,0.729286],[5,2.978746,0.316287],[4,3.043345,0.698002],[5,2.953878,-0.136780],[5,2.920414,-0.604108],[5,2.885926,-0.721252],[5,2.987817,0.084990],[4,2.987493,0.098929],[5,2.914742,-0.658151],[5,2.947736,-0.482528],[4,2.988288,-0.010341],[5,2.978675,-0.285536],[5,2.978926,-0.322172],[5,2.954160,-0.558442],[5,2.996069,-0.170935],[4,3.051049,0.488287],[5,3.008961,-0.118507],[3,2.971904,-0.543344],[5,2.995670,-0.370401],[5,3.015076,-0.186384],[4,3.056418,0.360232],[5,3.020109,-0.202215],[5,3.044764,-0.051664],[5,3.069932,0.323090],[5,3.026859,-0.455778],[5,3.035861,-0.479713],[5,3.094098,0.278844],[5,2.980147,-0.741053],[5,3.158733,0.665307],[4,3.042524,-0.568419],[5,3.101688,0.144438],[5,3.105593,0.059724],[5,3.132510,0.366341],[5,3.100760,-0.224412],[4,3.134713,0.040593],[4,3.096675,-0.459475],[5,3.226655,0.690336],[5,3.244338,0.729914],[5,3.105438,-0.505888],[5,3.124586,-0.395838],[5,3.179008,-0.125728],[5,3.210301,0.279939],[5,3.220648,0.361578],[4,3.155981,-0.592907],[4,3.202836,-0.208834],[5,3.259529,0.267710],[4,3.226490,-0.211786],[5,3.188769,-0.554122],[5,3.196787,-0.545894],[5,3.264016,0.122976],[6,3.215489,-0.522944],[5,3.336566,0.544403],[4,3.276006,-0.247192],[5,3.263296,-0.508335],[5,3.327019,0.058610],[5,3.332866,0.103428],[5,3.332996,0.015583],[5,3.391970,0.424692],[3,3.302956,-0.606907],[5,3.335993,-0.411710],[3,3.351807,-0.637953],[5,3.416090,-0.336404],[5,3.429498,-0.421725],[5,3.484068,0.216164],[4,3.472493,-0.130291],[5,3.450448,-0.434132],[5,3.468273,-0.426473],[4,3.478249,-0.430127],[5,3.464628,-0.570688],[5,3.456890,-0.609747],[5,3.537313,0.052043],[5,3.597247,0.464396],[5,3.679976,0.738334],[4,3.551812,-0.230247],[5,3.643720,0.547691],[4,3.571665,-0.167427],[5,3.540902,-0.478550],[5,3.554436,-0.417119],[5,3.619166,0.078113],[5,3.571217,-0.468901],[5,3.658049,0.374437],[5,3.675012,0.109029],[5,3.727551,0.540832],[5,3.719173,0.264634],[4,3.739010,0.070314],[5,3.765272,0.286024],[5,3.825882,0.193919],[5,3.887874,0.508335],[5,3.798266,-0.582257],[5,3.868396,-0.159294],[5,3.878930,-0.215162],[4,3.906239,-0.114507],[5,3.944302,-0.438657],[5,3.979635,-0.150715],[4,4.007243,0.087466],[5,3.755912,-0.872581],[5,4.091497,-0.073508],[4,4.046049,-0.485693],[5,4.090463,-0.112310],[5,4.134030,0.338500],[5,4.037411,-0.647118],[5,4.122879,-0.073596],[5,4.062278,-0.595518],[5,4.111193,-0.381013],[5,4.067757,-0.683219],[5,4.197763,0.040292],[5,4.156311,-0.555000],[5,4.237108,-0.367391],[5,4.221247,-0.479477],[5,4.224808,-0.485100],[5,4.341846,0.261510],[5,4.226591,-0.654045],[5,4.420859,0.638400],[5,4.354803,0.208028],[5,4.361782,0.225097],[5,4.360910,0.120378],[5,4.311089,-0.395044],[5,4.385720,0.204416],[5,4.402850,-0.070530],[6,4.485078,0.449385],[5,4.560434,0.684041],[6,4.535050,0.511912],[4,4.498398,0.171569],[6,4.477411,-0.109765],[5,4.440513,-0.380546],[3,4.509620,0.174892],[5,4.447605,-0.532941],[5,5.009727,0.904397],[4,4.492769,-0.520893],[5,4.468248,-0.633107],[5,4.523705,-0.442086],[5,4.614215,0.376168],[4,4.711283,0.644040],[4,4.553628,-0.532191],[5,4.659869,0.304853],[4,4.621602,-0.380363],[5,4.711873,0.303047],[5,4.676611,-0.035568],[5,5.089792,0.877881],[5,4.768711,0.076811],[4,4.653107,-0.660652],[5,4.755107,-0.560902],[4,4.724644,-0.753987],[5,4.851019,-0.519209],[4,4.882796,-0.550196],[4,5.063511,0.531491],[5,5.033462,0.353384],[5,4.997890,-0.264805],[5,5.003944,-0.273636],[5,4.963731,-0.626961],[5,5.085099,-0.119139],[5,5.135976,0.290332],[4,5.336477,0.777260],[5,5.156367,0.124000],[4,5.219394,0.368181],[4,5.106674,-0.506402],[5,5.142057,-0.414895],[5,5.236908,0.315189],[4,5.046614,-0.726449],[5,5.178326,-0.410322],[5,5.340979,0.543891],[4,5.087250,-0.742958],[5,5.201993,-0.434846],[6,5.192523,-0.561942],[5,5.268093,-0.210234],[5,5.317782,0.060756],[5,5.332943,0.075631],[5,5.344417,-0.359655],[5,5.431221,-0.107136],[4,5.477394,-0.243889],[4,5.499462,-0.117335],[5,5.417835,-0.572296],[5,5.606526,0.505885],[4,5.580113,0.286519],[5,5.608769,0.343449],[5,5.492199,-0.562704],[4,5.570547,-0.148350],[5,5.532941,-0.545856],[5,5.804859,0.680152],[4,5.582335,-0.567883],[5,5.815351,0.645894],[5,5.599108,-0.563665],[4,5.621542,-0.527277],[5,5.902041,0.688259],[5,5.684941,-0.638304],[5,5.953549,0.545208],[5,5.899046,0.233862],[5,5.939803,0.426576],[5,5.929395,0.205164],[5,5.924012,0.041455],[6,6.062395,0.667060],[4,5.837460,-0.630542],[5,5.871580,-0.568261],[5,6.128851,0.274340],[5,5.964035,-0.627893],[4,5.984992,-0.624397],[5,5.808645,-0.835882],[5,6.174897,0.166368],[5,6.176033,0.124509],[5,6.214264,-0.152098],[5,6.163532,-0.631136],[5,6.182304,-0.628069],[5,6.222198,-0.540215],[4,6.213115,-0.629530],[5,6.374646,-0.017096],[5,6.334921,-0.283804],[5,6.427761,0.092285],[6,6.321787,-0.576410],[5,6.078498,-0.846108],[5,6.471277,-0.086194],[5,6.610728,0.538244],[5,6.631272,0.569465],[5,6.525663,-0.077804],[5,6.441171,-0.569506],[5,6.601479,-0.026993],[5,6.845514,0.698309],[5,6.852135,0.515972],[4,6.894584,0.395827],[5,6.742974,-0.545676],[5,6.843424,-0.177576],[5,6.868212,-0.018582],[5,6.928457,-0.120641],[5,7.001177,0.306062],[5,7.086201,0.301031],[4,7.072078,0.219404],[5,6.865230,-0.709616],[5,7.082479,0.006431],[5,6.949544,-0.598803],[5,7.118189,0.054029],[5,7.035904,-0.583380],[5,7.245113,-0.474460],[5,7.528058,0.368228],[6,7.538139,0.325817],[5,7.627254,0.419602],[5,7.498605,-0.303224],[5,7.534145,-0.143691],[5,7.704833,0.356204],[5,7.620594,-0.123522],[4,7.668135,0.031579],[5,7.594480,-0.402070],[4,7.615657,-0.386126],[4,7.692562,0.053295],[4,7.837191,-0.021686],[5,8.035390,-0.098963],[5,8.087459,-7.272205e-6],[6,8.221445,0.346685],[4,8.296424,0.064107],[5,8.221445,-0.441878],[5,8.279201,-0.323036],[4,8.344689,-0.242790],[5,8.442639,-0.242736],[5,8.594034,0.017067],[4,8.535097,-0.605909],[5,8.655427,-0.390271],[5,8.582338,-0.711688],[5,8.918414,0.218568],[5,9.007131,0.327907],[5,8.903222,-0.250074],[5,9.065441,0.396003],[5,8.874413,-0.600233],[5,9.110733,-0.290219],[5,9.625786,-0.456792],[4,9.635673,-0.581050],[5,9.769551,-0.407809],[5,9.667166,-0.626930],[5,9.879104,-6.084412e-4],[5,9.937539,0.070457],[5,9.856573,-0.501108],[5,9.826330,-0.572930],[4,10.199560,0.204320],[5,10.353431,0.116654],[5,10.553901,0.460756],[4,10.544915,-0.031877],[5,10.700991,0.017547],[4,10.930473,0.282303],[4,11.185942,0.346139],[5,11.127100,0.014404],[5,11.225531,-0.631959],[4,12.303464,0.398785],[5,12.485046,-0.165369],[5,12.432790,-0.326509],[5,12.406804,-0.540466],[5,12.719803,0.012285],[5,13.063831,0.100080],[5,12.772106,-0.729970],[5,13.437474,0.530037],[5,13.302170,0.144604],[5,13.257018,-0.325528],[5,13.280855,-0.341867],[5,13.346317,-0.624539],[5,13.694435,-0.590400],[5,13.932955,-0.108252],[5,13.777200,-0.500326],[4,14.272317,0.024929],[5,14.800167,0.598230],[5,14.796974,0.357431],[5,14.567838,-0.390629],[5,15.104739,0.135323],[5,15.077296,-0.216786],[5,15.526075,0.395658],[4,15.419412,-0.026217],[5,15.507596,0.162051],[5,16.555335,0.590015],[5,16.215341,-0.570878],[5,16.241284,-0.571730],[5,16.508436,-0.261070],[5,16.510476,-0.261050],[5,16.826760,-0.068414],[5,16.832967,-0.368288],[5,16.895254,-0.278144],[5,17.357415,-0.369781],[5,17.862982,0.026709],[5,18.104801,0.147639],[5,18.376613,0.518187],[5,17.950700,-0.294613],[4,18.143145,-0.512432],[5,19.118399,0.691436],[5,18.277387,-0.457167],[5,18.479380,-0.438683],[5,19.321753,0.247300],[5,19.022879,-0.441487],[5,19.557309,-0.301632],[4,19.867559,-0.007189],[5,19.381802,-0.589659],[5,19.920922,-0.592380],[5,20.414539,-0.442588],[5,21.149371,0.400230],[5,21.264064,0.071103],[5,20.934757,-0.598800],[5,21.472082,-0.115721],[4,23.151000,-0.312851],[5,23.840672,0.188525],[5,24.174393,0.307656],[5,23.747855,-0.509180],[4,23.976010,-0.601930],[5,24.859571,0.284349],[5,24.537393,-0.394876],[5,25.079762,-0.291470],[5,26.139749,0.658690],[5,27.689348,-0.336442],[5,27.801532,-0.606688],[4,31.138961,0.072192],[5,32.114396,-0.421285],[5,35.051733,0.527556],[4,33.976743,-0.591143],[4,33.989518,-0.368924],[5,36.134857,-0.550850],[4,38.140908,0.178297],[5,37.919859,0.072082],[4,38.962673,-0.659562],[5,40.358719,0.125302],[5,40.741454,-0.237769],[5,44.472521,0.314643],[4,44.429350,-0.622303],[5,48.006460,-0.608600],[5,51.131491,-0.046575],[4,51.757224,-0.415989],[5,55.174658,-0.275774],[5,58.521607,-0.542817],[5,86.616209,-0.228239],[5,92.627393,0.073820],[5,91.608101,-0.616153],[5,105.977188,0.137397],[5,105.814412,-0.253753],[5,113.829585,0.538428],[5,196.581530,-0.606204],[5,262.416523,-0.535265],[5,380.380646,-0.628992],[5,648.632446,0.297804],[5,8866.437285,0.031909],[5,-617.994227,-0.091412],[4,-524.834951,0.057783],[5,-537.147824,-0.173259],[5,-276.401900,0.325324],[5,-216.883821,0.394369],[4,-151.522605,-0.616561],[5,-125.234933,-0.388217],[5,-107.175134,0.189486],[4,-106.101473,-0.614789],[5,-92.564592,-0.588682],[5,-87.276638,0.794095],[4,-66.601993,-0.632339],[5,-58.533927,-0.772427],[4,-56.675823,-0.473353],[5,-55.587273,-0.452492],[5,-51.514999,-0.407340],[5,-51.447215,-0.376187],[5,-47.304303,0.016562],[5,-45.571150,0.050718],[5,-41.416818,-0.208933],[6,-41.661658,0.864853],[5,-38.661199,0.229676],[5,-37.701166,0.181207],[5,-37.055746,-0.612210],[5,-37.567357,0.804256],[5,-34.141545,-0.353423],[5,-34.116087,0.089794],[5,-32.629201,-0.421634],[5,-30.560403,-0.183932],[5,-30.260844,0.702811],[5,-28.630350,0.130754],[5,-28.411179,0.370509],[4,-28.037029,0.212057],[5,-27.764996,0.296796],[5,-26.192155,0.500665],[5,-26.167113,0.258033],[4,-24.850508,-0.624906],[5,-24.535145,-0.006869],[5,-24.117080,-0.522154],[5,-24.326490,0.769555],[5,-23.121792,0.455559],[5,-22.533389,0.236569],[4,-22.509365,0.028915],[4,-22.110405,0.156531],[5,-21.886473,-0.118937],[3,-21.443572,-0.582026],[5,-21.972331,0.552757],[5,-20.858353,-0.535911],[5,-20.704172,-0.668455],[5,-20.632503,-0.678419],[5,-20.068053,-0.550619],[4,-20.350933,0.229454],[5,-19.604863,-0.220235],[5,-19.413401,-0.319263],[5,-19.283746,-0.353245],[4,-19.061273,0.483012],[5,-18.174414,-0.101666],[5,-18.053548,-0.317087],[5,-18.277387,0.540444],[5,-17.714073,0.354301],[4,-17.267757,-0.614272],[1,-17.207059,-0.613995],[4,-17.260152,-0.481813],[5,-17.044397,-0.294600],[6,-16.702670,-0.622314],[5,-16.661055,-0.565679],[5,-16.596424,0.528498],[5,-16.133236,-0.354525],[5,-15.832984,0.230066],[5,-15.543661,0.213549],[5,-15.309058,-0.537597],[5,-15.401185,0.184401],[5,-15.109745,-0.209791],[5,-15.280028,0.558947],[4,-15.200295,0.689868],[5,-14.758676,0.217735],[5,-14.449414,-0.570666],[5,-14.226318,-0.739983],[5,-14.332122,-0.618892],[5,-14.036582,-0.121537],[5,-13.628922,-0.112435],[5,-13.544598,-0.082671],[5,-13.597785,0.298564],[5,-13.182244,-0.410877],[4,-13.126555,0.200084],[5,-13.022156,0.161758],[5,-13.020316,0.193306],[5,-12.792442,-0.374102],[4,-13.171454,0.700493],[5,-12.699113,-0.362686],[5,-12.432210,-0.050937],[5,-12.570031,0.571395],[5,-12.370867,0.150249],[3,-12.129738,-0.450898],[5,-12.129738,-0.241361],[5,-11.917010,0.016186],[6,-11.802648,-0.160624],[5,-11.707023,-0.271902],[4,-11.650564,-0.069887],[5,-11.687972,0.185903],[4,-11.466065,-0.363846],[5,-11.046004,-0.425974],[5,-11.076489,-0.114068],[4,-10.897700,-0.573700],[3,-10.972244,-0.012649],[4,-10.912982,0.089560],[5,-10.895516,0.059469],[5,-10.668741,-0.613504],[4,-10.731315,-0.453757],[6,-10.590813,-0.533682],[5,-10.472815,-0.013762],[5,-10.383411,-0.252332],[4,-10.011712,-0.588823],[5,-10.155055,0.356859],[4,-10.123733,0.418722],[5,-10.014651,0.067062],[4,-9.849455,-0.537194],[5,-9.850160,0.083445],[5,-9.767111,-0.299211],[5,-9.792760,0.145683],[5,-9.653112,0.610173],[5,-9.427291,-0.245600],[5,-9.600313,0.659256],[5,-9.337315,0.123869],[5,-9.385007,0.581079],[5,-9.263507,0.245181],[5,-8.297456,-0.918313],[5,-8.956647,-0.496268],[4,-9.006245,-0.305725],[5,-9.098222,0.339619],[5,-8.898255,-0.581193],[5,-8.785978,-0.360819],[4,-8.828537,0.245073],[5,-8.599201,-0.520040],[5,-8.550691,-0.581180],[4,-8.591035,-0.455129],[4,-8.538855,-0.365739],[5,-8.477747,-0.581744],[5,-9.297721,0.891250],[5,-9.275522,0.891167],[4,-8.561482,0.187551],[4,-8.347013,-0.567463],[4,-8.356273,-0.544966],[5,-8.353181,-0.544859],[6,-8.400023,-0.102004],[4,-8.393520,-0.083435],[5,-8.297707,-0.405569],[5,-8.244948,-0.393062],[5,-8.067937,-0.729015],[5,-8.151695,-0.541105],[5,-8.302789,0.436854],[5,-7.989628,-0.479104],[5,-8.143360,0.347402],[5,-8.222194,0.642464],[5,-8.101481,0.510619],[4,-7.736137,0.153105],[5,-7.639755,-0.033277],[4,-7.560696,0.275305],[5,-7.519888,-0.029405],[5,-7.606225,0.656842],[5,-7.450016,0.150549],[4,-7.503386,0.535817],[4,-7.166030,-0.461294],[6,-7.374352,0.620150],[5,-7.141553,-0.181578],[4,-6.867513,-0.450085],[5,-6.835433,-0.379750],[4,-6.801764,-0.465310],[5,-6.924355,0.322980],[5,-6.751256,-0.575728],[5,-6.910506,0.416962],[5,-6.859639,0.186723],[5,-6.857190,0.199965],[5,-6.727459,-0.503600],[5,-6.679528,-0.640835],[4,-6.774201,0.245852],[5,-6.701490,-0.094002],[5,-6.637494,-0.078565],[4,-6.587404,-0.204525],[5,-6.572746,0.087684],[5,-6.520281,-0.090386],[5,-6.516332,0.148100],[5,-6.326252,-0.699452],[5,-6.498209,0.154177],[5,-6.390731,-0.386199],[5,-6.492079,0.349204],[5,-6.368897,-0.397633],[4,-6.288002,-0.576429],[5,-6.116116,-0.816266],[5,-6.241900,-0.652226],[4,-6.308999,-0.342406],[5,-6.308559,-0.142308],[5,-6.192017,-0.473765],[5,-6.265233,0.101189],[5,-6.123248,-0.562136],[4,-6.119468,-0.566963],[5,-6.124925,-0.175704],[5,-6.080151,-0.455269],[4,-6.164244,0.365480],[5,-6.096488,0.099211],[5,-5.977363,-0.175814],[5,-6.013368,0.372445],[5,-5.905698,-0.282086],[5,-5.878679,-0.403817],[5,-5.914319,0.082427],[5,-5.876482,0.119911],[4,-5.849853,0.047768],[4,-5.854725,0.369638],[4,-5.789003,-0.161171],[5,-5.784618,0.306666],[5,-5.801331,0.462932],[5,-5.626052,-0.495839],[5,-5.602526,-0.433573],[5,-5.648461,0.365458],[4,-5.486880,-0.588907],[5,-5.511528,-0.489711],[5,-5.551278,0.018216],[5,-5.518954,0.045013],[4,-5.394971,-0.631390],[5,-5.460761,-0.156017],[5,-5.440882,-0.043000],[5,-5.315759,-0.630773],[5,-5.359405,-0.045093],[3,-5.399461,0.519698],[5,-5.323429,0.211229],[5,-5.259011,-0.361553],[5,-5.255263,-0.010406],[5,-5.209143,-0.378846],[4,-5.316184,0.520434],[5,-5.222370,-0.111353],[5,-5.249857,0.424763],[4,-5.177511,-0.140306],[5,-5.060796,-0.478747],[4,-5.118911,0.120826],[5,-5.258698,0.731773],[4,-5.043824,-0.206010],[5,-5.072626,0.094689],[5,-4.468016,-0.929031],[5,-5.117629,0.576720],[5,-5.208529,0.819130],[4,-4.917077,-0.054646],[5,-4.882522,-0.255759],[5,-4.868293,-0.134877],[5,-4.862550,-0.088939],[4,-4.800768,0.031940],[5,-4.772425,-0.115831],[5,-4.801294,0.524439],[4,-4.766120,0.336367],[5,-4.728890,-0.047124],[4,-4.783861,0.455896],[5,-4.644637,-0.597207],[5,-4.649731,-0.405481],[5,-4.664250,-0.235422],[5,-4.635217,-0.428893],[5,-4.655415,0.218157],[4,-4.632031,0.327768],[5,-4.572037,-0.263845],[5,-4.502261,-0.631892],[6,-4.510941,-0.465779],[5,-4.519573,-0.364483],[5,-4.530506,0.094053],[5,-4.645623,0.716487],[5,-4.418544,-0.563324],[5,-4.430814,-0.515696],[5,-4.533796,0.497725],[5,-4.479481,0.175927],[5,-4.462841,0.198874],[5,-4.436747,-0.076094],[6,-4.377858,-0.540337],[4,-4.476571,0.517041],[5,-4.378664,-0.377879],[5,-4.345894,-0.384540],[5,-4.372293,0.030885],[5,-4.387189,0.315192],[5,-4.441942,0.634894],[5,-4.310161,-0.142135],[5,-4.262894,-0.231935],[4,-4.219811,-0.481619],[5,-4.249409,-0.108870],[5,-4.208147,-0.327352],[5,-4.187023,-0.468960],[5,-4.179758,-0.469723],[5,-4.237524,0.374766],[5,-4.233736,0.349253],[5,-4.188506,-0.157132],[5,-4.217076,0.228132],[5,-4.390211,0.810715],[5,-4.205836,0.349634],[5,-4.222274,0.514291],[5,-3.879103,-0.879544],[5,-4.018621,-0.692450],[5,-4.139628,0.279113],[4,-4.091625,-0.159584],[4,-4.097761,0.187724],[5,-4.402185,0.880882],[5,-4.018747,-0.433766],[5,-4.007800,-0.496531],[5,-4.096014,0.594809],[5,-4.042575,0.312082],[5,-3.947676,-0.502659],[5,-3.908370,-0.670105],[4,-4.018560,0.309974],[5,-3.953895,-0.321682],[5,-3.965967,0.157783],[4,-4.032071,0.633681],[5,-3.967549,0.255343],[5,-3.894624,-0.489474],[5,-3.912396,-0.013117],[6,-3.847661,-0.517293],[5,-3.942918,0.506545],[5,-3.855433,-0.430590],[4,-3.810136,-0.621073],[5,-3.850595,0.009168],[5,-3.846973,0.244623],[5,-3.780896,-0.221440],[5,-3.755363,-0.470244],[5,-3.703915,-0.652745],[6,-3.776008,0.128541],[5,-3.776564,0.191629],[5,-3.731997,-0.221788],[5,-3.688881,0.077777],[5,-3.656010,-0.244051],[5,-3.623169,-0.534102],[5,-3.524727,-0.081453],[6,-3.442492,-0.482393],[4,-3.433260,-0.503375],[5,-3.489425,0.402549],[5,-3.479153,0.460562],[4,-3.407541,-0.143228],[4,-3.419779,0.222534],[5,-3.341825,-0.505857],[5,-3.355326,-0.242490],[5,-3.368835,0.021029],[5,-3.297852,-0.543925],[5,-3.331061,-0.007378],[5,-3.304081,-0.382237],[5,-3.254508,-0.656724],[4,-3.463210,0.803266],[5,-3.320359,0.113577],[5,-3.300532,0.088372],[5,-3.286188,-0.160181],[5,-3.374141,0.692852],[5,-3.269068,0.166552],[5,-3.175017,-0.592259],[4,-3.266645,0.480915],[5,-3.233641,0.133991],[5,-3.204759,-0.164796],[5,-3.195564,-0.229173],[5,-3.186172,-0.334630],[4,-3.163770,-0.536045],[4,-3.193201,-0.117217],[4,-3.220608,0.320193],[5,-3.167699,-0.394504],[4,-3.154588,-0.416128],[5,-3.189256,0.113972],[5,-3.182689,-0.019773],[4,-3.177557,0.143273],[4,-3.109583,-0.559562],[5,-3.116308,-0.313255],[5,-3.052622,-0.676990],[6,-3.082105,-0.500508],[4,-3.098448,-0.247047],[5,-3.091945,0.073844],[5,-3.077341,0.072063],[5,-3.059277,-0.219922],[5,-3.007899,-0.647197],[5,-3.073387,0.050832],[5,-3.006037,-0.425860],[5,-3.022467,0.169379],[4,-2.984934,-0.263200],[5,-2.919203,-0.670924],[4,-2.984322,-0.019445],[5,-2.973694,-0.060291],[5,-2.942881,-0.417506],[5,-2.938565,-0.461209],[5,-2.949251,0.007233],[5,-2.921177,-0.352839],[5,-2.975090,0.464659],[5,-2.872820,-0.520548],[5,-2.873660,-0.495099],[4,-2.999010,0.777023],[5,-2.893099,0.196736],[5,-2.833241,-0.379037],[5,-2.893644,0.524987],[5,-2.817725,-0.427003],[4,-2.849969,0.265565],[5,-2.809554,-0.366063],[5,-2.797987,-0.425854],[5,-2.850368,0.459613],[1,-2.754925,-0.587113],[5,-2.780778,0.161054],[5,-2.781255,0.400396],[5,-2.728507,-0.326222],[5,-2.780398,0.509781],[5,-2.769326,0.408137],[5,-2.734353,0.118660],[4,-2.733983,0.144265],[5,-2.733890,0.144260],[4,-2.726207,0.120378],[4,-2.717066,0.071344],[5,-2.715635,0.102110],[5,-2.651875,-0.611311],[5,-2.688440,-0.221671],[4,-2.657170,-0.317141],[4,-2.684915,0.235724],[5,-2.679254,0.368514],[5,-2.631048,-0.439397],[5,-2.621800,-0.491883],[4,-2.639426,-0.225754],[5,-2.637486,-0.204843],[5,-2.592571,-0.656800],[5,-2.648112,0.006259],[4,-2.652693,0.149133],[5,-2.657170,0.240771],[5,-2.620713,-0.347169],[5,-2.637718,0.132824],[5,-2.615743,-0.227418],[5,-2.609398,-0.231672],[5,-2.605796,-0.236817],[5,-2.582972,-0.214853],[5,-2.582860,-0.124103],[5,-2.386967,-0.888275],[4,-2.566714,-0.248959],[5,-2.529204,-0.622566],[5,-2.560135,-0.140516],[5,-2.571938,0.255043],[5,-2.582972,0.425671],[5,-2.567129,0.211753],[4,-2.554706,-0.020066],[5,-2.576681,0.452784],[5,-2.563324,0.337236],[5,-2.524879,-0.342409],[4,-2.548615,0.168249],[5,-2.344774,-0.885321],[5,-2.481683,-0.578679],[5,-2.411286,-0.797722],[5,-2.501206,-0.218421],[5,-2.496492,-0.299068],[5,-2.463730,-0.610173],[5,-2.547770,0.569163],[5,-2.500468,-0.104207],[5,-2.470611,-0.496510],[5,-2.257447,-0.912925],[5,-2.479055,-0.304355],[5,-2.466819,-0.443965],[5,-2.463190,-0.099898],[5,-2.471670,0.126740],[5,-2.452464,-0.189092],[4,-2.456806,-0.037947],[5,-2.451113,-0.001461],[5,-2.456627,0.143998],[5,-2.434418,-0.246153],[5,-2.469140,0.462367],[5,-2.430796,-0.097558],[5,-2.423405,0.039882],[5,-2.396203,-0.344897],[4,-2.399787,-0.074478],[5,-2.419960,0.356725],[4,-2.450680,0.648570],[5,-2.394538,-0.024046],[5,-2.383173,-0.249889],[5,-2.344419,-0.625253],[5,-2.387430,-0.001226],[5,-2.370384,-0.292831],[5,-2.565860,0.877160],[4,-2.383149,0.221768],[4,-2.371660,0.018252],[4,-2.339939,-0.435342],[5,-2.337140,-0.374553],[5,-2.392752,0.579731],[5,-2.368748,0.317274],[4,-2.349507,0.239594],[5,-2.307662,-0.456657],[4,-2.358856,0.441620],[5,-2.319814,-0.276562],[5,-2.279437,-0.662942],[5,-2.318816,-0.142828],[5,-2.297078,-0.369751],[5,-2.290930,-0.392578],[5,-2.335566,0.446809],[4,-2.309457,0.220497],[5,-2.323671,0.515656],[5,-2.270991,-0.352082],[5,-2.255742,-0.524411],[5,-2.294410,0.233637],[5,-2.291748,0.222689],[5,-2.268508,-0.233929],[5,-2.215806,-0.701241],[5,-2.246564,-0.453026],[4,-2.235200,-0.409116],[4,-2.243116,-0.174452],[5,-2.245092,0.167125],[5,-2.221363,-0.232648],[4,-2.211902,-0.282209],[5,-2.186626,-0.587915],[5,-2.195611,-0.446004],[5,-2.182365,-0.588545],[4,-2.173552,-0.620153],[5,-2.193454,-0.378777],[5,-2.218603,0.284744],[5,-2.204616,0.043131],[5,-2.213638,0.260146],[5,-2.189445,-0.198000],[5,-2.196606,0.003248],[5,-2.159062,-0.583140],[4,-2.171264,-0.269342],[5,-2.157519,-0.371780],[5,-2.163743,-0.004026],[5,-2.211687,0.666244],[5,-2.164095,0.181485],[5,-2.152921,0.015406],[5,-2.118645,-0.444473],[5,-2.122663,-0.448555],[5,-2.106311,-0.585019],[5,-2.130816,-0.050874],[5,-2.142777,0.264361],[5,-2.131944,0.006242],[5,-2.070385,-0.678441],[5,-2.180438,0.724197],[5,-2.143448,0.487285],[5,-2.122582,0.295586],[5,-2.098074,-0.108364],[4,-2.094211,-0.090322],[4,-2.080904,-0.351504],[5,-2.055404,-0.631336],[5,-2.112851,0.359838],[5,-2.105935,0.270642],[5,-1.887874,-0.907783],[5,-2.112871,0.601421],[5,-2.058237,-0.332343],[5,-2.112652,0.616906],[5,-2.075644,0.135454],[5,-2.069867,0.308938],[5,-2.034452,-0.432042],[5,-2.047393,-0.146921],[5,-2.043096,0.016077],[5,-2.020312,-0.145968],[5,-2.051932,0.585175],[5,-1.999004,-0.173364],[5,-2.017470,0.372225],[5,-1.995648,-0.148137],[5,-1.983676,-0.364623],[5,-1.995159,-0.010353],[5,-2.008066,0.372884],[5,-1.977287,-0.249763],[4,-1.982044,-0.088055],[5,-1.979198,-0.080311],[4,-1.963810,-0.413790],[5,-1.960477,-0.408061],[5,-2.017488,0.627403],[5,-1.901593,-0.782437],[3,-1.975360,0.092217],[5,-1.933064,-0.491765],[5,-1.970574,0.354216],[5,-1.957398,0.087576],[5,-1.921579,-0.576284],[5,-1.957452,0.141598],[5,-1.943685,-0.204740],[5,-1.938796,-0.185484],[5,-1.970344,0.508667],[5,-1.932203,-0.170052],[5,-1.963122,0.516476],[5,-1.943425,0.367466],[4,-1.918103,-0.210897],[4,-1.908883,-0.410753],[4,-2.012116,0.800427],[5,-1.946485,0.515131],[5,-1.938813,0.432715],[6,-1.927445,0.331073],[5,-1.927360,0.331065],[5,-1.935685,0.470813],[5,-1.894280,-0.338724],[4,-1.901224,-0.173439],[5,-1.902802,0.112587],[5,-1.945250,0.690927],[5,-1.901576,0.162536],[5,-1.877003,-0.382057],[5,-1.880000,-0.137630],[5,-1.880429,0.021951],[5,-1.880842,0.291623],[5,-1.892213,0.491636],[5,-1.867029,0.047569],[5,-1.853938,-0.312255],[5,-1.860182,-0.015748],[4,-1.856780,0.064255],[5,-1.821675,-0.500865],[5,-1.848609,0.123805],[5,-1.823152,-0.454798],[5,-1.812306,-0.521186],[6,-1.839648,0.120912],[5,-1.832734,-0.033336],[5,-1.855456,0.525843],[5,-1.836289,0.250780],[4,-1.813569,-0.228584],[5,-1.854615,0.608002],[5,-1.845289,0.524751],[5,-1.820012,0.019169],[5,-1.772061,-0.682192],[5,-1.816223,0.132838],[5,-1.810936,-0.026976],[4,-1.810889,0.185138],[5,-1.771655,-0.579420],[4,-1.811200,0.321618],[5,-1.791720,-0.177832],[4,-1.789182,-0.224692],[5,-1.766594,-0.582981],[5,-1.786573,-0.217423],[5,-1.786268,-0.212356],[4,-1.787228,-0.147038],[5,-1.779628,-0.223926],[4,-1.797799,0.388393],[5,-1.776480,-0.170780],[5,-1.771986,-0.233312],[5,-1.741089,-0.637533],[5,-1.801482,0.529770],[5,-1.780370,0.179125],[5,-1.759394,-0.305388],[5,-1.755366,-0.326705],[5,-1.779870,0.395308],[5,-1.752535,-0.185186],[5,-1.769354,0.343809],[5,-1.771910,0.389543],[5,-1.756360,0.126457],[4,-1.747955,-0.125260],[5,-1.744509,-0.220151],[4,-1.736378,-0.381307],[5,-1.729204,-0.145290],[5,-1.681433,-0.731900],[5,-1.741148,0.331143],[2,-1.736393,0.230135],[5,-1.725148,-0.073535],[4,-1.751499,0.517794],[4,-1.701636,-0.551748],[5,-1.724642,0.038656],[5,-1.721294,0.156759],[4,-1.702728,-0.350219],[5,-1.722967,0.299097],[5,-1.703238,-0.229630],[4,-1.712195,0.201675],[5,-1.692493,-0.342991],[5,-1.694547,-0.099575],[4,-1.694547,-0.099575],[5,-1.713941,0.497664],[4,-1.707885,0.424852],[5,-1.703409,0.331024],[4,-1.685518,-0.174545],[4,-1.675921,-0.332677],[5,-1.679972,-0.208969],[5,-1.670271,-0.332224],[3,-1.674136,-0.182354],[5,-1.653556,-0.553561],[4,-1.669183,-0.184153],[5,-1.663237,-0.233872],[5,-1.667518,-0.111686],[5,-1.658305,-0.209690],[5,-1.667367,0.086536],[5,-1.648949,-0.301402],[5,-1.663663,0.149869],[5,-1.660447,0.074612],[5,-1.656234,0.030154],[5,-1.654561,0.055723],[5,-1.637499,-0.375075],[5,-1.649233,-0.030264],[5,-1.639603,-0.262497],[4,-1.656316,0.329661],[5,-1.620904,-0.526580],[5,-1.566314,-0.819470],[5,-1.621668,-0.505921],[4,-1.620099,-0.516476],[5,-1.678111,0.672102],[5,-1.629735,-0.253201],[3,-1.604707,-0.621060],[4,-1.631851,-0.088052],[5,-1.630879,-0.074729],[5,-1.701721,0.792499],[5,-1.591885,-0.673764],[5,-1.634786,0.207952],[5,-1.601669,-0.553308],[5,-1.613057,-0.296321],[5,-1.606137,-0.438680],[5,-1.633451,0.329025],[5,-1.621853,0.043845],[5,-1.617177,-0.103670],[5,-1.633504,0.387617],[5,-1.594767,-0.507450],[4,-1.592477,-0.467033],[5,-1.603277,-0.073167],[5,-1.610636,0.304381],[5,-1.604394,0.165623],[4,-1.582621,-0.255025],[5,-1.575025,-0.390626],[5,-1.566515,-0.522120],[5,-1.594549,0.260017],[5,-1.573129,-0.276447],[5,-1.577217,-0.130520],[5,-1.641281,0.779565],[4,-1.564884,-0.214102],[5,-1.551200,-0.461770],[5,-1.551089,-0.403135],[5,-1.590627,0.574503],[5,-1.611591,0.745309],[5,-1.575848,0.456127],[5,-1.570301,0.361093],[4,-1.554127,0.008981],[5,-1.539706,-0.356015],[4,-1.507486,-0.701306],[5,-1.535986,-0.340095],[4,-1.553953,0.276309],[5,-1.535009,-0.265189],[5,-1.552018,0.303815],[5,-1.551051,0.302904],[5,-1.511156,-0.625574],[5,-1.538541,0.060707],[5,-1.528257,-0.207519],[5,-1.528269,-0.207509],[5,-1.509021,-0.561170],[4,-1.529495,0.123079],[5,-1.509081,-0.336337],[5,-1.529592,0.338421],[5,-1.490802,-0.596517],[5,-1.556079,0.688688],[5,-1.536767,0.522842],[5,-1.512806,-0.066402],[5,-1.541459,0.597263],[5,-1.498693,-0.426983],[5,-1.466482,-0.713135],[5,-1.506783,0.005803],[5,-1.498150,-0.127666],[4,-1.495145,-0.222747],[5,-1.484690,-0.382032],[4,-1.486883,-0.312465],[5,-1.506249,0.382679],[5,-1.456733,-0.643163],[5,-1.492655,0.180641],[5,-1.487992,0.196149],[4,-1.468122,-0.404485],[5,-1.478417,0.048218],[4,-1.478347,0.100589],[5,-1.510954,0.684304],[5,-1.484038,0.420344],[5,-1.452461,-0.392488],[4,-1.452461,-0.317752],[5,-1.479576,0.586970],[5,-1.452574,-0.020289],[5,-1.418981,-0.678274],[5,-1.527299,0.823807],[5,-1.438565,-0.397934],[5,-1.434222,-0.336707],[5,-1.453740,0.430805],[5,-1.453706,0.497495],[5,-1.453457,0.497758],[5,-1.419310,-0.453231],[5,-1.417130,-0.462612],[5,-1.416551,-0.297603],[5,-1.423879,0.036840],[4,-1.417765,-0.156079],[5,-1.441449,0.531883],[4,-1.436481,0.454971],[5,-1.415655,-0.175647],[5,-1.384835,-0.663263],[5,-1.416879,0.010307],[5,-1.397665,-0.500244],[5,-1.417513,0.239312],[5,-1.397364,-0.372291],[5,-1.386832,-0.560068],[5,-1.380653,-0.558210],[5,-1.384008,-0.357827],[5,-1.402843,0.306101],[4,-1.422075,0.632041],[5,-1.393089,0.138274],[5,-1.390164,0.075036],[5,-1.377814,0.045817],[4,-1.393592,0.540494],[5,-1.380621,0.386257],[4,-1.364867,-0.094378],[5,-1.354128,-0.376179],[5,-1.366472,0.116246],[5,-1.361812,0.063333],[5,-1.339111,-0.553276],[3,-1.349359,-0.344498],[4,-1.368601,0.424303],[5,-1.355035,0.010612],[5,-1.340941,-0.394422],[5,-1.359779,0.266141],[5,-1.338979,-0.381926],[4,-1.339193,-0.387495],[5,-1.336433,-0.388666],[5,-1.407786,0.802788],[5,-1.342703,-0.180068],[5,-1.352934,0.218550],[5,-1.333247,-0.375388],[5,-1.324167,-0.490803],[5,-1.305799,-0.690734],[5,-1.345469,0.283929],[5,-1.335542,-0.053754],[4,-1.339111,0.088942],[6,-1.343477,0.439145],[5,-1.333570,0.184965],[5,-1.319930,-0.298677],[5,-1.313281,-0.473136],[5,-1.322237,-0.204815],[5,-1.330847,0.162263],[5,-1.302617,-0.516104],[6,-1.300569,-0.452019],[5,-1.303460,-0.222536],[5,-1.302293,-0.221595],[5,-1.299611,-0.324284],[5,-1.284864,-0.501166],[4,-1.326874,0.638724],[5,-1.292226,-0.288102],[4,-1.297004,-0.036864],[5,-1.277574,-0.551030],[5,-1.297540,0.200112],[5,-1.280825,-0.345814],[5,-1.293810,0.301616],[5,-1.289705,0.226327],[4,-1.275213,-0.306902],[4,-1.284961,0.123599],[5,-1.281929,0.119289],[5,-1.266570,-0.336804],[5,-1.271125,-0.007783],[4,-1.272038,0.111645],[5,-1.266778,0.195142],[5,-1.255775,-0.154890],[5,-1.252724,-0.271727],[5,-1.227806,-0.664356],[5,-1.272314,0.514705],[5,-1.272324,0.514705],[5,-1.242056,-0.409696],[5,-1.236836,-0.454400],[5,-1.247088,-0.092092],[5,-1.256984,0.324295],[5,-1.233410,-0.359105],[5,-1.248454,0.371670],[5,-1.232347,0.092637],[5,-1.216761,-0.301425],[5,-1.215265,-0.350135],[5,-1.216608,-0.236415],[5,-1.216671,-0.127960],[5,-1.220384,0.126240],[5,-1.195950,-0.573800],[5,-1.207388,-0.293015],[5,-1.180734,-0.701812],[5,-1.210252,0.010564],[4,-1.209803,-0.003885],[5,-1.196764,-0.431018],[4,-1.181300,-0.671599],[5,-1.214752,0.210211],[5,-1.198109,-0.405343],[5,-1.231907,0.611294],[5,-1.202307,-0.215175],[5,-1.197295,-0.315200],[5,-1.133006,-0.851957],[4,-1.205977,0.297162],[6,-1.201925,0.152289],[5,-1.199084,0.095095],[4,-1.204122,0.337427],[5,-1.176468,-0.554426],[5,-1.170754,-0.611171],[5,-1.175437,-0.537603],[5,-1.198065,0.256970],[5,-1.200299,0.352267],[5,-1.169238,-0.585214],[5,-1.174641,-0.439680],[5,-1.190091,0.158896],[5,-1.190891,0.226620],[5,-1.176477,-0.336736],[5,-1.186995,0.217116],[5,-1.188274,0.291168],[5,-1.174165,-0.250654],[5,-1.169730,-0.405676],[5,-1.189898,0.426957],[5,-1.160557,-0.473056],[5,-1.182677,0.363717],[5,-1.167235,-0.189328],[5,-1.171056,0.077409],[5,-1.156172,-0.422865],[5,-1.154397,-0.473021],[5,-1.182519,0.503172],[5,-1.170280,0.203091],[5,-1.168137,0.143221],[5,-1.150570,-0.490947],[5,-1.172515,0.336019],[5,-1.147104,-0.522450],[4,-1.157327,-0.044418],[6,-1.152270,-0.265373],[5,-1.161034,0.148715],[4,-1.157924,0.036146],[5,-1.156375,0.177054],[5,-1.133363,-0.542058],[5,-1.156622,0.312383],[5,-1.146178,0.002884],[5,-1.156792,0.447950],[5,-1.162154,0.577912],[5,-1.138293,-0.009272],[4,-1.133197,-0.212217],[5,-1.124728,-0.375612],[5,-1.133504,0.023779],[5,-1.135658,0.278813],[5,-1.193778,0.841129],[5,-1.131156,0.253108],[5,-1.122876,-0.050174],[5,-1.116925,-0.292246],[5,-1.123461,0.169646],[5,-1.122096,0.143367],[5,-1.116607,-0.098420],[5,-1.103555,-0.466945],[5,-1.117400,0.083855],[5,-1.100463,-0.515036],[5,-1.124736,0.376309],[4,-1.129417,0.522611],[5,-1.102829,-0.136726],[5,-1.130468,0.676223],[4,-1.101661,-0.070969],[5,-1.100150,-0.095640],[5,-1.103241,0.215385],[5,-1.085248,-0.434002],[5,-1.115537,0.599376],[5,-1.107563,0.451365],[5,-1.077777,-0.334069],[5,-1.083982,0.055145],[5,-1.081896,0.140113],[4,-1.075046,-0.191513],[4,-1.105986,0.684176],[5,-1.069090,-0.391180],[5,-1.079554,0.217707],[5,-1.105040,0.732637],[5,-1.084813,0.485768],[5,-1.075374,0.215548],[4,-1.055808,-0.247760],[5,-1.072423,0.507347],[5,-1.055562,-0.129219],[5,-1.042471,-0.505270],[5,-1.037378,-0.579265],[5,-1.057778,0.155677],[4,-1.048384,-0.283945],[4,-1.043762,-0.364865],[4,-1.082086,0.728529],[5,-1.081951,0.728637],[5,-1.051878,0.181420],[5,-1.037581,-0.371623],[5,-1.050011,0.227403],[5,-1.034505,-0.313373],[5,-1.034046,-0.309711],[5,-1.042873,0.261619],[5,-1.040939,0.197247],[5,-1.048858,0.474632],[5,-1.029273,-0.314294],[5,-1.026910,-0.312925],[5,-1.032866,0.011388],[5,-1.024499,-0.310186],[5,-1.029954,0.053295],[4,-1.014105,-0.407504],[5,-1.029662,0.364049],[5,-1.014511,-0.249933],[5,-1.016202,-0.138872],[4,-1.009667,-0.381024],[5,-1.016246,0.005849],[5,-1.020186,0.231327],[5,-1.014083,-0.035636],[5,-1.018289,0.198587],[5,-1.012859,5.793524e-4],[5,-1.004694,-0.333221],[5,-1.003993,-0.270317],[4,-1.000902,-0.210879],[5,-1.047125,0.794905],[5,-1.001695,-0.042099],[4,-1.006552,0.269721],[4,-0.997893,-0.032214],[6,-1.005666,0.327698],[4,-0.998851,0.038141],[4,-0.999752,0.147228],[5,-0.991714,-0.201458],[5,-0.785575,-0.959063],[4,-0.992378,0.011391],[5,-0.987633,-0.215132],[5,-1.021225,0.726609],[5,-0.997356,0.298244],[5,-1.000275,0.419349],[5,-0.993483,0.190717],[5,-0.952030,-0.779760],[5,-0.986636,-0.071507],[5,-0.986643,-0.071510],[5,-0.983240,-0.215847],[5,-0.989647,0.183837],[6,-0.979101,-0.323968],[4,-0.978325,-0.264024],[5,-0.972478,-0.325109],[5,-0.970633,-0.398198],[5,-0.970633,-0.398198],[5,-0.946583,-0.749071],[5,-0.973632,-0.072767],[5,-0.973079,-0.041487],[5,-0.955474,-0.600887],[5,-0.974021,0.196363],[4,-0.965337,-0.253570],[5,-0.974893,0.288924],[5,-0.966504,-0.150826],[4,-0.968615,0.076365],[5,-0.969808,0.273212],[5,-0.956894,-0.274775],[5,-0.966427,0.231800],[5,-0.966427,0.231764],[5,-0.952730,-0.377461],[5,-0.967883,0.398571],[5,-0.965534,0.328796],[5,-0.961978,0.176734],[5,-0.959119,0.034862],[5,-0.957710,0.027231],[5,-0.954487,0.029016],[4,-0.950112,-0.209831],[5,-0.943959,-0.377231],[5,-0.933814,-0.613467],[5,-0.957361,0.329425],[5,-0.999331,0.839161],[5,-1.136274,0.948434],[5,-0.949995,0.300460],[4,-0.949366,0.281137],[5,-0.939616,-0.191782],[5,-0.955092,0.512680],[5,-0.933011,-0.406125],[5,-0.927936,-0.531970],[5,-0.935721,-0.182887],[5,-0.935721,-0.179820],[5,-0.901979,-0.767939],[5,-0.879584,-0.842567],[5,-0.927659,-0.152788],[6,-0.928911,-0.026248],[4,-0.924175,-0.240471],[5,-0.933957,0.385461],[5,-0.941130,0.629699],[5,-0.923871,0.159560],[5,-0.919714,0.063437],[5,-0.915742,-0.139043],[5,-0.919634,0.216628],[5,-0.907102,-0.350752],[5,-0.910787,-0.166086],[5,-0.935442,0.684148],[4,-0.912851,0.029480],[5,-0.916859,0.264828],[4,-0.915134,0.194030],[5,-0.904818,-0.331390],[5,-0.902453,-0.327220],[5,-0.899206,-0.405146],[5,-0.912518,0.266629],[5,-0.912258,0.257407],[5,-0.903555,-0.105234],[5,-0.907758,0.206046],[5,-0.905996,0.105359],[4,-0.901754,-0.078123],[5,-0.905089,0.156834],[5,-0.896363,-0.275039],[5,-0.910149,0.457009],[5,-0.889019,-0.446452],[4,-0.895085,-0.181204],[5,-0.865762,-0.753082],[5,-0.893919,0.070206],[5,-0.899495,0.359107],[5,-0.885405,-0.266232],[5,-0.877188,-0.548880],[5,-0.882969,-0.354074],[4,-0.871690,-0.604171],[5,-0.892612,0.266349],[5,-0.887808,0.001711],[5,-0.877246,-0.437100],[4,-0.900766,0.563477],[5,-0.884803,0.054107],[5,-0.877825,-0.127940],[5,-0.876211,-0.164911],[4,-0.870219,-0.423599],[5,-0.878199,-0.017326],[5,-0.872816,-0.296110],[5,-0.869529,-0.399038],[5,-0.869159,-0.421976],[5,-0.867921,-0.361046],[5,-0.878540,0.211335],[5,-0.871440,-0.161989],[4,-0.892592,0.644006],[5,-0.871478,-0.094491],[4,-0.863545,-0.386996],[5,-0.863996,-0.351431],[5,-0.872842,0.148814],[5,-0.869478,-0.008753],[5,-0.866526,-0.130459],[5,-0.861794,-0.296371],[5,-0.862066,-0.212853],[5,-0.862986,-0.130353],[5,-0.866342,0.209065],[5,-0.866106,0.273139],[5,-0.857709,-0.096088],[5,-0.857065,0.160203],[4,-0.867086,0.543470],[5,-0.855943,0.208961],[5,-0.861863,0.491558],[5,-0.852333,0.079777],[5,-0.841935,-0.444285],[5,-0.851625,0.058289],[5,-0.846911,-0.188931],[5,-0.844647,-0.208045],[5,-0.840650,-0.395787],[5,-0.848061,-0.002700],[5,-0.851743,0.300669],[5,-0.843234,-0.185807],[5,-0.825729,-0.631576],[5,-0.877948,0.803258],[5,-0.839068,-0.068090],[4,-0.819043,-0.635493],[5,-0.848217,0.607133],[6,-0.839545,0.489852],[4,-0.823152,-0.321468],[5,-0.820849,-0.360873],[4,-0.826090,-0.072341],[5,-0.821311,-0.221796],[5,-0.807510,-0.638024],[5,-0.821293,0.017978],[5,-0.824849,0.286052],[5,-0.815786,-0.197934],[5,-0.818951,0.048031],[5,-0.829362,0.526565],[5,-0.810711,-0.367988],[5,-0.822938,0.360150],[5,-0.822938,0.360148],[5,-0.814412,-0.088587],[5,-0.821397,0.340373],[5,-0.815307,-0.008392],[4,-0.816761,0.236963],[5,-0.804535,-0.422522],[5,-0.811652,-0.049826],[5,-0.804080,-0.398290],[5,-0.823225,0.589610],[5,-0.803775,-0.179250],[5,-0.803721,-0.051644],[5,-0.814424,0.498451],[5,-0.806574,0.170292],[5,-0.793828,-0.430619],[5,-0.799093,-0.085503],[5,-0.803427,0.294437],[5,-0.803009,0.291954],[5,-0.794462,0.189180],[5,-0.788330,-0.188587],[4,-0.787735,-0.201135],[5,-0.817841,0.754725],[5,-0.785798,-0.137010],[4,-0.784388,-0.200467],[5,-0.780296,-0.390995],[5,-0.796921,0.498309],[5,-0.815689,0.773360],[4,-0.798283,0.570255],[5,-0.782985,-0.143894],[5,-0.772167,-0.579686],[5,-0.781250,-0.205030],[5,-0.778917,-0.337930],[5,-0.789303,0.334320],[5,-0.787558,0.248488],[4,-0.785692,0.200228],[5,-0.783190,0.057793],[4,-0.791075,0.473855],[4,-0.780431,0.036685],[5,-0.776582,-0.182239],[5,-0.785263,0.379892],[5,-0.780922,0.159326],[4,-0.777561,-0.051061],[5,-0.785563,0.454248],[5,-0.776809,0.022128],[5,-0.755283,-0.684141],[5,-0.777684,0.295277],[5,-0.773428,0.152671],[5,-0.769420,-0.112526],[5,-0.771558,0.121957],[5,-0.770468,0.119441],[5,-0.774171,0.346927],[5,-0.778653,0.552200],[4,-0.786928,0.717213],[5,-0.768165,0.232988],[5,-0.779787,0.640240],[5,-0.753702,-0.477174],[4,-0.767274,0.288120],[5,-0.758829,-0.220293],[5,-0.755968,-0.346802],[5,-0.762865,0.233548],[5,-0.757294,-0.032290],[5,-0.766536,0.471989],[5,-0.752124,-0.277765],[5,-0.755140,0.015874],[5,-0.762347,0.434135],[3,-0.751219,-0.192041],[5,-0.764822,0.527890],[5,-0.733638,-0.679914],[5,-0.743591,-0.448360],[5,-0.750275,-0.035195],[4,-0.745314,-0.335209],[5,-0.391971,-0.981949],[5,-0.747800,-0.137518],[5,-0.750258,0.284333],[5,-0.743421,0.096917],[5,-0.739021,-0.169945],[5,-0.744562,0.214845],[5,-0.750411,0.502911],[5,-0.744602,0.255162],[5,-0.733353,-0.382788],[5,-0.741898,0.291489],[5,-0.742321,0.325887],[5,-0.736595,0.053049],[5,-0.738510,0.492338],[5,-0.722455,-0.230010],[5,-0.709350,-0.657644],[5,-0.724283,-0.069395],[5,-0.717707,-0.416191],[5,-0.722356,-0.107597],[5,-0.727320,0.279989],[5,-0.724505,0.190348],[5,-0.720852,0.020018],[4,-0.714808,-0.224045],[5,-0.727626,0.541365],[6,-0.716446,0.178157],[5,-0.715484,0.132394],[5,-0.715632,0.187435],[5,-0.715225,0.272878],[5,-0.711593,0.042215],[4,-0.707924,-0.166921],[4,-0.712580,0.188864],[5,-0.711823,0.127612],[4,-0.720161,0.550948],[5,-0.736040,0.789193],[5,-0.707330,0.101534],[5,-0.701291,-0.319346],[5,-0.707624,0.203684],[5,-0.704959,0.009471],[6,-0.710476,0.434803],[5,-0.698144,-0.198028],[5,-0.690975,-0.514190],[5,-0.701329,0.108411],[5,-0.698426,-0.047297],[5,-0.698274,-0.007786],[4,-0.689789,-0.412167],[5,-0.694214,-0.161143],[5,-0.692567,-0.002203],[4,-0.714775,0.744773],[5,-0.699335,0.550269],[5,-0.690986,0.233282],[5,-0.683855,-0.261498],[5,-0.683193,-0.217199],[5,-0.682489,-0.212212],[5,-0.682921,-0.121871],[5,-0.675137,-0.513106],[4,-0.698036,0.645873],[4,-0.686874,0.264411],[5,-0.684169,0.104614],[5,-0.679854,-0.192358],[5,-0.680285,-0.132123],[5,-0.677873,-0.265549],[5,-0.687468,0.397827],[5,-0.664456,-0.680031],[5,-0.682548,0.174515],[4,-0.679222,0.002954],[5,-0.679594,0.114146],[5,-0.680174,0.177206],[5,-0.679349,0.175349],[5,-0.670078,-0.398411],[5,-0.680391,0.327988],[5,-0.673408,0.025577],[5,-0.668588,-0.239945],[5,-0.671286,0.017021],[5,-0.671497,0.219577],[5,-0.670173,0.128065],[5,-0.676313,0.491200],[5,-0.659076,-0.500608],[5,-0.666087,-0.024342],[5,-0.657627,-0.416996],[5,-0.665798,0.249006],[5,-0.663885,0.236548],[5,-0.655186,-0.364313],[4,-0.662602,0.310059],[5,-0.664015,0.469569],[5,-0.652135,-0.092417],[5,-0.649319,-0.219124],[5,-0.653815,0.174288],[4,-0.647217,-0.220629],[5,-0.652985,0.262933],[5,-0.656586,0.458495],[5,-0.646139,-0.160452],[5,-0.653488,0.388002],[4,-0.646645,-0.061403],[4,-0.647171,-0.011226],[5,-0.654599,0.479513],[5,-0.644538,-0.125457],[5,-0.646696,0.098697],[5,-0.643874,-0.040579],[4,-0.660756,0.695809],[5,-0.645413,0.144661],[5,-0.647449,0.411098],[4,-0.648038,0.468658],[5,-0.636707,-0.207350],[5,-0.639547,0.047139],[5,-0.634859,-0.005420],[5,-0.638784,0.392080],[5,-0.641105,0.520277],[5,-0.629373,-0.141643],[5,-0.634507,0.419591],[5,-0.626209,-0.135827],[5,-0.629225,0.103575],[5,-0.608542,-0.733275],[5,-0.628688,0.290779],[5,-0.631517,0.471900],[5,-0.625733,0.228772],[5,-0.618758,-0.285882],[5,-0.625627,0.381593],[4,-0.617728,-0.174178],[4,-0.624030,0.338038],[5,-0.619829,0.066536],[5,-0.604588,-0.567998],[4,-0.617532,0.303134],[5,-0.606128,-0.440606],[5,-0.613371,0.225211],[5,-0.614412,0.348310],[5,-0.610697,0.103479],[5,-0.623934,0.691619],[5,-0.609868,0.168618],[5,-0.599001,-0.520246],[5,-0.601325,-0.362729],[5,-0.604488,-0.094207],[5,-0.603754,0.091143],[5,-0.600266,-0.167746],[4,-0.605129,0.295398],[4,-0.603630,0.199910],[5,-0.605124,0.351395],[5,-0.604960,0.369908],[5,-0.600781,0.221623],[5,-0.596972,-0.027185],[5,-0.604940,0.498451],[5,-0.581172,-0.689388],[5,-0.594534,-0.074963],[5,-0.585807,-0.564637],[5,-0.600905,0.435097],[5,-0.600504,0.444517],[5,-0.593087,-0.071919],[4,-0.594204,0.073974],[5,-0.592734,0.002387],[4,-0.589515,-0.233622],[5,-0.593407,0.215471],[5,-0.576235,-0.661251],[4,-0.586266,-0.241648],[5,-0.592562,0.334557],[5,-0.597036,0.548886],[5,-0.588981,0.146193],[5,-0.588345,0.100023],[5,-0.571913,-0.661185],[4,-0.589451,0.349085],[5,-0.583328,-0.136017],[4,-0.580398,-0.232666],[4,-0.590132,0.492482],[5,-0.583894,0.147570],[5,-0.577772,-0.312401],[5,-0.572285,-0.570113],[5,-0.585431,0.367611],[5,-0.576579,-0.341423],[5,-0.575011,-0.415369],[5,-0.576366,-0.302907],[4,-0.589270,0.564001],[5,-0.577961,-0.087122],[5,-0.581332,0.277170],[5,-0.579752,0.204373],[5,-0.577190,0.154063],[5,-0.579266,0.422130],[5,-0.577582,0.335010],[5,-0.574498,0.074822],[5,-0.571614,-0.119569],[4,-0.569643,-0.246639],[4,-0.567045,-0.343750],[4,-0.574150,0.247045],[5,-0.581784,0.619231],[5,-0.572285,0.219866],[5,-0.571479,0.221127],[4,-0.564832,-0.287278],[5,-0.573400,0.467420],[5,-0.567867,0.162865],[5,-0.567213,0.140820],[5,-0.564659,-0.006191],[5,-0.565374,0.063598],[5,-0.566858,0.266982],[5,-0.565475,0.150075],[4,-0.556059,-0.497283],[5,-0.573067,0.634877],[5,-0.564041,0.288811],[5,-0.562441,0.176247],[4,-0.569180,0.672904],[5,-0.557478,0.209042],[5,-0.558985,0.324654],[5,-0.554223,-0.005919],[5,-0.559367,0.500389],[5,-0.561326,0.600807],[5,-0.545222,-0.325895],[4,-0.550247,0.333040],[5,-0.547035,0.239194],[5,-0.536429,-0.492554],[5,-0.541736,-0.110555],[5,-0.543520,0.238315],[5,-0.542922,0.235274],[5,-0.539481,-0.008809],[5,-0.533697,-0.240381],[4,-0.536541,0.133406],[5,-0.544138,0.601794],[4,-0.539289,0.432902],[5,-0.536640,0.255777],[4,-0.535820,0.332717],[4,-0.533768,0.227120],[4,-0.539011,0.538081],[5,-0.533100,0.208078],[5,-0.538833,0.584827],[5,-0.533403,0.303150],[4,-0.532357,0.247606],[5,-0.526060,-0.192660],[4,-0.551778,0.805622],[3,-0.533189,0.442246],[5,-0.529514,0.218685],[3,-0.525972,-0.109912],[5,-0.531681,0.420150],[5,-0.529133,0.367581],[5,-0.522250,-0.168406],[4,-0.526719,0.344650],[5,-0.525800,0.371223],[5,-0.524798,0.334595],[5,-0.524311,0.315133],[4,-0.518729,-0.111807],[5,-0.520557,0.118783],[5,-0.513769,-0.384361],[5,-0.519578,0.156533],[5,-0.524974,0.524980],[5,-0.527458,0.660053],[5,-0.484249,-0.853552],[5,-0.509836,-0.388103],[5,-0.514877,0.216628],[5,-0.521644,0.603923],[5,-0.511785,0.046660],[5,-0.514785,0.422365],[5,-0.512951,0.374144],[5,-0.505556,-0.255485],[5,-0.520289,0.685743],[5,-0.517271,0.624630],[4,-0.509905,0.288540],[5,-0.510240,0.339224],[5,-0.504931,0.189039],[5,-0.470803,-0.858450],[5,-0.500435,-0.160278],[5,-0.499748,0.348631],[5,-0.501203,0.459772],[5,-0.493420,-0.163606],[4,-0.494094,-0.025186],[4,-0.494787,0.271399],[5,-0.494936,0.329312],[5,-0.494633,0.532471],[4,-0.492987,0.455216],[5,-0.486666,-0.086199],[5,-0.482562,-0.409274],[4,-0.478100,-0.584138],[5,-0.489588,0.458049],[5,-0.482477,0.114176],[4,-0.472728,-0.595291],[6,-0.460878,-0.783826],[4,-0.482603,0.317706],[5,-0.482571,0.431639],[4,-0.475030,-0.022256],[5,-0.466192,-0.583754],[5,-0.489065,0.766699],[5,-0.474091,0.235118],[5,-0.461134,-0.658888],[4,-0.470728,-0.009645],[5,-0.468239,-0.131250],[4,-0.470240,0.187154],[5,-0.470213,0.213615],[5,-0.470071,0.209644],[5,-0.467862,0.004244],[5,-0.468744,0.139099],[5,-0.466175,-0.159624],[5,-0.497919,0.860481],[5,-0.468988,0.271079],[5,-0.464869,-0.141645],[5,-0.494615,0.855460],[5,-0.462939,0.127952],[5,-0.466170,0.398540],[4,-0.455625,-0.486880],[5,-0.463539,0.289649],[5,-0.461161,0.381032],[5,-0.460450,0.469924],[5,-0.441830,-0.684411],[5,-0.450029,-0.189984],[4,-0.453422,0.224173],[4,-0.451355,0.274692],[5,-0.454760,0.537185],[5,-0.457879,0.657595],[5,-0.448775,0.141648],[4,-0.445917,-0.043903],[4,-0.441356,-0.426814],[5,-0.445738,0.052480],[4,-0.452169,0.549524],[4,-0.447374,0.309304],[5,-0.441851,-0.228859],[4,-0.446776,0.329661],[5,-0.436105,-0.483508],[5,-0.445694,0.443472],[5,-0.440974,0.109917],[5,-0.438197,-0.109915],[4,-0.442778,0.425651],[5,-0.436296,-0.049139],[5,-0.439797,0.404629],[5,-0.434436,-0.048094],[5,-0.436188,0.251651],[4,-0.433118,-0.078555],[4,-0.434479,0.240973],[5,-0.427572,-0.157696],[4,-0.431582,0.407962],[5,-0.459455,0.877456],[5,-0.431418,0.416074],[5,-0.429896,0.300373],[5,-0.428187,0.249861],[5,-0.425474,0.120317],[5,-0.425393,0.110123],[5,-0.422446,-0.233594],[5,-0.422159,-0.084829],[5,-0.446388,0.847345],[5,-0.420164,-0.140822],[5,-0.424912,0.439154],[5,-0.402208,-0.795776],[5,-0.422986,0.413447],[5,-0.423381,0.474071],[5,-0.423363,0.457791],[5,-0.413298,-0.479820],[5,-0.418227,0.094872],[5,-0.418633,0.197332],[5,-0.416584,0.037486],[5,-0.418501,0.408822],[5,-0.414047,0.065687],[5,-0.418048,0.471227],[5,-0.413034,0.170299],[5,-0.407956,-0.349514],[4,-0.414656,0.440230],[5,-0.415688,0.570836],[5,-0.411111,0.325171],[5,-0.411196,0.426080],[5,-0.400891,-0.517545],[5,-0.403827,-0.050859],[5,-0.390457,-0.742300],[5,-0.408724,0.539229],[5,-0.402558,0.048057],[5,-0.392529,-0.624006],[5,-0.400363,0.052043],[5,-0.404551,0.501702],[5,-0.397682,0.279061],[5,-0.396659,0.351624],[5,-0.392500,-0.187087],[4,-0.397438,0.441556],[5,-0.380509,-0.701852],[5,-0.392277,0.269875],[5,-0.397977,0.718995],[5,-0.383296,-0.366635],[5,-0.381233,-0.358300],[5,-0.388225,0.504734],[5,-0.380575,-0.329014],[5,-0.380642,-0.245803],[5,-0.400253,0.811611],[5,-0.374469,-0.501451],[5,-0.384356,0.577191],[5,-0.374800,-0.182196],[5,-0.374510,-0.133174],[4,-0.369072,-0.288375],[5,-0.369031,-0.158252],[5,-0.368460,-0.039460],[6,-0.363578,-0.414440],[4,-0.369121,0.314310],[5,-0.366773,0.098080],[5,-0.370808,0.529450],[4,-0.362093,-0.371993],[5,-0.367796,0.403476],[5,-0.365527,0.346647],[5,-0.361324,-0.039814],[5,-0.365255,0.461115],[5,-0.361303,0.064267],[5,-0.365791,0.561444],[5,-0.361320,0.211241],[5,-0.361908,0.291026],[5,-0.374622,0.795610],[5,-0.365527,0.635500],[5,-0.356555,-0.200444],[5,-0.356727,-0.081507],[5,-0.356838,0.059508],[5,-0.353104,-0.373951],[5,-0.353725,-0.184002],[5,-0.359020,0.459831],[5,-0.353648,-0.112857],[5,-0.354167,0.215058],[5,-0.351130,-0.085278],[5,-0.342502,-0.693792],[5,-0.352727,0.232472],[5,-0.350970,-0.031047],[5,-0.348281,-0.342663],[5,-0.346704,-0.389358],[5,-0.346166,-0.187109],[5,-0.350864,0.431852],[5,-0.349746,0.331371],[5,-0.345897,0.335727],[5,-0.347112,0.453988],[5,-0.345137,0.245703],[5,-0.343989,0.288874],[5,-0.341892,0.196005],[4,-0.339579,0.209265],[5,-0.344892,0.659493],[5,-0.340793,0.430053],[5,-0.334356,-0.375667],[5,-0.334005,-0.305203],[5,-0.331222,-0.412666],[5,-0.352086,0.846932],[5,-0.337051,0.582708],[5,-0.327695,-0.177086],[5,-0.332308,0.466071],[5,-0.326625,-0.034772],[4,-0.329794,0.420278],[5,-0.324477,-0.232444],[4,-0.327872,0.349550],[4,-0.322316,-0.171526],[5,-0.324823,0.418049],[4,-0.320699,-0.068648],[5,-0.322629,0.368063],[5,-0.320687,0.170202],[5,-0.318824,0.050409],[5,-0.317655,0.178714],[5,-0.316366,0.019581],[4,-0.320294,0.601834],[5,-0.289332,-0.880365],[5,-0.317794,0.548495],[5,-0.311589,-0.123205],[5,-0.314854,0.396674],[5,-0.310476,-0.205841],[5,-0.310105,0.011216],[4,-0.308933,-0.166144],[5,-0.309890,0.049607],[5,-0.307942,-0.126326],[5,-0.309595,0.374652],[4,-0.310281,0.479009],[5,-0.305690,-0.129428],[5,-0.307863,0.375427],[5,-0.307094,0.347101],[4,-0.305388,0.256224],[5,-0.303334,-0.079426],[5,-0.304486,0.129628],[4,-0.310695,0.717401],[6,-0.300319,-0.081124],[5,-0.299693,-0.099512],[5,-0.300791,0.202987],[5,-0.295588,-0.437966],[5,-0.307958,0.730821],[5,-0.303612,0.606344],[5,-0.298033,0.023445],[5,-0.291469,-0.633548],[5,-0.289616,-0.695399],[4,-0.299079,0.458991],[5,-0.297586,0.585439],[5,-0.291840,0.269578],[5,-0.291130,0.151999],[5,-0.287760,0.174767],[5,-0.283686,-0.118815],[5,-0.279224,-0.599512],[5,-0.285568,0.256694],[5,-0.284236,0.230178],[5,-0.286705,0.529438],[5,-0.282916,0.173344],[5,-0.281620,-0.037333],[5,-0.276432,-0.337058],[5,-0.279941,0.538572],[5,-0.275117,0.105778],[5,-0.278456,0.641013],[5,-0.269590,-0.348190],[5,-0.260799,-0.782953],[4,-0.275794,0.620335],[6,-0.267641,0.058688],[5,-0.265993,-0.253536],[4,-0.260107,-0.540541],[5,-0.270546,0.609185],[5,-0.265417,0.005279],[5,-0.265402,0.114994],[5,-0.265254,0.072182],[5,-0.269703,0.742394],[5,-0.260309,-0.056981],[4,-0.260212,-0.018810],[5,-0.263643,0.497298],[5,-0.260208,0.099693],[5,-0.263099,0.554315],[5,-0.261074,0.410639],[5,-0.257190,-0.238441],[5,-0.254319,-0.573123],[5,-0.256779,-0.007912],[4,-0.254710,0.044173],[5,-0.255849,0.237070],[5,-0.258893,0.614238],[4,-0.259106,0.632513],[5,-0.254947,0.258281],[5,-0.253890,0.414361],[5,-0.256271,0.610229],[5,-0.255946,0.604191],[4,-0.248324,-0.306149],[5,-0.250541,0.171611],[5,-0.249702,0.191689],[5,-0.247050,-0.163037],[5,-0.244864,-0.305871],[4,-0.244359,-0.291931],[5,-0.246487,0.297849],[5,-0.243254,-0.101267],[5,-0.243257,0.101791],[5,-0.240413,0.140901],[5,-0.242006,0.475084],[5,-0.239770,0.221236],[4,-0.245145,0.731100],[5,-0.241205,0.570557],[5,-0.236067,-0.223350],[5,-0.226640,-0.802752],[5,-0.240509,0.541142],[5,-0.243199,0.701935],[5,-0.238241,0.311510],[5,-0.234747,-0.247168],[5,-0.240005,0.586220],[5,-0.234778,-0.186008],[5,-0.221637,-0.845659],[5,-0.236289,0.254974],[5,-0.239221,0.616304],[4,-0.231753,-0.377336],[5,-0.235879,0.418727],[5,-0.229849,-0.380138],[5,-0.233765,0.393445],[5,-0.229026,-0.112445],[5,-0.228854,-0.079052],[5,-0.225680,-0.505440],[5,-0.228322,-0.047047],[5,-0.195233,-0.931980],[5,-0.229853,0.545447],[5,-0.223953,-0.116632],[5,-0.225791,0.610455],[5,-0.221240,-0.068358],[5,-0.220641,0.050565],[5,-0.211158,-0.729955],[5,-0.218050,-0.190745],[5,-0.218221,0.106915],[4,-0.218671,0.252394],[5,-0.214533,-0.423739],[5,-0.209878,-0.705836],[5,-0.213662,-0.219521],[5,-0.213617,-0.062865],[5,-0.210414,-0.551998],[5,-0.212294,-0.042235],[5,-0.211526,-0.118618],[4,-0.204967,-0.636657],[5,-0.237365,0.934279],[5,-0.202025,-0.668041],[5,-0.206582,0.038360],[4,-0.203774,0.040999],[5,-0.201968,-0.355414],[5,-0.203974,0.285237],[5,-0.207970,0.710280],[4,-0.201570,-1.769570e-4],[4,-0.201555,-1.745329e-4],[4,-0.199460,-0.401485],[5,-0.205524,0.638693],[5,-0.200878,0.079833],[5,-0.199441,-0.241068],[5,-0.200795,0.237892],[5,-0.198987,0.038692],[4,-0.197446,-0.093454],[5,-0.198844,0.292159],[5,-0.206388,0.821202],[4,-0.192113,-0.600649],[5,-0.193384,0.361794],[5,-0.189746,-0.013738],[5,-0.199180,0.821762],[5,-0.188289,-0.182707],[5,-0.190586,0.538725],[5,-0.186222,-0.212475],[5,-0.193769,0.784472],[5,-0.184008,-0.283573],[5,-0.183128,-0.369823],[5,-0.185628,0.360358],[5,-0.181377,-0.036913],[4,-0.182241,0.482829],[5,-0.185861,0.748681],[5,-0.178896,-0.296986],[5,-0.178855,0.172031],[5,-0.174494,-0.547736],[5,-0.179406,0.540650],[4,-0.177988,0.354612],[5,-0.175490,-0.274121],[5,-0.182594,0.772492],[5,-0.179365,0.619838],[5,-0.174351,0.127654],[5,-0.175637,0.507835],[5,-0.170450,-0.436998],[5,-0.173007,0.366200],[4,-0.172378,0.261482],[5,-0.171929,0.127361],[5,-0.172726,0.379359],[4,-0.168464,-0.378012],[4,-0.168265,-0.165820],[5,-0.167148,0.358697],[4,-0.163685,-0.504044],[5,-0.167137,0.382054],[5,-0.163580,-0.430125],[5,-0.153062,-0.840947],[5,-0.162479,0.409580],[5,-0.159387,-0.172849],[5,-0.159025,-0.123284],[5,-0.157978,0.338643],[5,-0.151600,-0.355660],[5,-0.154428,0.530621],[5,-0.153103,0.383399],[5,-0.150904,-0.263615],[5,-0.150834,0.597266],[5,-0.148555,0.086042],[4,-0.149376,0.397064],[4,-0.159540,0.887122],[5,-0.147135,0.148033],[5,-0.146155,-0.101723],[5,-0.145731,0.411651],[5,-0.143304,-0.142961],[5,-0.144733,0.367699],[5,-0.142358,-0.043554],[4,-0.142258,0.077084],[5,-0.142669,0.335342],[5,-0.138768,-0.444906],[5,-0.141115,0.328315],[5,-0.139665,0.379903],[4,-0.139576,0.463480],[5,-0.137283,0.183253],[5,-0.138150,0.452401],[5,-0.151600,0.922347],[5,-0.133435,0.102712],[5,-0.132547,-0.262925],[5,-0.132858,0.008402],[5,-0.131437,-0.223198],[4,-0.144072,0.905888],[5,-0.129156,-0.476440],[5,-0.130065,0.026287],[5,-0.131463,0.542337],[5,-0.128716,-0.257255],[5,-0.128261,-0.041137],[5,-0.125579,-0.184170],[5,-0.125875,0.391470],[5,-0.123899,-0.312896],[5,-0.120858,-0.684974],[5,-0.122803,-0.378649],[4,-0.123057,0.033348],[5,-0.121323,-0.509140],[5,-0.123785,0.664513],[4,-0.122378,0.466862],[5,-0.120209,-0.067240],[5,-0.116382,-0.353060],[5,-0.115604,-0.473620],[4,-0.115895,0.225986],[4,-0.116997,0.570618],[5,-0.115088,0.186550],[5,-0.113162,-0.256973],[5,-0.114698,0.428468],[5,-0.114473,0.458847],[5,-0.112429,0.018570],[5,-0.110084,-0.250149],[5,-0.109617,-0.392505],[5,-0.110566,0.075868],[5,-0.109157,-0.369828],[4,-0.114160,0.772713],[5,-0.109462,0.085923],[5,-0.110102,0.569615],[5,-0.107950,0.154758],[5,-0.108517,0.399406],[4,-0.103891,0.460016],[5,-0.102274,0.544859],[5,-0.101925,0.096861],[5,-0.098542,-0.374934],[5,-0.097232,-0.030521],[5,-0.094171,-0.600873],[5,-0.099324,0.756720],[5,-0.094832,-0.409000],[5,-0.094421,-0.067530],[5,-0.097103,0.711820],[5,-0.094737,0.500911],[4,-0.092100,-0.080304],[5,-0.091524,-0.372139],[4,-0.092448,0.455887],[5,-0.069791,-0.956994],[4,-0.090076,-0.291775],[4,-0.089772,-0.084067],[5,-0.089441,-0.117994],[5,-0.088807,-0.044749],[5,-0.088804,-0.159057],[4,-0.090512,0.675927],[5,-0.088595,0.451782],[5,-0.087767,0.384645],[4,-0.086089,0.210188],[5,-0.085671,0.271834],[5,-0.084723,-0.239955],[5,-0.085536,0.346107],[5,-0.083280,0.284975],[5,-0.081658,-0.132000],[5,-0.080728,0.107874],[5,-0.081903,0.578905],[5,-0.078222,-0.486559],[5,-0.075797,-0.541252],[5,-0.076843,0.290384],[4,-0.076861,0.604224],[4,-0.075673,0.207127],[5,-0.072975,-0.495552],[5,-0.071570,-0.559753],[5,-0.071848,0.393023],[5,-0.070642,0.223226],[5,-0.071512,0.704896],[5,-0.067698,-0.614131],[4,-0.067395,0.111819],[4,-0.065470,0.560587],[5,-0.062717,0.356441],[5,-0.058261,-0.800940],[4,-0.059035,-0.342555],[5,-0.072090,0.954077],[4,-0.058367,-0.184566],[5,-0.057948,0.198902],[4,-0.056886,0.280383],[5,-0.056455,-0.010886],[5,-0.054982,-0.133835],[5,-0.055416,0.366308],[5,-0.055390,0.300939],[4,-0.054427,-0.390034],[5,-0.054632,0.721782],[5,-0.051558,0.018347],[6,-0.047155,-0.793585],[5,-0.048776,-0.114468],[4,-0.048361,-0.419257],[5,-0.049053,0.408389],[5,-0.048150,0.161969],[5,-0.045544,0.471328],[5,-0.044131,-0.124748],[5,-0.043839,0.084651],[5,-0.045468,0.771394],[5,-0.045078,0.753592],[5,-0.042269,-0.287435],[5,-0.041151,-0.102286],[5,-0.040218,-0.158627],[4,-0.039807,-0.156742],[5,-0.039410,0.063357],[5,-0.038274,-0.135629],[4,-0.037713,-0.127615],[5,-0.036289,0.090403],[5,-0.033439,-0.821283],[5,-0.034483,-0.629787],[4,-0.034938,0.261987],[5,-0.034480,-0.160862],[5,-0.030519,-0.164455],[4,-0.030476,0.428810],[5,-0.029697,0.030436],[5,-0.029217,0.659155],[5,-0.027787,-0.468718],[4,-0.028241,0.561770],[5,-0.027790,-0.104317],[5,-0.028300,0.548067],[5,-0.026313,-0.024104],[5,-0.026375,0.672060],[5,-0.024359,0.603410],[5,-0.023002,0.009391],[5,-0.022511,0.329027],[5,-0.022569,0.257151],[5,-0.021285,-0.087261],[5,-0.020608,-0.126346],[5,-0.018866,0.081453],[5,-0.018862,-0.166525],[5,-0.017222,-0.869576],[5,-0.017531,0.025577],[5,-0.016389,0.168421],[5,-0.016363,-0.125009],[5,-0.016105,0.095826],[5,-0.015618,-0.078672],[5,-0.015432,-0.027544],[4,-0.012254,0.548612],[5,-0.011395,9.526591e-4],[6,-0.009683,0.547622],[6,-0.009687,0.438509],[5,-0.006414,0.390470],[5,-0.006235,0.528421],[5,-0.005821,-0.612277],[5,-0.005355,-0.871894],[5,-0.005265,-0.628495],[4,-0.004890,0.222989],[4,-0.003461,0.481145],[4,-0.002894,-0.031042],[5,-0.002334,-0.495815],[4,-0.002163,0.528970],[5,-0.001167,-0.263138],[5,0.002345,-0.453725],[5,0.002908,-0.469895],[4,0.003479,-0.796374],[5,0.003523,0.591669],[5,0.003977,-0.026426],[5,0.004734,0.240835],[4,0.004276,-0.052531],[5,0.005086,-0.265334],[5,0.005443,0.074186],[5,0.005676,0.650635],[4,0.008159,-0.152450],[5,0.009221,0.604283],[5,0.009443,-0.145250],[4,0.009821,-0.091970],[5,0.010254,0.663979],[5,0.010228,-0.719061],[5,0.011134,0.592743]];exports.stars = stars;var constellations=[[0,1],[2,1],[0,3],[4,3],[4,5],[6,5],[7,8],[9,8],[9,0],[8,0],[8,10],[11,10],[11,12],[9,13],[14,13],[15,13],[15,16],[17,18],[19,20],[20,21],[19,22],[17,23],[23,24],[23,25],[23,26],[21,17],[27,18],[27,21],[28,29],[29,30],[29,31],[30,31],[28,32],[32,33],[33,34],[34,28],[28,35],[35,36],[36,37],[37,38],[38,28],[39,40],[41,42],[40,43],[42,43],[43,44],[44,45],[45,46],[46,47],[48,43],[49,48],[50,51],[51,52],[53,54],[55,56],[57,52],[56,54],[52,56],[56,58],[58,53],[55,59],[60,61],[59,60],[61,62],[63,62],[63,64],[65,64],[66,59],[62,66],[62,59],[67,68],[62,68],[69,70],[71,70],[71,72],[72,73],[73,74],[74,75],[75,76],[76,77],[77,78],[78,79],[79,69],[80,81],[82,81],[81,83],[84,83],[84,85],[84,86],[85,86],[87,83],[88,82],[82,85],[89,88],[89,82],[90,91],[91,92],[92,93],[94,90],[95,92],[95,94],[93,96],[96,95],[92,97],[97,98],[98,91],[99,100],[101,99],[102,103],[104,102],[105,106],[106,107],[108,100],[101,104],[107,105],[103,109],[109,107],[109,110],[102,101],[110,111],[111,102],[111,112],[112,110],[113,114],[114,115],[115,116],[114,116],[117,118],[117,119],[120,121],[120,122],[120,123],[121,118],[118,122],[122,124],[125,126],[127,128],[128,129],[130,126],[127,126],[131,130],[132,131],[133,130],[133,134],[131,134],[135,130],[135,127],[135,136],[137,132],[138,139],[140,141],[141,142],[142,138],[143,144],[144,145],[146,147],[148,139],[149,148],[149,150],[143,151],[152,147],[152,153],[140,154],[154,155],[153,154],[156,157],[158,159],[159,160],[160,156],[161,162],[163,164],[164,165],[162,165],[166,165],[167,166],[167,168],[169,167],[167,170],[169,166],[169,171],[172,171],[172,173],[169,174],[174,175],[175,173],[175,176],[176,177],[177,178],[179,178],[180,178],[178,181],[175,182],[183,182],[183,184],[184,185],[185,173],[173,186],[186,187],[187,188],[188,189],[190,191],[192,191],[192,193],[194,193],[195,190],[195,196],[193,194],[197,193],[194,196],[196,198],[198,195],[190,199],[200,199],[201,202],[202,203],[204,205],[206,205],[206,207],[203,208],[208,204],[209,210],[204,210],[210,211],[212,209],[213,212],[211,213],[201,206],[214,215],[216,215],[216,217],[217,215],[217,218],[217,219],[219,220],[220,221],[221,216],[222,216],[223,221],[221,224],[224,225],[226,227],[226,228],[229,230],[231,230],[232,230],[232,233],[234,230],[233,235],[229,236],[233,237],[238,233],[236,239],[240,241],[240,242],[242,241],[229,241],[239,238],[239,243],[244,243],[245,246],[247,248],[249,250],[249,247],[251,249],[252,250],[252,247],[253,254],[255,256],[255,253],[257,258],[258,259],[259,253],[259,254],[253,256],[260,261],[261,262],[261,263],[261,264],[261,265],[266,267],[266,268],[269,270],[269,266],[268,271],[271,272],[273,272],[270,268],[274,270],[273,274],[275,276],[277,278],[276,279],[280,278],[279,281],[282,280],[281,282],[283,284],[285,286],[287,288],[289,290],[288,291],[292,288],[293,292],[291,293],[294,293],[295,296],[297,298],[298,299],[300,301],[302,301],[302,303],[304,303],[304,305],[300,297],[300,306],[307,306],[307,308],[309,310],[308,310],[305,308],[305,311],[305,300],[312,313],[312,314],[315,313],[315,312],[316,312],[316,317],[316,318],[318,319],[320,314],[319,320],[321,322],[323,324],[324,325],[326,325],[326,321],[326,321],[325,321],[323,325],[327,328],[329,327],[330,329],[331,330],[332,331],[333,332],[333,334],[335,336],[336,337],[337,338],[338,335],[334,339],[334,340],[339,337],[339,341],[342,343],[344,342],[345,346],[346,347],[347,348],[348,349],[349,350],[350,351],[352,353],[354,352],[354,355],[353,356],[351,357],[355,358],[356,359],[360,361],[358,362],[359,363],[362,364],[363,365],[365,366],[364,367],[368,357],[367,369],[366,370],[371,370],[369,372],[371,373],[374,368],[375,374],[372,376],[376,375],[373,377],[377,360],[378,379],[380,379],[378,381],[381,382],[382,383],[383,384],[384,378],[384,385],[385,380],[386,387],[388,386],[389,390],[391,388],[390,392],[393,394],[393,395],[393,396],[393,392],[397,392],[397,398],[390,392],[390,389],[399,400],[401,396],[402,391],[401,403],[401,391],[400,401],[404,405],[406,407],[406,408],[406,409],[406,410],[409,411],[407,412],[407,405],[411,412],[413,414],[415,413],[416,417],[418,416],[419,420],[421,414],[421,415],[420,422],[418,419],[423,424],[425,418],[426,422],[424,427],[428,429],[430,429],[422,418],[430,431],[432,431],[432,433],[422,434],[435,421],[434,435],[427,425],[425,426],[426,433],[436,437],[437,438],[438,439],[439,436],[437,440],[441,442],[443,441],[267,443],[444,269],[445,444],[446,445],[447,446],[448,449],[449,450],[450,451],[452,448],[451,452],[453,451],[442,454],[454,453],[455,456],[457,456],[457,458],[458,459],[459,460],[461,462],[463,462],[464,462],[464,463],[465,466],[467,468],[467,469],[469,470],[470,465],[468,470],[471,466],[471,470],[466,472],[472,473],[474,475],[476,474],[477,478],[475,477],[479,480],[480,474],[481,482],[478,483],[474,484],[479,475],[479,482],[474,483],[483,485],[485,486],[486,478],[480,487],[487,488],[489,480],[490,491],[490,492],[493,494],[493,490],[492,495],[496,493],[495,497],[497,498],[498,496],[499,500],[501,502],[494,500],[494,502],[494,491],[503,504],[505,503],[506,507],[506,503],[504,506],[507,508],[509,510],[509,511],[512,510],[512,511],[510,513],[514,515],[515,516],[516,517],[514,518],[518,519],[514,520],[514,521],[521,522],[521,523],[523,524],[524,525],[523,526],[526,527],[527,528],[526,529],[529,530],[530,531],[531,532],[530,533],[533,517],[534,517],[535,517],[535,536],[537,538],[538,517],[536,537],[539,540],[540,541],[541,542],[543,544],[544,542],[545,543],[546,547],[548,549],[549,550],[550,551],[550,552],[553,546],[547,554],[555,552],[555,554],[549,553],[556,557],[558,557],[559,556],[558,559],[560,561],[561,562],[563,562],[563,564],[564,565],[565,566],[560,564],[565,567],[568,569],[568,570],[570,571],[571,568],[567,569],[567,572],[572,573],[574,575],[576,574],[577,578],[578,579],[578,576],[580,576],[580,581],[580,582],[582,581],[583,581],[584,585],[585,586],[587,586],[587,588],[589,590],[590,591],[591,592],[590,593],[594,595],[596,597],[598,599],[598,600],[600,599],[601,599],[600,602],[602,603],[604,605],[606,604],[605,607],[607,606],[608,609],[609,610],[610,608],[611,612],[613,612],[613,614],[615,614],[616,617],[618,617],[619,616],[611,620],[621,619],[620,622],[620,623],[624,623],[624,625],[626,625],[627,626],[622,621],[611,621],[628,621],[622,628],[629,622],[629,630],[630,631],[632,633],[633,634],[634,635],[636,632],[637,636],[638,637],[639,640],[639,641],[641,642],[642,643],[643,644],[644,645],[646,640],[647,648],[649,632],[649,646],[646,647],[639,650],[651,639],[650,652],[649,652],[653,654],[655,652],[650,656],[656,657],[657,658],[657,654],[658,653],[659,660],[660,661],[661,662],[663,662],[664,665],[663,664],[663,665],[666,665],[662,659],[667,661],[667,668],[669,661],[669,668],[7,670],[670,671],[672,673],[672,674],[673,675],[671,676],[671,677],[678,671],[670,679],[672,673],[680,672],[681,682],[681,683],[684,685],[678,672],[680,681],[686,678],[679,7],[686,684],[671,680],[671,679],[687,688],[687,689],[688,690],[689,691],[692,693],[690,694],[694,692],[691,695],[696,695],[697,698],[697,691],[696,699],[698,700],[701,702],[700,703],[703,701],[699,704],[704,705],[706,705],[691,690],[707,690],[707,708],[688,689],[700,692],[693,709],[710,711],[710,712],[713,714],[712,715],[713,712],[716,712],[710,717],[716,710],[715,710],[711,717],[714,718],[713,718],[719,720],[721,722],[723,724],[720,724],[724,725],[725,722],[722,720],[726,727],[728,727],[726,729],[729,727],[727,730],[730,731],[731,732],[732,733],[733,728],[734,735],[736,737],[737,738],[738,736],[739,737],[740,734],[741,739],[742,740],[742,741],[743,744],[744,745],[746,743],[745,747],[747,748],[748,746],[749,747],[735,749],[151,750],[150,751],[752,753],[753,754],[754,751],[755,752],[756,752],[756,751],[755,750],[750,757],[757,758],[758,759],[760,761],[762,760],[761,763],[763,762],[762,761],[763,760],[764,765],[766,767],[766,767],[767,768],[769,768],[770,769],[770,771],[771,772],[769,773],[773,774],[774,775],[775,776],[776,777],[777,778],[778,779],[780,781],[780,782],[779,783],[784,785],[781,785],[783,784],[786,787],[787,788],[789,786],[789,788],[790,791],[791,792],[793,790],[793,794],[795,794],[795,796],[796,793],[797,616],[792,797],[798,799],[800,798],[801,800],[802,801],[631,802],[631,803],[804,803],[805,806],[807,808],[807,809],[806,809],[808,805],[810,811],[810,812],[813,810],[814,815],[816,817],[815,816],[818,816],[819,816],[820,819],[821,819],[821,822],[822,820],[823,824],[825,826],[826,821],[824,827],[828,829],[826,829],[822,829],[818,830],[830,817],[820,831],[831,823],[823,820],[817,814],[832,833],[834,832],[835,834],[835,836],[835,837],[832,838],[832,839],[833,840],[836,841],[842,835],[843,842],[844,835],[845,843],[846,844],[847,848],[847,849],[850,845],[851,849],[852,847],[848,846],[853,854],[854,855],[854,856],[856,857],[857,858],[858,859],[859,860],[860,861],[861,854],[862,863],[864,862],[865,864],[863,865],[866,867],[866,868],[867,868],[869,870],[869,871],[872,869],[873,872],[871,873],[874,875],[875,876],[875,877],[878,879],[879,880],[879,881],[882,878],[883,884],[884,882],[885,874],[883,886],[876,885],[887,876],[888,887],[886,888],[880,889],[881,890],[877,891],[890,891],[889,892],[893,877],[892,893],[894,895],[895,896],[897,894],[896,897],[898,897],[899,898],[900,899],[901,902],[151,903],[904,151],[903,905],[905,906],[906,907],[907,901],[908,904],[902,908],[909,910],[911,909],[911,912],[913,912],[914,911],[915,914],[913,916],[917,916],[918,914],[919,918],[917,920],[921,919],[917,919],[913,918],[922,923],[924,922],[923,925],[925,926],[926,927],[927,928],[910,929],[929,930],[930,911],[931,932],[933,932],[934,932],[935,932],[936,931],[932,936],[937,932],[934,937],[145,146],[938,939]];exports.constellations = constellations;function stereographicProjectStars(lam1,phi1,rad){function sinSum(cosa,sina,cosb,sinb){return cosa * sinb + sina * cosb;}function cosSum(cosa,sina,cosb,sinb){return cosa * cosb - sina * sinb;}var len=stars.length,i;var res=Array(len);var cphi=Math.cos(phi1),sphi=Math.sin(phi1);var clam=Math.cos(lam1),slam=Math.sin(lam1);for(i = 0;i < len;++i) {var star=stars[i];var mag=star[0],re=star[2],de=-star[1];var t2c=re * re,t2l=de * de,t2c1=1 + t2c,t2l1=1 + t2l;var cosc=(1 - t2c) / t2c1,sinc=2 * re / t2c1;var cosl1=(1 - t2l) / t2l1,sinl1=2 * de / t2l1;var cosl=cosSum(cosl1,sinl1,clam,slam),sinl=sinSum(cosl1,sinl1,clam,slam);var k=rad / (1.0 + sphi * sinc + cphi * cosc * cosl);var x=k * cosc * sinl,y=k * (cphi * sinc - sphi * cosc * cosl);res[i] = [mag,x,y,x * x + y * y < rad * rad];}return res;}function stereographicProjectObj(re,de,lam1,phi1,rad){var DEG2RAD=_vendorStarjsMinJs.StarJs.Math.DEG2RAD;var cphi=Math.cos(phi1),sphi=Math.sin(phi1);de = lam1 - de;var cosc=Math.cos(re),sinc=Math.sin(re);var cosl=Math.cos(de),sinl=Math.sin(de);var k=rad / (1.0 + sphi * sinc + cphi * cosc * cosl);var x=k * cosc * sinl,y=k * (cphi * sinc - sphi * cosc * cosl);return [x,y,x * x + y * y < rad * rad];}function stereoProject(body,size,lng,lat,time){var Ti=_vendorStarjsMinJs.StarJs.Time;var halfsize=Math.floor(size / 2);if(typeof time === 'undefined'){time = +new Date();}else if(typeof time !== 'number'){time = +time;}var mjd=Ti.time2mjd(time);var gms_t=Ti.gmst(mjd); /** @const */var DEG2RAD=_vendorStarjsMinJs.StarJs.Math.DEG2RAD;lng *= DEG2RAD;lat *= DEG2RAD;lng += gms_t;var jct=Ti.mjd2jct(mjd);var cc=body.getCoord(jct,_vendorStarjsMinJs.StarJs.Solar.BODIES.Earth.keplerCoord(jct),_vendorStarjsMinJs.StarJs.Coord.ecl2equMatrix(jct));var cm=stereographicProjectObj(cc.theta,cc.phi,lng,lat,size / 2);var xx=halfsize - cm[0];var yy=halfsize - cm[1];return {x:xx / size,y:1. - yy / size,visible:cm[2]};}function stereoProjectStars(size,lng,lat,time){var Ti=_vendorStarjsMinJs.StarJs.Time;if(typeof time === 'undefined'){time = +new Date();}else if(typeof time !== 'number'){time = +time;}var mjd=Ti.time2mjd(time);var gms_t=Ti.gmst(mjd); /** @const */var DEG2RAD=_vendorStarjsMinJs.StarJs.Math.DEG2RAD;lng *= DEG2RAD;lat *= DEG2RAD;lng += gms_t;return stereographicProjectStars(lng,lat,Math.floor(size / 2));}

},{"./vendor/starjs.min.js":18}],18:[function(_dereq_,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
var StarJs = {};exports.StarJs = StarJs;
StarJs.b = {};StarJs.Math = StarJs.b;StarJs.b.l = Math.PI / 180;StarJs.b.DEG2RAD = Math.PI / 180;StarJs.b.oa = 180 / Math.PI;StarJs.b.RAD2DEG = 180 / Math.PI;StarJs.b.na = 648E3 / Math.PI;StarJs.b.RAD2ARCS = 648E3 / Math.PI;StarJs.b.t = Math.PI / 648E3;StarJs.b.ARCS2RAD = Math.PI / 648E3;StarJs.b.m = 2 * Math.PI;StarJs.b.PI2 = 2 * Math.PI;StarJs.b.Y = 12 / Math.PI;StarJs.b.W = function (a) {
  return a * a;
};StarJs.b.sqr = StarJs.b.W;StarJs.b.r = function (a) {
  return a - Math.floor(a);
};StarJs.b.frac = StarJs.b.r;StarJs.b.I = function (a, b) {
  return b * StarJs.b.r(a / b);
};
StarJs.b.mod = StarJs.b.I;StarJs.b.s = function (a, b, c, d) {
  if (arguments.length === 4) {
    this.sign = a;this.degree = b;this.minute = c;this.second = d;
  } else {
    var e = a;this.sign = 1;if (e < 0) {
      e = -e;this.sign = -1;
    }this.degree = Math.floor(e);e = 60 * (e - this.degree);this.minute = Math.floor(e);this.second = e = 60 * (e - this.minute);
  }
};StarJs.b.Dms = StarJs.b.s;StarJs.b.H = function (a, b, c, d) {
  return a * (b + c / 60 + d / 3600);
};StarJs.b.dms2deg = StarJs.b.H;StarJs.b.s.prototype.H = function () {
  return StarJs.b.H(this.sign, this.degree, this.minute, this.second);
};
StarJs.b.s.prototype.dms2deg = StarJs.b.s.prototype.H;StarJs.b.s.N = function (a) {
  return new StarJs.b.s(a);
};StarJs.b.s.deg2dms = StarJs.b.s.N;StarJs.b.aa = function (a) {
  a = StarJs.b.I(a, StarJs.b.m);a = StarJs.b.N(StarJs.b.Y * a);a.hour = a.deg;delete a.deg;delete a.sign;return a;
};StarJs.b.angle2hms = StarJs.b.aa;
StarJs.b.V = function (a, b, c) {
  var d = 0.5 * (c + a) - b,
      e = 0.5 * (c - a);a = -e / (2 * d);c = (d * a + e) * a + b;e = e * e - 4 * d * b;b = [];if (e >= 0) {
    e = 0.5 * Math.sqrt(e) / Math.abs(d);d = a - e;e = a + e;Math.abs(d) <= 1 && b.push(d);Math.abs(e) <= 1 && b.push(e);
  }return { xe: a, ye: c, roots: b };
};StarJs.b.quadInterpolation = StarJs.b.V;StarJs.c = {};StarJs.Vector = StarJs.c;StarJs.c.p = function (a, b, c) {
  this.x = a;this.y = b;this.z = c;
};StarJs.c.Vector3 = StarJs.c.p;
(function (a) {
  a.ga = function () {
    return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
  };a.len = a.ga;a.add = function (b) {
    return new StarJs.c.p(this.x + b.x, this.y + b.y, this.z + b.z);
  };a.add = a.add;a.sub = function (b) {
    return new StarJs.c.p(this.x - b.x, this.y - b.y, this.z - b.z);
  };a.sub = a.sub;a.ia = function () {
    return new StarJs.c.p(-this.x, -this.y, -this.z);
  };a.neg = a.ia;a.scale = function (b) {
    return new StarJs.c.p(b * this.x, b * this.y, b * this.z);
  };a.scale = a.scale;a.J = function () {
    return new StarJs.c.p(this.x, this.y, this.z);
  };a.clone = a.J;
})(StarJs.c.p.prototype);StarJs.c.o = function (a, b, c) {
  var d = arguments.length;if (d === 2) c = 1;if (d === 2 || d === 3) {
    this.phi = a;this.theta = b;this.rad = c;
  } else {
    d = a.x * a.x + a.y * a.y;this.rad = Math.sqrt(d + a.z * a.z);this.phi = a.x === 0 && a.y === 0 ? 0 : Math.atan2(a.y, a.x);if (this.phi < 0) this.phi += StarJs.b.m;d = Math.sqrt(d);this.theta = a.z === 0 && d === 0 ? 0 : Math.atan2(a.z, d);
  }
};StarJs.c.Polar3 = StarJs.c.o;
(function (a) {
  a.G = function () {
    var b = Math.cos(this.theta),
        c = this.rad;return new StarJs.c.p(c * b * Math.cos(this.phi), c * b * Math.sin(this.phi), c * Math.sin(this.theta));
  };a.toVector3 = a.G;a.J = function () {
    return new StarJs.c.o(this.rad, this.phi, this.theta);
  };a.clone = a.J;
})(StarJs.c.o.prototype);StarJs.c.g = function (a, b, c) {
  this.mat = arguments.length === 3 ? [[a.x, a.y, a.z], [b.x, b.y, b.z], [c.x, c.y, c.z]] : b ? a : [[a[0][0], a[0][1], a[0][2]], [a[1][0], a[1][1], a[1][2]], [a[2][0], a[2][1], a[2][2]]];
};StarJs.c.Matrix3 = StarJs.c.g;
(function (a) {
  a.apply = function (b) {
    var c = this.mat[0],
        d = c[0] * b.x + c[1] * b.y + c[2] * b.z;c = this.mat[1];var e = c[0] * b.x + c[1] * b.y + c[2] * b.z;c = this.mat[2];return new StarJs.c.p(d, e, c[0] * b.x + c[1] * b.y + c[2] * b.z);
  };a.apply = a.apply;a.v = function (b) {
    var c = [[0, 0, 0], [0, 0, 0], [0, 0, 0]];b = b.mat;for (var d = 0; d < 3; d += 1) for (var e = this.mat[d], g = c[d], j = 0; j < 3; j += 1) for (var n = 0; n < 3; n += 1) g[j] += e[n] * b[n][j];return new StarJs.c.g(c, true);
  };a.mult = a.v;
})(StarJs.c.g.prototype);
StarJs.c.g.A = function (a) {
  var b = Math.cos(a);a = Math.sin(a);return new StarJs.c.g([[1, 0, 0], [0, b, a], [0, -a, b]]);
};StarJs.c.g.r_x = StarJs.c.g.A;StarJs.c.g.F = function (a) {
  var b = Math.cos(a);a = Math.sin(a);return new StarJs.c.g([[b, 0, -a], [0, 1, 0], [a, 0, b]]);
};StarJs.c.g.r_y = StarJs.c.g.F;StarJs.c.g.B = function (a) {
  var b = Math.cos(a);a = Math.sin(a);return new StarJs.c.g([[b, a, 0], [-a, b, 0], [0, 0, 1]]);
};StarJs.c.g.r_y = StarJs.c.g.F;StarJs.f = {};StarJs.Time = StarJs.f;StarJs.f.DEFAULT_JULIAN_DATE = { year: 1582, month: 10, day: 4 };StarJs.f.DEFAULT_JULIAN_JD = 2299161;StarJs.f.ma = function (a) {
  if (typeof a !== "number") a = a.getTime();return a / 864E5 + 40587;
};StarJs.f.time2mjd = StarJs.f.ma;
StarJs.f.ha = function (a, b) {
  if (typeof b === "undefined") b = StarJs.f.DEFAULT_JULIAN_JD;var c = Math.floor(a) + 2400001,
      d,
      e;if (c < b) b = c + 1524;else {
    b = Math.floor((c - 1867216.25) / 36524.25);b = c + b - Math.floor(b / 4) + 1525;
  }c = Math.floor((b - 122.1) / 365.25);d = 365 * c + Math.floor(c / 4);e = Math.floor((b - d) / 30.6001);b = b - d - Math.floor(30.6001 * e);e = e - 1 - 12 * Math.floor(e / 14);c = c - 4715 - Math.floor((7 + e) / 10);a = StarJs.f.U(24 * (a - Math.floor(a)));a.year = c;a.month = e;a.day = b;return a;
};StarJs.f.mjd2dt = StarJs.f.ha;
StarJs.f.T = function (a, b, c) {
  return a + b / 60 + c / 3600;
};StarJs.f.hms2hour = StarJs.f.T;StarJs.f.U = function (a) {
  a = new StarJs.b.s(a);return { hour: a.degree, minute: a.minute, second: a.second };
};StarJs.f.hour2hms = StarJs.f.U;
StarJs.f.ba = function (a, b) {
  if (typeof b === "undefined") b = StarJs.f.DEFAULT_JULIAN_DATE;var c = a.year,
      d = a.month;if (d <= 2) {
    d += 12;c -= 1;
  }return 365 * c - 679004 + (c <= b.year && d <= b.month && a.day <= b.day ? -2 + Math.floor((c + 4716) / 4) - 1179 : Math.floor(c / 400) - Math.floor(c / 100) + Math.floor(c / 4)) + Math.floor(30.6001 * (d + 1)) + a.day + StarJs.f.T(a.hour, a.minute, a.second) / 24;
};StarJs.f.dt2mjd = StarJs.f.ba;StarJs.f.K = function (a) {
  return (a - 51544.5) / 36525;
};StarJs.f.mjd2jct = StarJs.f.K;
StarJs.f.S = function (a) {
  var b = Math.floor(a),
      c = 86400 * (a - b);b = StarJs.f.K(b);a = StarJs.f.K(a);return StarJs.b.m / 86400 * StarJs.b.I(24110.54841 + 8640184.812866 * b + 1.0027379093 * c + (0.093104 - 6.2E-6 * a) * a * a, 86400);
};StarJs.f.gmst = StarJs.f.S;StarJs.j = {};StarJs.Coord = StarJs.j;StarJs.j.ja = function (a, b) {
  b = b - a;var c, d;c = 174.876383889 * StarJs.b.l + ((3289.4789 + 0.60622 * a) * a + (-869.8089 - 0.50491 * a + 0.03536 * b) * b) * StarJs.b.t;d = (47.0029 - (0.06603 - 5.98E-4 * a) * a + (-0.03302 + 0.00598 * a + 6.0E-5 * b) * b) * b * StarJs.b.t;return StarJs.c.g.B(-(c + (5029.0966 + (2.22226 - 4.2E-5 * a) * a + (1.11113 - 4.2E-5 * a - 6.0E-6 * b) * b) * b * StarJs.b.t)).v(StarJs.c.g.A(d)).v(StarJs.c.g.B(c));
};StarJs.j.precessionEclMatrix = StarJs.j.ja;
StarJs.j.ka = function (a, b) {
  var c = b - a,
      d;b = (2306.2181 + (1.39656 - 1.39E-4 * a) * a + (0.30188 - 3.44E-4 * a + 0.017998 * c) * c) * c * StarJs.b.t;d = b + (0.7928 + 4.11E-4 * a + 2.05E-4 * c) * c * c * StarJs.b.t;a = (2004.3109 - (0.8533 + 0.00217 * a) * a - (0.42665 + 2.17E-4 * a + 0.041833 * c) * c) * c * StarJs.b.t;return StarJs.c.g.B(-d).v(StarJs.c.g.F(a)).v(StarJs.c.g.B(-b));
};StarJs.j.precessionEquMatrix = StarJs.j.ka;StarJs.j.da = function (a) {
  return StarJs.c.g.A((23.43929111 - (46.815 + (5.9E-4 - 0.001813 * a) * a) * a / 3600) * StarJs.l);
};StarJs.j.equ2eclMatrix = StarJs.j.da;
StarJs.j.ca = function (a) {
  return StarJs.c.g.A(-((23.43929111 - (46.815 + (5.9E-4 - 0.001813 * a)) * a) * StarJs.b.l));
};StarJs.j.ecl2equMatrix = StarJs.j.ca;StarJs.j.ea = function (a, b, c) {
  a = StarJs.c.g.F(Math.PI / 2 - c).apply(new StarJs.c.o(b, a).G());a = new StarJs.c.o(a);return { h: a.theta, az: a.phi };
};StarJs.j.equ2hor = StarJs.j.ea;StarJs.j.fa = function (a, b, c) {
  a = StarJs.c.g.F(-Math.PI / 2 + c).apply(new StarJs.c.o(b, c).G());a = new StarJs.c.o(a);return { dec: a.theta, tau: a.phi };
};StarJs.j.hor2equ = StarJs.j.fa;StarJs.k = {};StarJs.Kepler = StarJs.k;StarJs.k.DEFAULT_ITERATIONS = 100;StarJs.k.DEFAULT_PRECISION = 1.0E-9;StarJs.k.P = function (a, b, c) {
  var d,
      e = StarJs.k.DEFAULT_PRECISION;if (c === undefined) c = StarJs.k.DEFAULT_ITERATIONS;a = StarJs.b.I(a, StarJs.b.m);d = Math.sin(a);var g = a + b * d / (1 - Math.sin(a + b) + d);do {
    d = g - b * Math.sin(g) - a;g -= d / (1 - b * Math.cos(g));
  } while (c-- > 0 && d > e);return c > 0 ? g : null;
};StarJs.k.eccAnomaly = StarJs.k.P;
StarJs.k.Q = function (a, b, c, d) {
  b = StarJs.k.P(b, d);a = Math.cos(b);b = Math.sin(b);return new StarJs.c.p(c * (a - d), c * Math.sqrt((1 - d) * (1 + d)) * b, 0);
};StarJs.k.elliptic = StarJs.k.Q;StarJs.k.R = function (a, b, c) {
  return StarJs.c.g.B(-a).v(StarJs.c.g.A(-b)).v(StarJs.c.g.B(-c));
};StarJs.k.gaussVec = StarJs.k.R;StarJs.d = {};StarJs.Solar = StarJs.d;StarJs.d.L = 23.43920111 * StarJs.b.l;
StarJs.d.D = function (a) {
  var b, c, d, e, g, j;b = StarJs.b.r(0.606433 + 1336.855225 * a);c = StarJs.b.m * StarJs.b.r(0.374897 + 1325.55241 * a);d = StarJs.b.m * StarJs.b.r(0.993133 + 99.997361 * a);g = StarJs.b.m * StarJs.b.r(0.827361 + 1236.853086 * a);e = StarJs.b.m * StarJs.b.r(0.259086 + 1342.227825 * a);j = +22640 * Math.sin(c) - 4586 * Math.sin(c - 2 * g) + 2370 * Math.sin(2 * g) + 769 * Math.sin(2 * c) - 668 * Math.sin(d) - 412 * Math.sin(2 * e) + -212 * Math.sin(2 * c - 2 * g) - 206 * Math.sin(c + d - 2 * g) + 192 * Math.sin(c + 2 * g) - 165 * Math.sin(d - 2 * g) + -125 * Math.sin(g) - 110 * Math.sin(c + d) + 148 * Math.sin(c - d) + -55 * Math.sin(2 * e - 2 * g);a = e + (j + 412 * Math.sin(2 * e) + 541 * Math.sin(d)) * StarJs.b.t;g = e - 2 * g;c = -526 * Math.sin(g) + 44 * Math.sin(c + g) - 31 * Math.sin(g - c) + -23 * Math.sin(d + g) + 11 * Math.sin(g - d) - 25 * Math.sin(e - 2 * c) + 21 * Math.sin(e - c);b = StarJs.b.m * StarJs.b.r(b + j / 1296E3);a = (18520 * Math.sin(a) + c) * StarJs.b.t;b = StarJs.c.g.A(-StarJs.d.L).apply(new StarJs.c.o(b, a).G());b = new StarJs.c.o(b);return { ra: b.phi, dec: b.theta };
};StarJs.d.approxMoon = StarJs.d.D;
StarJs.d.u = function (a) {
  var b, c;c = StarJs.b.r(0.993133 + 99.997361 * a);b = StarJs.b.m * c;a = StarJs.b.m * StarJs.b.r(0.7859453 + c + (6893 * Math.sin(b) + 72 * Math.sin(2 * b) + 6191.2 * a) / 1296E3);a = StarJs.c.g.A(-StarJs.d.L).apply(new StarJs.c.o(a, 0).G());a = new StarJs.c.o(a);return { ra: a.phi, dec: a.theta };
};StarJs.d.approxSun = StarJs.d.u;
StarJs.d.$ = [{ body: "moon", name: "day", title: "Moon", sinh0: Math.sin(+8 / 60 * StarJs.b.l), posFunc: StarJs.d.D }, { body: "sun", name: "day", title: "Sun", sinh0: Math.sin(-50 / 60 * StarJs.b.l), posFunc: StarJs.d.u }, { body: "sun", name: "twilightC", title: "Civil twilight", sinh0: Math.sin(-6 * StarJs.b.l), posFunc: StarJs.d.u }, { body: "sun", name: "twilightN", title: "Nautical twilight", sinh0: Math.sin(-12 * StarJs.b.l), posFunc: StarJs.d.u }, { body: "sun", name: "twilightA", title: "Astronomical twilight", sinh0: Math.sin(-18 * StarJs.b.l), posFunc: StarJs.d.u }];
StarJs.d.la = function (a, b, c, d, e) {
  function g(o, r, y, z, A) {
    o = o((r - 51544.5) / 36525);r = StarJs.f.S(r) + y - o.ra;return A * Math.sin(o.dec) + z * Math.cos(o.dec) * Math.cos(r);
  }var j = StarJs.d.$,
      n = [],
      l,
      i,
      k,
      w = 1 / 24,
      q = {},
      s = {},
      v = {},
      p = Math.cos(d);d = Math.sin(d);var h,
      f,
      t = { sun: {}, moon: {} },
      x = { sun: {}, moon: {} },
      u = { sun: {}, moon: {} },
      m = {};if (typeof e === "undefined") e = function (o) {
    return o;
  };k = a;q.moon = g(StarJs.d.D, k, c, p, d);q.sun = g(StarJs.d.u, k, c, p, d);for (i = 0; i < j.length; i += 1) {
    f = j[i];h = f.name;t[f.body][h] = q[f.body] - f.sinh0;
  }for (; k < b;) {
    e = { moon: { midnight: q.moon },
      sun: { midnight: q.sun } };for (l = 1; l < 24; l += 2) {
      i = k + w;k = i + w;s.moon = g(StarJs.d.D, i, c, p, d);s.sun = g(StarJs.d.u, i, c, p, d);v.moon = g(StarJs.d.D, k, c, p, d);v.sun = g(StarJs.d.u, k, c, p, d);for (i = 0; i < j.length; i += 1) {
        f = j[i];h = f.name;e[f.body][h] = e[f.body][h] || {};x[f.body][h] = s[f.body] - f.sinh0;u[f.body][h] = v[f.body] - f.sinh0;m = StarJs.b.V(t[f.body][h], x[f.body][h], u[f.body][h]);switch (m.roots.length) {case 0:
            break;case 1:
            if (t[f.body][h] < 0) e[f.body][h].rise = l + m.roots[0];else e[f.body][h].set = l + m.roots[0];break;case 2:
            if (m.ye < 0) {
              e[f.body][h].rise = l + m.roots[1];e[f.body][h].set = l + m.roots[0];
            } else {
              e[f.body][h].rise = l + m.roots[0];e[f.body][h].set = l + m.roots[1];
            }break;}
      }t = u;u = { moon: {}, sun: {} };k = k;
    }for (i = 0; i < j.length; i += 1) {
      f = j[i];h = f.name;if (!e[f.body][h].set && !e[f.body][h].rise) e[f.body][h].alwaysAbove = s[f.body] > f.sinh0;
    }k = a += 1;n.push(e);
  }return n;
};StarJs.d.sunAndMoonEvents = StarJs.d.la;StarJs.d.C = function () {
  this.name = "Sun";
};StarJs.d.Sun = StarJs.d.C;StarJs.d.C.X = new StarJs.c.p(0, 0, 0);StarJs.d.M = StarJs.b.W(0.01720209895);
StarJs.d.GM = StarJs.d.M;StarJs.d.C.prototype.keplerCoord = function () {
  return StarJs.d.C.X;
};StarJs.d.q = function (a, b) {
  this.name = a;this.a = b.a;this.ec = b.e;this.m0 = b.M0;this.n = b.n;this.omega = b.O;this.i = b.i;this.w = b.w;this.t0 = b.T0;
};StarJs.d.Body = StarJs.d.q;StarJs.d.q.prototype.keplerCoord = function (a) {
  var b = StarJs.k.Q(StarJs.d.M, StarJs.b.l * (this.m0 + this.n * (a - this.t0)), this.a, this.ec);return StarJs.k.R(StarJs.b.l * (this.omega + 1.397 * a), StarJs.b.l * this.i, StarJs.b.l * (this.w - this.omega)).apply(b);
};
StarJs.d.Z = { Sun: new StarJs.d.C(), Mercury: new StarJs.d.q("Mercury", { a: 0.387099, e: 0.205634, M0: 174.7947, n: 149472.6738, O: 48.331, i: 7.0048, w: 77.4552, T0: 0 }), Venus: new StarJs.d.q("Venus", { a: 0.723332, e: 0.006773, M0: 50.4071, n: 58517.8149, O: 76.68, i: 3.3946, w: 131.5718, T0: 0 }), Earth: new StarJs.d.q("Earth", { a: 1, e: 0.016709, M0: 357.5256, n: 35999.372, O: 174.876, i: 0, w: 102.94, T0: 0 }), Mars: new StarJs.d.q("Mars", { a: 1.523692, e: 0.093405, M0: 19.3879, n: 19140.3023, O: 49.557, i: 1.8496, w: 336.059, T0: 0 }), Jupiter: new StarJs.d.q("Jupiter", { a: 5.204267,
    e: 0.048775, M0: 18.8185, n: 3033.6272, O: 100.4908, i: 1.3046, w: 15.5576, T0: 0 }), Saturn: new StarJs.d.q("Saturn", { a: 9.582018, e: 0.055723, M0: 320.3477, n: 1213.8664, O: 113.6427, i: 2.4852, w: 89.6567, T0: 0 }), Uranus: new StarJs.d.q("Uranus", { a: 19.229412, e: 0.044406, M0: 142.9559, n: 426.9282, O: 73.9893, i: 0.7726, w: 170.531, T0: 0 }), Neptune: new StarJs.d.q("Neptune", { a: 30.103658, e: 0.011214, M0: 267.7649, n: 217.9599, O: 131.7942, i: 1.768, w: 37.4435, T0: 0 }) };StarJs.d.BODIES = StarJs.d.Z;

},{}]},{},[16])(16)
});
//# sourceMappingURL=data:application/json;charset:utf-8;base64,
